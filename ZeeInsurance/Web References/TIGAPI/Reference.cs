//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ZeeInsurance.TIGAPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CFS Schemes APISoap", Namespace="https://cfsnetwork.co.uk")]
    public partial class CFSSchemesAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetEventFeedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventExportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListArchivedRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArchiveDataItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreDataItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPolicyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestTokenValidityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProduceRenewalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProduceRenewalWithDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProduceQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProduceQuoteWithDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertRenewalOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulateTopXInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnreadMessageCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback MarkMessageUnreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSecureMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSecureMessageWithAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListDocumentsBySystemTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListPersonalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePersonalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDataProtectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditUserSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestPostcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestPostcodeAcceptanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestAddressAcceptanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback MemberMIOperationCompleted;
        
        private System.Threading.SendOrPostCallback TESTMemberMIOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChurchillsInterfaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAdviserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ToggleEnrichmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryGetCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOverrideCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RevokeOverrideCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PreviewPolicyCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PreviewAddonCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PolicyCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddonCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAPIPasswordOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CFSSchemesAPI() {
            this.Url = global::ZeeInsurance.Properties.Settings.Default.ZeeInsurance_TIGAPI_CFS_x0020_Schemes_x0020_API;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetEventFeedCompletedEventHandler GetEventFeedCompleted;
        
        /// <remarks/>
        public event GetEventCompletedEventHandler GetEventCompleted;
        
        /// <remarks/>
        public event GetEventExportCompletedEventHandler GetEventExportCompleted;
        
        /// <remarks/>
        public event ListRecordsCompletedEventHandler ListRecordsCompleted;
        
        /// <remarks/>
        public event ListArchivedRecordsCompletedEventHandler ListArchivedRecordsCompleted;
        
        /// <remarks/>
        public event ArchiveDataItemCompletedEventHandler ArchiveDataItemCompleted;
        
        /// <remarks/>
        public event RestoreDataItemCompletedEventHandler RestoreDataItemCompleted;
        
        /// <remarks/>
        public event GetPolicyDataCompletedEventHandler GetPolicyDataCompleted;
        
        /// <remarks/>
        public event GenerateTokenCompletedEventHandler GenerateTokenCompleted;
        
        /// <remarks/>
        public event TestTokenValidityCompletedEventHandler TestTokenValidityCompleted;
        
        /// <remarks/>
        public event ProduceRenewalCompletedEventHandler ProduceRenewalCompleted;
        
        /// <remarks/>
        public event ProduceRenewalWithDocumentsCompletedEventHandler ProduceRenewalWithDocumentsCompleted;
        
        /// <remarks/>
        public event ProduceQuoteCompletedEventHandler ProduceQuoteCompleted;
        
        /// <remarks/>
        public event ProduceQuoteWithDocumentsCompletedEventHandler ProduceQuoteWithDocumentsCompleted;
        
        /// <remarks/>
        public event CreateQuoteCompletedEventHandler CreateQuoteCompleted;
        
        /// <remarks/>
        public event ConvertQuoteCompletedEventHandler ConvertQuoteCompleted;
        
        /// <remarks/>
        public event ConvertRenewalCompletedEventHandler ConvertRenewalCompleted;
        
        /// <remarks/>
        public event PopulateTopXInfoCompletedEventHandler PopulateTopXInfoCompleted;
        
        /// <remarks/>
        public event GetUnreadMessageCountCompletedEventHandler GetUnreadMessageCountCompleted;
        
        /// <remarks/>
        public event GetMessagesCompletedEventHandler GetMessagesCompleted;
        
        /// <remarks/>
        public event GetMessageContentCompletedEventHandler GetMessageContentCompleted;
        
        /// <remarks/>
        public event MarkMessageUnreadCompletedEventHandler MarkMessageUnreadCompleted;
        
        /// <remarks/>
        public event DeleteMessageCompletedEventHandler DeleteMessageCompleted;
        
        /// <remarks/>
        public event SendSecureMessageCompletedEventHandler SendSecureMessageCompleted;
        
        /// <remarks/>
        public event SendSecureMessageWithAttachmentCompletedEventHandler SendSecureMessageWithAttachmentCompleted;
        
        /// <remarks/>
        public event ListDocumentsCompletedEventHandler ListDocumentsCompleted;
        
        /// <remarks/>
        public event ListDocumentsBySystemTokenCompletedEventHandler ListDocumentsBySystemTokenCompleted;
        
        /// <remarks/>
        public event ListPersonalDataCompletedEventHandler ListPersonalDataCompleted;
        
        /// <remarks/>
        public event UpdatePersonalDataCompletedEventHandler UpdatePersonalDataCompleted;
        
        /// <remarks/>
        public event EditPasswordCompletedEventHandler EditPasswordCompleted;
        
        /// <remarks/>
        public event EditDataProtectionCompletedEventHandler EditDataProtectionCompleted;
        
        /// <remarks/>
        public event EditUserSettingCompletedEventHandler EditUserSettingCompleted;
        
        /// <remarks/>
        public event TestPostcodeCompletedEventHandler TestPostcodeCompleted;
        
        /// <remarks/>
        public event TestPostcodeAcceptanceCompletedEventHandler TestPostcodeAcceptanceCompleted;
        
        /// <remarks/>
        public event TestAddressAcceptanceCompletedEventHandler TestAddressAcceptanceCompleted;
        
        /// <remarks/>
        public event MemberMICompletedEventHandler MemberMICompleted;
        
        /// <remarks/>
        public event TESTMemberMICompletedEventHandler TESTMemberMICompleted;
        
        /// <remarks/>
        public event ChurchillsInterfaceCompletedEventHandler ChurchillsInterfaceCompleted;
        
        /// <remarks/>
        public event SetAdviserCompletedEventHandler SetAdviserCompleted;
        
        /// <remarks/>
        public event AddNoteCompletedEventHandler AddNoteCompleted;
        
        /// <remarks/>
        public event DeleteNoteCompletedEventHandler DeleteNoteCompleted;
        
        /// <remarks/>
        public event ToggleEnrichmentCompletedEventHandler ToggleEnrichmentCompleted;
        
        /// <remarks/>
        public event DeleteEventCompletedEventHandler DeleteEventCompleted;
        
        /// <remarks/>
        public event ListNotesCompletedEventHandler ListNotesCompleted;
        
        /// <remarks/>
        public event QueryGetCountCompletedEventHandler QueryGetCountCompleted;
        
        /// <remarks/>
        public event QueryCompletedEventHandler QueryCompleted;
        
        /// <remarks/>
        public event CreateOverrideCodeCompletedEventHandler CreateOverrideCodeCompleted;
        
        /// <remarks/>
        public event RevokeOverrideCodeCompletedEventHandler RevokeOverrideCodeCompleted;
        
        /// <remarks/>
        public event PreviewPolicyCancellationCompletedEventHandler PreviewPolicyCancellationCompleted;
        
        /// <remarks/>
        public event PreviewAddonCancellationCompletedEventHandler PreviewAddonCancellationCompleted;
        
        /// <remarks/>
        public event PolicyCancellationCompletedEventHandler PolicyCancellationCompleted;
        
        /// <remarks/>
        public event AddonCancellationCompletedEventHandler AddonCancellationCompleted;
        
        /// <remarks/>
        public event SetAPIPasswordCompletedEventHandler SetAPIPasswordCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/GetEventFeed", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfDataEvent GetEventFeed(string APIKey, string Token, string UserToken, string SystemToken, System.DateTime FromDate, System.DateTime ToDate, string DateType) {
            object[] results = this.Invoke("GetEventFeed", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        FromDate,
                        ToDate,
                        DateType});
            return ((APIResponseOfListOfDataEvent)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventFeedAsync(string APIKey, string Token, string UserToken, string SystemToken, System.DateTime FromDate, System.DateTime ToDate, string DateType) {
            this.GetEventFeedAsync(APIKey, Token, UserToken, SystemToken, FromDate, ToDate, DateType, null);
        }
        
        /// <remarks/>
        public void GetEventFeedAsync(string APIKey, string Token, string UserToken, string SystemToken, System.DateTime FromDate, System.DateTime ToDate, string DateType, object userState) {
            if ((this.GetEventFeedOperationCompleted == null)) {
                this.GetEventFeedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventFeedOperationCompleted);
            }
            this.InvokeAsync("GetEventFeed", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        FromDate,
                        ToDate,
                        DateType}, this.GetEventFeedOperationCompleted, userState);
        }
        
        private void OnGetEventFeedOperationCompleted(object arg) {
            if ((this.GetEventFeedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventFeedCompleted(this, new GetEventFeedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/GetEvent", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfDataEvent GetEvent(string APIKey, string Token, string UserToken, string SystemToken, int EventRecord) {
            object[] results = this.Invoke("GetEvent", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        EventRecord});
            return ((APIResponseOfListOfDataEvent)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventAsync(string APIKey, string Token, string UserToken, string SystemToken, int EventRecord) {
            this.GetEventAsync(APIKey, Token, UserToken, SystemToken, EventRecord, null);
        }
        
        /// <remarks/>
        public void GetEventAsync(string APIKey, string Token, string UserToken, string SystemToken, int EventRecord, object userState) {
            if ((this.GetEventOperationCompleted == null)) {
                this.GetEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventOperationCompleted);
            }
            this.InvokeAsync("GetEvent", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        EventRecord}, this.GetEventOperationCompleted, userState);
        }
        
        private void OnGetEventOperationCompleted(object arg) {
            if ((this.GetEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventCompleted(this, new GetEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/GetEventExport", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfDataEvent GetEventExport(
                    string APIKey, 
                    string Token, 
                    string UserToken, 
                    string SystemToken, 
                    System.DateTime FromDate, 
                    System.DateTime ToDate, 
                    string[] ExportFields, 
                    string[] ExportTables, 
                    string[] AllowQuoteTypes, 
                    string[] AllowEventTypes, 
                    string[] AllowStageTypes, 
                    string[] AllowTags, 
                    string DateType, 
                    string[] MustHaveEnrichments, 
                    string[] AllowInsurers, 
                    string[] MustNotHaveEnrichments, 
                    string[] AllowAddons) {
            object[] results = this.Invoke("GetEventExport", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        FromDate,
                        ToDate,
                        ExportFields,
                        ExportTables,
                        AllowQuoteTypes,
                        AllowEventTypes,
                        AllowStageTypes,
                        AllowTags,
                        DateType,
                        MustHaveEnrichments,
                        AllowInsurers,
                        MustNotHaveEnrichments,
                        AllowAddons});
            return ((APIResponseOfListOfDataEvent)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventExportAsync(
                    string APIKey, 
                    string Token, 
                    string UserToken, 
                    string SystemToken, 
                    System.DateTime FromDate, 
                    System.DateTime ToDate, 
                    string[] ExportFields, 
                    string[] ExportTables, 
                    string[] AllowQuoteTypes, 
                    string[] AllowEventTypes, 
                    string[] AllowStageTypes, 
                    string[] AllowTags, 
                    string DateType, 
                    string[] MustHaveEnrichments, 
                    string[] AllowInsurers, 
                    string[] MustNotHaveEnrichments, 
                    string[] AllowAddons) {
            this.GetEventExportAsync(APIKey, Token, UserToken, SystemToken, FromDate, ToDate, ExportFields, ExportTables, AllowQuoteTypes, AllowEventTypes, AllowStageTypes, AllowTags, DateType, MustHaveEnrichments, AllowInsurers, MustNotHaveEnrichments, AllowAddons, null);
        }
        
        /// <remarks/>
        public void GetEventExportAsync(
                    string APIKey, 
                    string Token, 
                    string UserToken, 
                    string SystemToken, 
                    System.DateTime FromDate, 
                    System.DateTime ToDate, 
                    string[] ExportFields, 
                    string[] ExportTables, 
                    string[] AllowQuoteTypes, 
                    string[] AllowEventTypes, 
                    string[] AllowStageTypes, 
                    string[] AllowTags, 
                    string DateType, 
                    string[] MustHaveEnrichments, 
                    string[] AllowInsurers, 
                    string[] MustNotHaveEnrichments, 
                    string[] AllowAddons, 
                    object userState) {
            if ((this.GetEventExportOperationCompleted == null)) {
                this.GetEventExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventExportOperationCompleted);
            }
            this.InvokeAsync("GetEventExport", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        FromDate,
                        ToDate,
                        ExportFields,
                        ExportTables,
                        AllowQuoteTypes,
                        AllowEventTypes,
                        AllowStageTypes,
                        AllowTags,
                        DateType,
                        MustHaveEnrichments,
                        AllowInsurers,
                        MustNotHaveEnrichments,
                        AllowAddons}, this.GetEventExportOperationCompleted, userState);
        }
        
        private void OnGetEventExportOperationCompleted(object arg) {
            if ((this.GetEventExportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventExportCompleted(this, new GetEventExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ListRecords", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfDataItem ListRecords(string APIKey, string Token, string UserToken, Field[] Details, bool IncludeDocuments) {
            object[] results = this.Invoke("ListRecords", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        Details,
                        IncludeDocuments});
            return ((APIResponseOfListOfDataItem)(results[0]));
        }
        
        /// <remarks/>
        public void ListRecordsAsync(string APIKey, string Token, string UserToken, Field[] Details, bool IncludeDocuments) {
            this.ListRecordsAsync(APIKey, Token, UserToken, Details, IncludeDocuments, null);
        }
        
        /// <remarks/>
        public void ListRecordsAsync(string APIKey, string Token, string UserToken, Field[] Details, bool IncludeDocuments, object userState) {
            if ((this.ListRecordsOperationCompleted == null)) {
                this.ListRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRecordsOperationCompleted);
            }
            this.InvokeAsync("ListRecords", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        Details,
                        IncludeDocuments}, this.ListRecordsOperationCompleted, userState);
        }
        
        private void OnListRecordsOperationCompleted(object arg) {
            if ((this.ListRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRecordsCompleted(this, new ListRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ListArchivedRecords", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfDataItem ListArchivedRecords(string APIKey, string Token, string UserToken, Field[] Details, bool IncludeDocuments) {
            object[] results = this.Invoke("ListArchivedRecords", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        Details,
                        IncludeDocuments});
            return ((APIResponseOfListOfDataItem)(results[0]));
        }
        
        /// <remarks/>
        public void ListArchivedRecordsAsync(string APIKey, string Token, string UserToken, Field[] Details, bool IncludeDocuments) {
            this.ListArchivedRecordsAsync(APIKey, Token, UserToken, Details, IncludeDocuments, null);
        }
        
        /// <remarks/>
        public void ListArchivedRecordsAsync(string APIKey, string Token, string UserToken, Field[] Details, bool IncludeDocuments, object userState) {
            if ((this.ListArchivedRecordsOperationCompleted == null)) {
                this.ListArchivedRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListArchivedRecordsOperationCompleted);
            }
            this.InvokeAsync("ListArchivedRecords", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        Details,
                        IncludeDocuments}, this.ListArchivedRecordsOperationCompleted, userState);
        }
        
        private void OnListArchivedRecordsOperationCompleted(object arg) {
            if ((this.ListArchivedRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListArchivedRecordsCompleted(this, new ListArchivedRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ArchiveDataItem", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfBoolean ArchiveDataItem(string APIKey, string Token, string UserToken, int DataRecord) {
            object[] results = this.Invoke("ArchiveDataItem", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        DataRecord});
            return ((APIResponseOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void ArchiveDataItemAsync(string APIKey, string Token, string UserToken, int DataRecord) {
            this.ArchiveDataItemAsync(APIKey, Token, UserToken, DataRecord, null);
        }
        
        /// <remarks/>
        public void ArchiveDataItemAsync(string APIKey, string Token, string UserToken, int DataRecord, object userState) {
            if ((this.ArchiveDataItemOperationCompleted == null)) {
                this.ArchiveDataItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchiveDataItemOperationCompleted);
            }
            this.InvokeAsync("ArchiveDataItem", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        DataRecord}, this.ArchiveDataItemOperationCompleted, userState);
        }
        
        private void OnArchiveDataItemOperationCompleted(object arg) {
            if ((this.ArchiveDataItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArchiveDataItemCompleted(this, new ArchiveDataItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/RestoreDataItem", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfBoolean RestoreDataItem(string APIKey, string Token, string UserToken, int DataRecord) {
            object[] results = this.Invoke("RestoreDataItem", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        DataRecord});
            return ((APIResponseOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreDataItemAsync(string APIKey, string Token, string UserToken, int DataRecord) {
            this.RestoreDataItemAsync(APIKey, Token, UserToken, DataRecord, null);
        }
        
        /// <remarks/>
        public void RestoreDataItemAsync(string APIKey, string Token, string UserToken, int DataRecord, object userState) {
            if ((this.RestoreDataItemOperationCompleted == null)) {
                this.RestoreDataItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreDataItemOperationCompleted);
            }
            this.InvokeAsync("RestoreDataItem", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        DataRecord}, this.RestoreDataItemOperationCompleted, userState);
        }
        
        private void OnRestoreDataItemOperationCompleted(object arg) {
            if ((this.RestoreDataItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreDataItemCompleted(this, new RestoreDataItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/GetPolicyData", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfPolicyDataLine GetPolicyData(
                    string APIKey, 
                    string Token, 
                    string UserToken, 
                    System.DateTime Day, 
                    bool ExcludeAddons, 
                    bool ExcludeCancelled, 
                    bool ExcludeDeclined, 
                    string[] PolicyStages, 
                    string[] PolicyInsurers, 
                    string[] PolicyProducts, 
                    string[] PolicyAdvisers, 
                    string[] PolicyLeads, 
                    string[] ShowEventTypes, 
                    string[] ShowTags, 
                    System.DateTime TagFromDate, 
                    System.DateTime TagToDate, 
                    string MinGrossPremium, 
                    string MaxGrossPremium, 
                    string MinIncome, 
                    string MaxIncome) {
            object[] results = this.Invoke("GetPolicyData", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        Day,
                        ExcludeAddons,
                        ExcludeCancelled,
                        ExcludeDeclined,
                        PolicyStages,
                        PolicyInsurers,
                        PolicyProducts,
                        PolicyAdvisers,
                        PolicyLeads,
                        ShowEventTypes,
                        ShowTags,
                        TagFromDate,
                        TagToDate,
                        MinGrossPremium,
                        MaxGrossPremium,
                        MinIncome,
                        MaxIncome});
            return ((APIResponseOfListOfPolicyDataLine)(results[0]));
        }
        
        /// <remarks/>
        public void GetPolicyDataAsync(
                    string APIKey, 
                    string Token, 
                    string UserToken, 
                    System.DateTime Day, 
                    bool ExcludeAddons, 
                    bool ExcludeCancelled, 
                    bool ExcludeDeclined, 
                    string[] PolicyStages, 
                    string[] PolicyInsurers, 
                    string[] PolicyProducts, 
                    string[] PolicyAdvisers, 
                    string[] PolicyLeads, 
                    string[] ShowEventTypes, 
                    string[] ShowTags, 
                    System.DateTime TagFromDate, 
                    System.DateTime TagToDate, 
                    string MinGrossPremium, 
                    string MaxGrossPremium, 
                    string MinIncome, 
                    string MaxIncome) {
            this.GetPolicyDataAsync(APIKey, Token, UserToken, Day, ExcludeAddons, ExcludeCancelled, ExcludeDeclined, PolicyStages, PolicyInsurers, PolicyProducts, PolicyAdvisers, PolicyLeads, ShowEventTypes, ShowTags, TagFromDate, TagToDate, MinGrossPremium, MaxGrossPremium, MinIncome, MaxIncome, null);
        }
        
        /// <remarks/>
        public void GetPolicyDataAsync(
                    string APIKey, 
                    string Token, 
                    string UserToken, 
                    System.DateTime Day, 
                    bool ExcludeAddons, 
                    bool ExcludeCancelled, 
                    bool ExcludeDeclined, 
                    string[] PolicyStages, 
                    string[] PolicyInsurers, 
                    string[] PolicyProducts, 
                    string[] PolicyAdvisers, 
                    string[] PolicyLeads, 
                    string[] ShowEventTypes, 
                    string[] ShowTags, 
                    System.DateTime TagFromDate, 
                    System.DateTime TagToDate, 
                    string MinGrossPremium, 
                    string MaxGrossPremium, 
                    string MinIncome, 
                    string MaxIncome, 
                    object userState) {
            if ((this.GetPolicyDataOperationCompleted == null)) {
                this.GetPolicyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPolicyDataOperationCompleted);
            }
            this.InvokeAsync("GetPolicyData", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        Day,
                        ExcludeAddons,
                        ExcludeCancelled,
                        ExcludeDeclined,
                        PolicyStages,
                        PolicyInsurers,
                        PolicyProducts,
                        PolicyAdvisers,
                        PolicyLeads,
                        ShowEventTypes,
                        ShowTags,
                        TagFromDate,
                        TagToDate,
                        MinGrossPremium,
                        MaxGrossPremium,
                        MinIncome,
                        MaxIncome}, this.GetPolicyDataOperationCompleted, userState);
        }
        
        private void OnGetPolicyDataOperationCompleted(object arg) {
            if ((this.GetPolicyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPolicyDataCompleted(this, new GetPolicyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/GenerateToken", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfToken GenerateToken(string APIKey, string Password) {
            object[] results = this.Invoke("GenerateToken", new object[] {
                        APIKey,
                        Password});
            return ((APIResponseOfToken)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateTokenAsync(string APIKey, string Password) {
            this.GenerateTokenAsync(APIKey, Password, null);
        }
        
        /// <remarks/>
        public void GenerateTokenAsync(string APIKey, string Password, object userState) {
            if ((this.GenerateTokenOperationCompleted == null)) {
                this.GenerateTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateTokenOperationCompleted);
            }
            this.InvokeAsync("GenerateToken", new object[] {
                        APIKey,
                        Password}, this.GenerateTokenOperationCompleted, userState);
        }
        
        private void OnGenerateTokenOperationCompleted(object arg) {
            if ((this.GenerateTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateTokenCompleted(this, new GenerateTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/TestTokenValidity", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfBoolean TestTokenValidity(string APIKey, string Token) {
            object[] results = this.Invoke("TestTokenValidity", new object[] {
                        APIKey,
                        Token});
            return ((APIResponseOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void TestTokenValidityAsync(string APIKey, string Token) {
            this.TestTokenValidityAsync(APIKey, Token, null);
        }
        
        /// <remarks/>
        public void TestTokenValidityAsync(string APIKey, string Token, object userState) {
            if ((this.TestTokenValidityOperationCompleted == null)) {
                this.TestTokenValidityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestTokenValidityOperationCompleted);
            }
            this.InvokeAsync("TestTokenValidity", new object[] {
                        APIKey,
                        Token}, this.TestTokenValidityOperationCompleted, userState);
        }
        
        private void OnTestTokenValidityOperationCompleted(object arg) {
            if ((this.TestTokenValidityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestTokenValidityCompleted(this, new TestTokenValidityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ProduceRenewal", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfQuote ProduceRenewal(string APIKey, string Token, string SystemToken, string PolicyReference) {
            object[] results = this.Invoke("ProduceRenewal", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        PolicyReference});
            return ((APIResponseOfQuote)(results[0]));
        }
        
        /// <remarks/>
        public void ProduceRenewalAsync(string APIKey, string Token, string SystemToken, string PolicyReference) {
            this.ProduceRenewalAsync(APIKey, Token, SystemToken, PolicyReference, null);
        }
        
        /// <remarks/>
        public void ProduceRenewalAsync(string APIKey, string Token, string SystemToken, string PolicyReference, object userState) {
            if ((this.ProduceRenewalOperationCompleted == null)) {
                this.ProduceRenewalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProduceRenewalOperationCompleted);
            }
            this.InvokeAsync("ProduceRenewal", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        PolicyReference}, this.ProduceRenewalOperationCompleted, userState);
        }
        
        private void OnProduceRenewalOperationCompleted(object arg) {
            if ((this.ProduceRenewalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProduceRenewalCompleted(this, new ProduceRenewalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ProduceRenewalWithDocuments", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfQuote ProduceRenewalWithDocuments(string APIKey, string Token, string SystemToken, string PolicyReference) {
            object[] results = this.Invoke("ProduceRenewalWithDocuments", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        PolicyReference});
            return ((APIResponseOfQuote)(results[0]));
        }
        
        /// <remarks/>
        public void ProduceRenewalWithDocumentsAsync(string APIKey, string Token, string SystemToken, string PolicyReference) {
            this.ProduceRenewalWithDocumentsAsync(APIKey, Token, SystemToken, PolicyReference, null);
        }
        
        /// <remarks/>
        public void ProduceRenewalWithDocumentsAsync(string APIKey, string Token, string SystemToken, string PolicyReference, object userState) {
            if ((this.ProduceRenewalWithDocumentsOperationCompleted == null)) {
                this.ProduceRenewalWithDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProduceRenewalWithDocumentsOperationCompleted);
            }
            this.InvokeAsync("ProduceRenewalWithDocuments", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        PolicyReference}, this.ProduceRenewalWithDocumentsOperationCompleted, userState);
        }
        
        private void OnProduceRenewalWithDocumentsOperationCompleted(object arg) {
            if ((this.ProduceRenewalWithDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProduceRenewalWithDocumentsCompleted(this, new ProduceRenewalWithDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ProduceQuote", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfQuote ProduceQuote(string APIKey, string Token, Field[] Fields) {
            object[] results = this.Invoke("ProduceQuote", new object[] {
                        APIKey,
                        Token,
                        Fields});
            return ((APIResponseOfQuote)(results[0]));
        }
        
        /// <remarks/>
        public void ProduceQuoteAsync(string APIKey, string Token, Field[] Fields) {
            this.ProduceQuoteAsync(APIKey, Token, Fields, null);
        }
        
        /// <remarks/>
        public void ProduceQuoteAsync(string APIKey, string Token, Field[] Fields, object userState) {
            if ((this.ProduceQuoteOperationCompleted == null)) {
                this.ProduceQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProduceQuoteOperationCompleted);
            }
            this.InvokeAsync("ProduceQuote", new object[] {
                        APIKey,
                        Token,
                        Fields}, this.ProduceQuoteOperationCompleted, userState);
        }
        
        private void OnProduceQuoteOperationCompleted(object arg) {
            if ((this.ProduceQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProduceQuoteCompleted(this, new ProduceQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ProduceQuoteWithDocuments", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfQuote ProduceQuoteWithDocuments(string APIKey, string Token, Field[] Fields) {
            object[] results = this.Invoke("ProduceQuoteWithDocuments", new object[] {
                        APIKey,
                        Token,
                        Fields});
            return ((APIResponseOfQuote)(results[0]));
        }
        
        /// <remarks/>
        public void ProduceQuoteWithDocumentsAsync(string APIKey, string Token, Field[] Fields) {
            this.ProduceQuoteWithDocumentsAsync(APIKey, Token, Fields, null);
        }
        
        /// <remarks/>
        public void ProduceQuoteWithDocumentsAsync(string APIKey, string Token, Field[] Fields, object userState) {
            if ((this.ProduceQuoteWithDocumentsOperationCompleted == null)) {
                this.ProduceQuoteWithDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProduceQuoteWithDocumentsOperationCompleted);
            }
            this.InvokeAsync("ProduceQuoteWithDocuments", new object[] {
                        APIKey,
                        Token,
                        Fields}, this.ProduceQuoteWithDocumentsOperationCompleted, userState);
        }
        
        private void OnProduceQuoteWithDocumentsOperationCompleted(object arg) {
            if ((this.ProduceQuoteWithDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProduceQuoteWithDocumentsCompleted(this, new ProduceQuoteWithDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/CreateQuote", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfQuote CreateQuote(string APIKey, string Token, Field[] Fields) {
            object[] results = this.Invoke("CreateQuote", new object[] {
                        APIKey,
                        Token,
                        Fields});
            return ((APIResponseOfQuote)(results[0]));
        }
        
        /// <remarks/>
        public void CreateQuoteAsync(string APIKey, string Token, Field[] Fields) {
            this.CreateQuoteAsync(APIKey, Token, Fields, null);
        }
        
        /// <remarks/>
        public void CreateQuoteAsync(string APIKey, string Token, Field[] Fields, object userState) {
            if ((this.CreateQuoteOperationCompleted == null)) {
                this.CreateQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateQuoteOperationCompleted);
            }
            this.InvokeAsync("CreateQuote", new object[] {
                        APIKey,
                        Token,
                        Fields}, this.CreateQuoteOperationCompleted, userState);
        }
        
        private void OnCreateQuoteOperationCompleted(object arg) {
            if ((this.CreateQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateQuoteCompleted(this, new CreateQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ConvertQuote", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfDataItem ConvertQuote(string APIKey, string Token, string Reference) {
            object[] results = this.Invoke("ConvertQuote", new object[] {
                        APIKey,
                        Token,
                        Reference});
            return ((APIResponseOfDataItem)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertQuoteAsync(string APIKey, string Token, string Reference) {
            this.ConvertQuoteAsync(APIKey, Token, Reference, null);
        }
        
        /// <remarks/>
        public void ConvertQuoteAsync(string APIKey, string Token, string Reference, object userState) {
            if ((this.ConvertQuoteOperationCompleted == null)) {
                this.ConvertQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertQuoteOperationCompleted);
            }
            this.InvokeAsync("ConvertQuote", new object[] {
                        APIKey,
                        Token,
                        Reference}, this.ConvertQuoteOperationCompleted, userState);
        }
        
        private void OnConvertQuoteOperationCompleted(object arg) {
            if ((this.ConvertQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertQuoteCompleted(this, new ConvertQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ConvertRenewal", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfDataItem ConvertRenewal(string APIKey, string Token, string Reference) {
            object[] results = this.Invoke("ConvertRenewal", new object[] {
                        APIKey,
                        Token,
                        Reference});
            return ((APIResponseOfDataItem)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertRenewalAsync(string APIKey, string Token, string Reference) {
            this.ConvertRenewalAsync(APIKey, Token, Reference, null);
        }
        
        /// <remarks/>
        public void ConvertRenewalAsync(string APIKey, string Token, string Reference, object userState) {
            if ((this.ConvertRenewalOperationCompleted == null)) {
                this.ConvertRenewalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertRenewalOperationCompleted);
            }
            this.InvokeAsync("ConvertRenewal", new object[] {
                        APIKey,
                        Token,
                        Reference}, this.ConvertRenewalOperationCompleted, userState);
        }
        
        private void OnConvertRenewalOperationCompleted(object arg) {
            if ((this.ConvertRenewalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertRenewalCompleted(this, new ConvertRenewalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/PopulateTopXInfo", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfString PopulateTopXInfo(string APIKey, string Token, string QuoteReference, int Rank, string TopInsurer, decimal TopPrice) {
            object[] results = this.Invoke("PopulateTopXInfo", new object[] {
                        APIKey,
                        Token,
                        QuoteReference,
                        Rank,
                        TopInsurer,
                        TopPrice});
            return ((APIResponseOfString)(results[0]));
        }
        
        /// <remarks/>
        public void PopulateTopXInfoAsync(string APIKey, string Token, string QuoteReference, int Rank, string TopInsurer, decimal TopPrice) {
            this.PopulateTopXInfoAsync(APIKey, Token, QuoteReference, Rank, TopInsurer, TopPrice, null);
        }
        
        /// <remarks/>
        public void PopulateTopXInfoAsync(string APIKey, string Token, string QuoteReference, int Rank, string TopInsurer, decimal TopPrice, object userState) {
            if ((this.PopulateTopXInfoOperationCompleted == null)) {
                this.PopulateTopXInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulateTopXInfoOperationCompleted);
            }
            this.InvokeAsync("PopulateTopXInfo", new object[] {
                        APIKey,
                        Token,
                        QuoteReference,
                        Rank,
                        TopInsurer,
                        TopPrice}, this.PopulateTopXInfoOperationCompleted, userState);
        }
        
        private void OnPopulateTopXInfoOperationCompleted(object arg) {
            if ((this.PopulateTopXInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulateTopXInfoCompleted(this, new PopulateTopXInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/GetUnreadMessageCount", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfInt32 GetUnreadMessageCount(string APIKey, string Token, string UserToken, InboxType InboxType) {
            object[] results = this.Invoke("GetUnreadMessageCount", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        InboxType});
            return ((APIResponseOfInt32)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnreadMessageCountAsync(string APIKey, string Token, string UserToken, InboxType InboxType) {
            this.GetUnreadMessageCountAsync(APIKey, Token, UserToken, InboxType, null);
        }
        
        /// <remarks/>
        public void GetUnreadMessageCountAsync(string APIKey, string Token, string UserToken, InboxType InboxType, object userState) {
            if ((this.GetUnreadMessageCountOperationCompleted == null)) {
                this.GetUnreadMessageCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnreadMessageCountOperationCompleted);
            }
            this.InvokeAsync("GetUnreadMessageCount", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        InboxType}, this.GetUnreadMessageCountOperationCompleted, userState);
        }
        
        private void OnGetUnreadMessageCountOperationCompleted(object arg) {
            if ((this.GetUnreadMessageCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnreadMessageCountCompleted(this, new GetUnreadMessageCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/GetMessages", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfMessage GetMessages(string APIKey, string Token, string UserToken, InboxType InboxType) {
            object[] results = this.Invoke("GetMessages", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        InboxType});
            return ((APIResponseOfListOfMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesAsync(string APIKey, string Token, string UserToken, InboxType InboxType) {
            this.GetMessagesAsync(APIKey, Token, UserToken, InboxType, null);
        }
        
        /// <remarks/>
        public void GetMessagesAsync(string APIKey, string Token, string UserToken, InboxType InboxType, object userState) {
            if ((this.GetMessagesOperationCompleted == null)) {
                this.GetMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesOperationCompleted);
            }
            this.InvokeAsync("GetMessages", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        InboxType}, this.GetMessagesOperationCompleted, userState);
        }
        
        private void OnGetMessagesOperationCompleted(object arg) {
            if ((this.GetMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesCompleted(this, new GetMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/GetMessageContent", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfString GetMessageContent(string APIKey, string Token, string UserToken, int InboxType, int MessageRecord) {
            object[] results = this.Invoke("GetMessageContent", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        InboxType,
                        MessageRecord});
            return ((APIResponseOfString)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageContentAsync(string APIKey, string Token, string UserToken, int InboxType, int MessageRecord) {
            this.GetMessageContentAsync(APIKey, Token, UserToken, InboxType, MessageRecord, null);
        }
        
        /// <remarks/>
        public void GetMessageContentAsync(string APIKey, string Token, string UserToken, int InboxType, int MessageRecord, object userState) {
            if ((this.GetMessageContentOperationCompleted == null)) {
                this.GetMessageContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageContentOperationCompleted);
            }
            this.InvokeAsync("GetMessageContent", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        InboxType,
                        MessageRecord}, this.GetMessageContentOperationCompleted, userState);
        }
        
        private void OnGetMessageContentOperationCompleted(object arg) {
            if ((this.GetMessageContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageContentCompleted(this, new GetMessageContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/MarkMessageUnread", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfString MarkMessageUnread(string APIKey, string Token, string UserToken, int InboxType, int MessageRecord) {
            object[] results = this.Invoke("MarkMessageUnread", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        InboxType,
                        MessageRecord});
            return ((APIResponseOfString)(results[0]));
        }
        
        /// <remarks/>
        public void MarkMessageUnreadAsync(string APIKey, string Token, string UserToken, int InboxType, int MessageRecord) {
            this.MarkMessageUnreadAsync(APIKey, Token, UserToken, InboxType, MessageRecord, null);
        }
        
        /// <remarks/>
        public void MarkMessageUnreadAsync(string APIKey, string Token, string UserToken, int InboxType, int MessageRecord, object userState) {
            if ((this.MarkMessageUnreadOperationCompleted == null)) {
                this.MarkMessageUnreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkMessageUnreadOperationCompleted);
            }
            this.InvokeAsync("MarkMessageUnread", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        InboxType,
                        MessageRecord}, this.MarkMessageUnreadOperationCompleted, userState);
        }
        
        private void OnMarkMessageUnreadOperationCompleted(object arg) {
            if ((this.MarkMessageUnreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkMessageUnreadCompleted(this, new MarkMessageUnreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/DeleteMessage", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfString DeleteMessage(string APIKey, string Token, string UserToken, int InboxType, int MessageRecord) {
            object[] results = this.Invoke("DeleteMessage", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        InboxType,
                        MessageRecord});
            return ((APIResponseOfString)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(string APIKey, string Token, string UserToken, int InboxType, int MessageRecord) {
            this.DeleteMessageAsync(APIKey, Token, UserToken, InboxType, MessageRecord, null);
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(string APIKey, string Token, string UserToken, int InboxType, int MessageRecord, object userState) {
            if ((this.DeleteMessageOperationCompleted == null)) {
                this.DeleteMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMessageOperationCompleted);
            }
            this.InvokeAsync("DeleteMessage", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        InboxType,
                        MessageRecord}, this.DeleteMessageOperationCompleted, userState);
        }
        
        private void OnDeleteMessageOperationCompleted(object arg) {
            if ((this.DeleteMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMessageCompleted(this, new DeleteMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/SendSecureMessage", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfString SendSecureMessage(string APIKey, string Token, string UserToken, int _To, int SenderType, string Subject, string Content, bool AllowReply, bool AllowDelete, string LinkedFile, int InReplyTo) {
            object[] results = this.Invoke("SendSecureMessage", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        _To,
                        SenderType,
                        Subject,
                        Content,
                        AllowReply,
                        AllowDelete,
                        LinkedFile,
                        InReplyTo});
            return ((APIResponseOfString)(results[0]));
        }
        
        /// <remarks/>
        public void SendSecureMessageAsync(string APIKey, string Token, string UserToken, int _To, int SenderType, string Subject, string Content, bool AllowReply, bool AllowDelete, string LinkedFile, int InReplyTo) {
            this.SendSecureMessageAsync(APIKey, Token, UserToken, _To, SenderType, Subject, Content, AllowReply, AllowDelete, LinkedFile, InReplyTo, null);
        }
        
        /// <remarks/>
        public void SendSecureMessageAsync(string APIKey, string Token, string UserToken, int _To, int SenderType, string Subject, string Content, bool AllowReply, bool AllowDelete, string LinkedFile, int InReplyTo, object userState) {
            if ((this.SendSecureMessageOperationCompleted == null)) {
                this.SendSecureMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSecureMessageOperationCompleted);
            }
            this.InvokeAsync("SendSecureMessage", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        _To,
                        SenderType,
                        Subject,
                        Content,
                        AllowReply,
                        AllowDelete,
                        LinkedFile,
                        InReplyTo}, this.SendSecureMessageOperationCompleted, userState);
        }
        
        private void OnSendSecureMessageOperationCompleted(object arg) {
            if ((this.SendSecureMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSecureMessageCompleted(this, new SendSecureMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/SendSecureMessageWithAttachment", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfString SendSecureMessageWithAttachment(string APIKey, string Token, string UserToken, int _To, int SenderType, string Subject, string Content, bool AllowReply, bool AllowDelete, string LinkedFile, int InReplyTo, string[] AttachmentName, string[] AttachmentData) {
            object[] results = this.Invoke("SendSecureMessageWithAttachment", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        _To,
                        SenderType,
                        Subject,
                        Content,
                        AllowReply,
                        AllowDelete,
                        LinkedFile,
                        InReplyTo,
                        AttachmentName,
                        AttachmentData});
            return ((APIResponseOfString)(results[0]));
        }
        
        /// <remarks/>
        public void SendSecureMessageWithAttachmentAsync(string APIKey, string Token, string UserToken, int _To, int SenderType, string Subject, string Content, bool AllowReply, bool AllowDelete, string LinkedFile, int InReplyTo, string[] AttachmentName, string[] AttachmentData) {
            this.SendSecureMessageWithAttachmentAsync(APIKey, Token, UserToken, _To, SenderType, Subject, Content, AllowReply, AllowDelete, LinkedFile, InReplyTo, AttachmentName, AttachmentData, null);
        }
        
        /// <remarks/>
        public void SendSecureMessageWithAttachmentAsync(string APIKey, string Token, string UserToken, int _To, int SenderType, string Subject, string Content, bool AllowReply, bool AllowDelete, string LinkedFile, int InReplyTo, string[] AttachmentName, string[] AttachmentData, object userState) {
            if ((this.SendSecureMessageWithAttachmentOperationCompleted == null)) {
                this.SendSecureMessageWithAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSecureMessageWithAttachmentOperationCompleted);
            }
            this.InvokeAsync("SendSecureMessageWithAttachment", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        _To,
                        SenderType,
                        Subject,
                        Content,
                        AllowReply,
                        AllowDelete,
                        LinkedFile,
                        InReplyTo,
                        AttachmentName,
                        AttachmentData}, this.SendSecureMessageWithAttachmentOperationCompleted, userState);
        }
        
        private void OnSendSecureMessageWithAttachmentOperationCompleted(object arg) {
            if ((this.SendSecureMessageWithAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSecureMessageWithAttachmentCompleted(this, new SendSecureMessageWithAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ListDocuments", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfDocument ListDocuments(string APIKey, string Token, string UserToken, string PolicyReference) {
            object[] results = this.Invoke("ListDocuments", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        PolicyReference});
            return ((APIResponseOfListOfDocument)(results[0]));
        }
        
        /// <remarks/>
        public void ListDocumentsAsync(string APIKey, string Token, string UserToken, string PolicyReference) {
            this.ListDocumentsAsync(APIKey, Token, UserToken, PolicyReference, null);
        }
        
        /// <remarks/>
        public void ListDocumentsAsync(string APIKey, string Token, string UserToken, string PolicyReference, object userState) {
            if ((this.ListDocumentsOperationCompleted == null)) {
                this.ListDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListDocumentsOperationCompleted);
            }
            this.InvokeAsync("ListDocuments", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        PolicyReference}, this.ListDocumentsOperationCompleted, userState);
        }
        
        private void OnListDocumentsOperationCompleted(object arg) {
            if ((this.ListDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListDocumentsCompleted(this, new ListDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ListDocumentsBySystemToken", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfDocument ListDocumentsBySystemToken(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord, bool ListNewestDocsFirst) {
            object[] results = this.Invoke("ListDocumentsBySystemToken", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        QuoteRecord,
                        ListNewestDocsFirst});
            return ((APIResponseOfListOfDocument)(results[0]));
        }
        
        /// <remarks/>
        public void ListDocumentsBySystemTokenAsync(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord, bool ListNewestDocsFirst) {
            this.ListDocumentsBySystemTokenAsync(APIKey, Token, UserToken, SystemToken, QuoteRecord, ListNewestDocsFirst, null);
        }
        
        /// <remarks/>
        public void ListDocumentsBySystemTokenAsync(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord, bool ListNewestDocsFirst, object userState) {
            if ((this.ListDocumentsBySystemTokenOperationCompleted == null)) {
                this.ListDocumentsBySystemTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListDocumentsBySystemTokenOperationCompleted);
            }
            this.InvokeAsync("ListDocumentsBySystemToken", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        QuoteRecord,
                        ListNewestDocsFirst}, this.ListDocumentsBySystemTokenOperationCompleted, userState);
        }
        
        private void OnListDocumentsBySystemTokenOperationCompleted(object arg) {
            if ((this.ListDocumentsBySystemTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListDocumentsBySystemTokenCompleted(this, new ListDocumentsBySystemTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ListPersonalData", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfEditableField ListPersonalData(string APIKey, string Token, string UserToken) {
            object[] results = this.Invoke("ListPersonalData", new object[] {
                        APIKey,
                        Token,
                        UserToken});
            return ((APIResponseOfListOfEditableField)(results[0]));
        }
        
        /// <remarks/>
        public void ListPersonalDataAsync(string APIKey, string Token, string UserToken) {
            this.ListPersonalDataAsync(APIKey, Token, UserToken, null);
        }
        
        /// <remarks/>
        public void ListPersonalDataAsync(string APIKey, string Token, string UserToken, object userState) {
            if ((this.ListPersonalDataOperationCompleted == null)) {
                this.ListPersonalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListPersonalDataOperationCompleted);
            }
            this.InvokeAsync("ListPersonalData", new object[] {
                        APIKey,
                        Token,
                        UserToken}, this.ListPersonalDataOperationCompleted, userState);
        }
        
        private void OnListPersonalDataOperationCompleted(object arg) {
            if ((this.ListPersonalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListPersonalDataCompleted(this, new ListPersonalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/UpdatePersonalData", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfBoolean UpdatePersonalData(string APIKey, string Token, string UserToken, EditableField[] Payload) {
            object[] results = this.Invoke("UpdatePersonalData", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        Payload});
            return ((APIResponseOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePersonalDataAsync(string APIKey, string Token, string UserToken, EditableField[] Payload) {
            this.UpdatePersonalDataAsync(APIKey, Token, UserToken, Payload, null);
        }
        
        /// <remarks/>
        public void UpdatePersonalDataAsync(string APIKey, string Token, string UserToken, EditableField[] Payload, object userState) {
            if ((this.UpdatePersonalDataOperationCompleted == null)) {
                this.UpdatePersonalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePersonalDataOperationCompleted);
            }
            this.InvokeAsync("UpdatePersonalData", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        Payload}, this.UpdatePersonalDataOperationCompleted, userState);
        }
        
        private void OnUpdatePersonalDataOperationCompleted(object arg) {
            if ((this.UpdatePersonalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePersonalDataCompleted(this, new UpdatePersonalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/EditPassword", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfString EditPassword(string APIKey, string Token, string UserToken, string CurrentPassword, string NewPassword) {
            object[] results = this.Invoke("EditPassword", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        CurrentPassword,
                        NewPassword});
            return ((APIResponseOfString)(results[0]));
        }
        
        /// <remarks/>
        public void EditPasswordAsync(string APIKey, string Token, string UserToken, string CurrentPassword, string NewPassword) {
            this.EditPasswordAsync(APIKey, Token, UserToken, CurrentPassword, NewPassword, null);
        }
        
        /// <remarks/>
        public void EditPasswordAsync(string APIKey, string Token, string UserToken, string CurrentPassword, string NewPassword, object userState) {
            if ((this.EditPasswordOperationCompleted == null)) {
                this.EditPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditPasswordOperationCompleted);
            }
            this.InvokeAsync("EditPassword", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        CurrentPassword,
                        NewPassword}, this.EditPasswordOperationCompleted, userState);
        }
        
        private void OnEditPasswordOperationCompleted(object arg) {
            if ((this.EditPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditPasswordCompleted(this, new EditPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/EditDataProtection", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfString EditDataProtection(string APIKey, string Token, string UserToken, int ContactID, int RelationID, int ProtectionFlag) {
            object[] results = this.Invoke("EditDataProtection", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        ContactID,
                        RelationID,
                        ProtectionFlag});
            return ((APIResponseOfString)(results[0]));
        }
        
        /// <remarks/>
        public void EditDataProtectionAsync(string APIKey, string Token, string UserToken, int ContactID, int RelationID, int ProtectionFlag) {
            this.EditDataProtectionAsync(APIKey, Token, UserToken, ContactID, RelationID, ProtectionFlag, null);
        }
        
        /// <remarks/>
        public void EditDataProtectionAsync(string APIKey, string Token, string UserToken, int ContactID, int RelationID, int ProtectionFlag, object userState) {
            if ((this.EditDataProtectionOperationCompleted == null)) {
                this.EditDataProtectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDataProtectionOperationCompleted);
            }
            this.InvokeAsync("EditDataProtection", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        ContactID,
                        RelationID,
                        ProtectionFlag}, this.EditDataProtectionOperationCompleted, userState);
        }
        
        private void OnEditDataProtectionOperationCompleted(object arg) {
            if ((this.EditDataProtectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDataProtectionCompleted(this, new EditDataProtectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/EditUserSetting", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfBoolean EditUserSetting(string APIKey, string Token, string UserToken, string SettingName, string SettingValue, string Data) {
            object[] results = this.Invoke("EditUserSetting", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SettingName,
                        SettingValue,
                        Data});
            return ((APIResponseOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void EditUserSettingAsync(string APIKey, string Token, string UserToken, string SettingName, string SettingValue, string Data) {
            this.EditUserSettingAsync(APIKey, Token, UserToken, SettingName, SettingValue, Data, null);
        }
        
        /// <remarks/>
        public void EditUserSettingAsync(string APIKey, string Token, string UserToken, string SettingName, string SettingValue, string Data, object userState) {
            if ((this.EditUserSettingOperationCompleted == null)) {
                this.EditUserSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditUserSettingOperationCompleted);
            }
            this.InvokeAsync("EditUserSetting", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SettingName,
                        SettingValue,
                        Data}, this.EditUserSettingOperationCompleted, userState);
        }
        
        private void OnEditUserSettingOperationCompleted(object arg) {
            if ((this.EditUserSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditUserSettingCompleted(this, new EditUserSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/TestPostcode", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] TestPostcode(string QuoteType, string Postcode, bool Legacy) {
            object[] results = this.Invoke("TestPostcode", new object[] {
                        QuoteType,
                        Postcode,
                        Legacy});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void TestPostcodeAsync(string QuoteType, string Postcode, bool Legacy) {
            this.TestPostcodeAsync(QuoteType, Postcode, Legacy, null);
        }
        
        /// <remarks/>
        public void TestPostcodeAsync(string QuoteType, string Postcode, bool Legacy, object userState) {
            if ((this.TestPostcodeOperationCompleted == null)) {
                this.TestPostcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestPostcodeOperationCompleted);
            }
            this.InvokeAsync("TestPostcode", new object[] {
                        QuoteType,
                        Postcode,
                        Legacy}, this.TestPostcodeOperationCompleted, userState);
        }
        
        private void OnTestPostcodeOperationCompleted(object arg) {
            if ((this.TestPostcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestPostcodeCompleted(this, new TestPostcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/TestPostcodeAcceptance", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] TestPostcodeAcceptance(string QuoteType, string Postcode) {
            object[] results = this.Invoke("TestPostcodeAcceptance", new object[] {
                        QuoteType,
                        Postcode});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void TestPostcodeAcceptanceAsync(string QuoteType, string Postcode) {
            this.TestPostcodeAcceptanceAsync(QuoteType, Postcode, null);
        }
        
        /// <remarks/>
        public void TestPostcodeAcceptanceAsync(string QuoteType, string Postcode, object userState) {
            if ((this.TestPostcodeAcceptanceOperationCompleted == null)) {
                this.TestPostcodeAcceptanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestPostcodeAcceptanceOperationCompleted);
            }
            this.InvokeAsync("TestPostcodeAcceptance", new object[] {
                        QuoteType,
                        Postcode}, this.TestPostcodeAcceptanceOperationCompleted, userState);
        }
        
        private void OnTestPostcodeAcceptanceOperationCompleted(object arg) {
            if ((this.TestPostcodeAcceptanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestPostcodeAcceptanceCompleted(this, new TestPostcodeAcceptanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/TestAddressAcceptance", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] TestAddressAcceptance(string QuoteType, string Postcode, string FullAddress) {
            object[] results = this.Invoke("TestAddressAcceptance", new object[] {
                        QuoteType,
                        Postcode,
                        FullAddress});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void TestAddressAcceptanceAsync(string QuoteType, string Postcode, string FullAddress) {
            this.TestAddressAcceptanceAsync(QuoteType, Postcode, FullAddress, null);
        }
        
        /// <remarks/>
        public void TestAddressAcceptanceAsync(string QuoteType, string Postcode, string FullAddress, object userState) {
            if ((this.TestAddressAcceptanceOperationCompleted == null)) {
                this.TestAddressAcceptanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestAddressAcceptanceOperationCompleted);
            }
            this.InvokeAsync("TestAddressAcceptance", new object[] {
                        QuoteType,
                        Postcode,
                        FullAddress}, this.TestAddressAcceptanceOperationCompleted, userState);
        }
        
        private void OnTestAddressAcceptanceOperationCompleted(object arg) {
            if ((this.TestAddressAcceptanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestAddressAcceptanceCompleted(this, new TestAddressAcceptanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/MemberMI", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfMember MemberMI(string APIKey, string Token, string[] MemberIDs) {
            object[] results = this.Invoke("MemberMI", new object[] {
                        APIKey,
                        Token,
                        MemberIDs});
            return ((APIResponseOfListOfMember)(results[0]));
        }
        
        /// <remarks/>
        public void MemberMIAsync(string APIKey, string Token, string[] MemberIDs) {
            this.MemberMIAsync(APIKey, Token, MemberIDs, null);
        }
        
        /// <remarks/>
        public void MemberMIAsync(string APIKey, string Token, string[] MemberIDs, object userState) {
            if ((this.MemberMIOperationCompleted == null)) {
                this.MemberMIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMemberMIOperationCompleted);
            }
            this.InvokeAsync("MemberMI", new object[] {
                        APIKey,
                        Token,
                        MemberIDs}, this.MemberMIOperationCompleted, userState);
        }
        
        private void OnMemberMIOperationCompleted(object arg) {
            if ((this.MemberMICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MemberMICompleted(this, new MemberMICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/TESTMemberMI", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfMember TESTMemberMI(string APIKey, string Token) {
            object[] results = this.Invoke("TESTMemberMI", new object[] {
                        APIKey,
                        Token});
            return ((APIResponseOfListOfMember)(results[0]));
        }
        
        /// <remarks/>
        public void TESTMemberMIAsync(string APIKey, string Token) {
            this.TESTMemberMIAsync(APIKey, Token, null);
        }
        
        /// <remarks/>
        public void TESTMemberMIAsync(string APIKey, string Token, object userState) {
            if ((this.TESTMemberMIOperationCompleted == null)) {
                this.TESTMemberMIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTESTMemberMIOperationCompleted);
            }
            this.InvokeAsync("TESTMemberMI", new object[] {
                        APIKey,
                        Token}, this.TESTMemberMIOperationCompleted, userState);
        }
        
        private void OnTESTMemberMIOperationCompleted(object arg) {
            if ((this.TESTMemberMICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TESTMemberMICompleted(this, new TESTMemberMICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ChurchillsInterface", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfInt64 ChurchillsInterface(string APIKey, string Token, long UserRecord, string SiteAccessToken, Field[] Fields) {
            object[] results = this.Invoke("ChurchillsInterface", new object[] {
                        APIKey,
                        Token,
                        UserRecord,
                        SiteAccessToken,
                        Fields});
            return ((APIResponseOfInt64)(results[0]));
        }
        
        /// <remarks/>
        public void ChurchillsInterfaceAsync(string APIKey, string Token, long UserRecord, string SiteAccessToken, Field[] Fields) {
            this.ChurchillsInterfaceAsync(APIKey, Token, UserRecord, SiteAccessToken, Fields, null);
        }
        
        /// <remarks/>
        public void ChurchillsInterfaceAsync(string APIKey, string Token, long UserRecord, string SiteAccessToken, Field[] Fields, object userState) {
            if ((this.ChurchillsInterfaceOperationCompleted == null)) {
                this.ChurchillsInterfaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChurchillsInterfaceOperationCompleted);
            }
            this.InvokeAsync("ChurchillsInterface", new object[] {
                        APIKey,
                        Token,
                        UserRecord,
                        SiteAccessToken,
                        Fields}, this.ChurchillsInterfaceOperationCompleted, userState);
        }
        
        private void OnChurchillsInterfaceOperationCompleted(object arg) {
            if ((this.ChurchillsInterfaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChurchillsInterfaceCompleted(this, new ChurchillsInterfaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/SetAdviser", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfBoolean SetAdviser(string APIKey, string UserToken, string SystemToken, int QuoteRecord, string NewAdviserInitials) {
            object[] results = this.Invoke("SetAdviser", new object[] {
                        APIKey,
                        UserToken,
                        SystemToken,
                        QuoteRecord,
                        NewAdviserInitials});
            return ((APIResponseOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void SetAdviserAsync(string APIKey, string UserToken, string SystemToken, int QuoteRecord, string NewAdviserInitials) {
            this.SetAdviserAsync(APIKey, UserToken, SystemToken, QuoteRecord, NewAdviserInitials, null);
        }
        
        /// <remarks/>
        public void SetAdviserAsync(string APIKey, string UserToken, string SystemToken, int QuoteRecord, string NewAdviserInitials, object userState) {
            if ((this.SetAdviserOperationCompleted == null)) {
                this.SetAdviserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAdviserOperationCompleted);
            }
            this.InvokeAsync("SetAdviser", new object[] {
                        APIKey,
                        UserToken,
                        SystemToken,
                        QuoteRecord,
                        NewAdviserInitials}, this.SetAdviserOperationCompleted, userState);
        }
        
        private void OnSetAdviserOperationCompleted(object arg) {
            if ((this.SetAdviserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAdviserCompleted(this, new SetAdviserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/AddNote", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfBoolean AddNote(string APIKey, string UserToken, string SystemToken, int QuoteRecord, string Note) {
            object[] results = this.Invoke("AddNote", new object[] {
                        APIKey,
                        UserToken,
                        SystemToken,
                        QuoteRecord,
                        Note});
            return ((APIResponseOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void AddNoteAsync(string APIKey, string UserToken, string SystemToken, int QuoteRecord, string Note) {
            this.AddNoteAsync(APIKey, UserToken, SystemToken, QuoteRecord, Note, null);
        }
        
        /// <remarks/>
        public void AddNoteAsync(string APIKey, string UserToken, string SystemToken, int QuoteRecord, string Note, object userState) {
            if ((this.AddNoteOperationCompleted == null)) {
                this.AddNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNoteOperationCompleted);
            }
            this.InvokeAsync("AddNote", new object[] {
                        APIKey,
                        UserToken,
                        SystemToken,
                        QuoteRecord,
                        Note}, this.AddNoteOperationCompleted, userState);
        }
        
        private void OnAddNoteOperationCompleted(object arg) {
            if ((this.AddNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNoteCompleted(this, new AddNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/DeleteNote", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfBoolean DeleteNote(string APIKey, string UserToken, string SystemToken, int Record) {
            object[] results = this.Invoke("DeleteNote", new object[] {
                        APIKey,
                        UserToken,
                        SystemToken,
                        Record});
            return ((APIResponseOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteNoteAsync(string APIKey, string UserToken, string SystemToken, int Record) {
            this.DeleteNoteAsync(APIKey, UserToken, SystemToken, Record, null);
        }
        
        /// <remarks/>
        public void DeleteNoteAsync(string APIKey, string UserToken, string SystemToken, int Record, object userState) {
            if ((this.DeleteNoteOperationCompleted == null)) {
                this.DeleteNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteNoteOperationCompleted);
            }
            this.InvokeAsync("DeleteNote", new object[] {
                        APIKey,
                        UserToken,
                        SystemToken,
                        Record}, this.DeleteNoteOperationCompleted, userState);
        }
        
        private void OnDeleteNoteOperationCompleted(object arg) {
            if ((this.DeleteNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteNoteCompleted(this, new DeleteNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ToggleEnrichment", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfBoolean ToggleEnrichment(string APIKey, string Token, string SystemToken, int QuoteRecord, string ActionKey, EnrichmentEventType EnrichmentType, bool SetToInclude) {
            object[] results = this.Invoke("ToggleEnrichment", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        QuoteRecord,
                        ActionKey,
                        EnrichmentType,
                        SetToInclude});
            return ((APIResponseOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void ToggleEnrichmentAsync(string APIKey, string Token, string SystemToken, int QuoteRecord, string ActionKey, EnrichmentEventType EnrichmentType, bool SetToInclude) {
            this.ToggleEnrichmentAsync(APIKey, Token, SystemToken, QuoteRecord, ActionKey, EnrichmentType, SetToInclude, null);
        }
        
        /// <remarks/>
        public void ToggleEnrichmentAsync(string APIKey, string Token, string SystemToken, int QuoteRecord, string ActionKey, EnrichmentEventType EnrichmentType, bool SetToInclude, object userState) {
            if ((this.ToggleEnrichmentOperationCompleted == null)) {
                this.ToggleEnrichmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnToggleEnrichmentOperationCompleted);
            }
            this.InvokeAsync("ToggleEnrichment", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        QuoteRecord,
                        ActionKey,
                        EnrichmentType,
                        SetToInclude}, this.ToggleEnrichmentOperationCompleted, userState);
        }
        
        private void OnToggleEnrichmentOperationCompleted(object arg) {
            if ((this.ToggleEnrichmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ToggleEnrichmentCompleted(this, new ToggleEnrichmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/DeleteEvent", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfBoolean DeleteEvent(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord, string ActionKey) {
            object[] results = this.Invoke("DeleteEvent", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        QuoteRecord,
                        ActionKey});
            return ((APIResponseOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEventAsync(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord, string ActionKey) {
            this.DeleteEventAsync(APIKey, Token, UserToken, SystemToken, QuoteRecord, ActionKey, null);
        }
        
        /// <remarks/>
        public void DeleteEventAsync(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord, string ActionKey, object userState) {
            if ((this.DeleteEventOperationCompleted == null)) {
                this.DeleteEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEventOperationCompleted);
            }
            this.InvokeAsync("DeleteEvent", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        QuoteRecord,
                        ActionKey}, this.DeleteEventOperationCompleted, userState);
        }
        
        private void OnDeleteEventOperationCompleted(object arg) {
            if ((this.DeleteEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEventCompleted(this, new DeleteEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/ListNotes", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfDataEventNote ListNotes(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord) {
            object[] results = this.Invoke("ListNotes", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        QuoteRecord});
            return ((APIResponseOfListOfDataEventNote)(results[0]));
        }
        
        /// <remarks/>
        public void ListNotesAsync(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord) {
            this.ListNotesAsync(APIKey, Token, UserToken, SystemToken, QuoteRecord, null);
        }
        
        /// <remarks/>
        public void ListNotesAsync(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord, object userState) {
            if ((this.ListNotesOperationCompleted == null)) {
                this.ListNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListNotesOperationCompleted);
            }
            this.InvokeAsync("ListNotes", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        QuoteRecord}, this.ListNotesOperationCompleted, userState);
        }
        
        private void OnListNotesOperationCompleted(object arg) {
            if ((this.ListNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListNotesCompleted(this, new ListNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/QueryGetCount", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfInt64 QueryGetCount(string APIKey, string Token, string UserToken, string SystemToken, string Term) {
            object[] results = this.Invoke("QueryGetCount", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        Term});
            return ((APIResponseOfInt64)(results[0]));
        }
        
        /// <remarks/>
        public void QueryGetCountAsync(string APIKey, string Token, string UserToken, string SystemToken, string Term) {
            this.QueryGetCountAsync(APIKey, Token, UserToken, SystemToken, Term, null);
        }
        
        /// <remarks/>
        public void QueryGetCountAsync(string APIKey, string Token, string UserToken, string SystemToken, string Term, object userState) {
            if ((this.QueryGetCountOperationCompleted == null)) {
                this.QueryGetCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryGetCountOperationCompleted);
            }
            this.InvokeAsync("QueryGetCount", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        Term}, this.QueryGetCountOperationCompleted, userState);
        }
        
        private void OnQueryGetCountOperationCompleted(object arg) {
            if ((this.QueryGetCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryGetCountCompleted(this, new QueryGetCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/Query", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfListOfDataEvent Query(string APIKey, string Token, string UserToken, string SystemToken, string Term) {
            object[] results = this.Invoke("Query", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        Term});
            return ((APIResponseOfListOfDataEvent)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAsync(string APIKey, string Token, string UserToken, string SystemToken, string Term) {
            this.QueryAsync(APIKey, Token, UserToken, SystemToken, Term, null);
        }
        
        /// <remarks/>
        public void QueryAsync(string APIKey, string Token, string UserToken, string SystemToken, string Term, object userState) {
            if ((this.QueryOperationCompleted == null)) {
                this.QueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOperationCompleted);
            }
            this.InvokeAsync("Query", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        Term}, this.QueryOperationCompleted, userState);
        }
        
        private void OnQueryOperationCompleted(object arg) {
            if ((this.QueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCompleted(this, new QueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/CreateOverrideCode", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfString CreateOverrideCode(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord) {
            object[] results = this.Invoke("CreateOverrideCode", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        QuoteRecord});
            return ((APIResponseOfString)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOverrideCodeAsync(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord) {
            this.CreateOverrideCodeAsync(APIKey, Token, UserToken, SystemToken, QuoteRecord, null);
        }
        
        /// <remarks/>
        public void CreateOverrideCodeAsync(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord, object userState) {
            if ((this.CreateOverrideCodeOperationCompleted == null)) {
                this.CreateOverrideCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOverrideCodeOperationCompleted);
            }
            this.InvokeAsync("CreateOverrideCode", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        QuoteRecord}, this.CreateOverrideCodeOperationCompleted, userState);
        }
        
        private void OnCreateOverrideCodeOperationCompleted(object arg) {
            if ((this.CreateOverrideCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOverrideCodeCompleted(this, new CreateOverrideCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/RevokeOverrideCode", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfBoolean RevokeOverrideCode(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord) {
            object[] results = this.Invoke("RevokeOverrideCode", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        QuoteRecord});
            return ((APIResponseOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void RevokeOverrideCodeAsync(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord) {
            this.RevokeOverrideCodeAsync(APIKey, Token, UserToken, SystemToken, QuoteRecord, null);
        }
        
        /// <remarks/>
        public void RevokeOverrideCodeAsync(string APIKey, string Token, string UserToken, string SystemToken, int QuoteRecord, object userState) {
            if ((this.RevokeOverrideCodeOperationCompleted == null)) {
                this.RevokeOverrideCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRevokeOverrideCodeOperationCompleted);
            }
            this.InvokeAsync("RevokeOverrideCode", new object[] {
                        APIKey,
                        Token,
                        UserToken,
                        SystemToken,
                        QuoteRecord}, this.RevokeOverrideCodeOperationCompleted, userState);
        }
        
        private void OnRevokeOverrideCodeOperationCompleted(object arg) {
            if ((this.RevokeOverrideCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RevokeOverrideCodeCompleted(this, new RevokeOverrideCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/PreviewPolicyCancellation", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfCancellation PreviewPolicyCancellation(string APIKey, string Token, string SystemToken, int QuoteRecord, string QuoteType, decimal OverrideFee, System.DateTime EffectiveDate, bool ApplyFeeOverride, System.DateTime CancellationTakeupDate, decimal PremiumAdjustment, int SingleAddonRecord, bool Reinstate, string[] ExemptFromRefund) {
            object[] results = this.Invoke("PreviewPolicyCancellation", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        QuoteRecord,
                        QuoteType,
                        OverrideFee,
                        EffectiveDate,
                        ApplyFeeOverride,
                        CancellationTakeupDate,
                        PremiumAdjustment,
                        SingleAddonRecord,
                        Reinstate,
                        ExemptFromRefund});
            return ((APIResponseOfCancellation)(results[0]));
        }
        
        /// <remarks/>
        public void PreviewPolicyCancellationAsync(string APIKey, string Token, string SystemToken, int QuoteRecord, string QuoteType, decimal OverrideFee, System.DateTime EffectiveDate, bool ApplyFeeOverride, System.DateTime CancellationTakeupDate, decimal PremiumAdjustment, int SingleAddonRecord, bool Reinstate, string[] ExemptFromRefund) {
            this.PreviewPolicyCancellationAsync(APIKey, Token, SystemToken, QuoteRecord, QuoteType, OverrideFee, EffectiveDate, ApplyFeeOverride, CancellationTakeupDate, PremiumAdjustment, SingleAddonRecord, Reinstate, ExemptFromRefund, null);
        }
        
        /// <remarks/>
        public void PreviewPolicyCancellationAsync(string APIKey, string Token, string SystemToken, int QuoteRecord, string QuoteType, decimal OverrideFee, System.DateTime EffectiveDate, bool ApplyFeeOverride, System.DateTime CancellationTakeupDate, decimal PremiumAdjustment, int SingleAddonRecord, bool Reinstate, string[] ExemptFromRefund, object userState) {
            if ((this.PreviewPolicyCancellationOperationCompleted == null)) {
                this.PreviewPolicyCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPreviewPolicyCancellationOperationCompleted);
            }
            this.InvokeAsync("PreviewPolicyCancellation", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        QuoteRecord,
                        QuoteType,
                        OverrideFee,
                        EffectiveDate,
                        ApplyFeeOverride,
                        CancellationTakeupDate,
                        PremiumAdjustment,
                        SingleAddonRecord,
                        Reinstate,
                        ExemptFromRefund}, this.PreviewPolicyCancellationOperationCompleted, userState);
        }
        
        private void OnPreviewPolicyCancellationOperationCompleted(object arg) {
            if ((this.PreviewPolicyCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PreviewPolicyCancellationCompleted(this, new PreviewPolicyCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/PreviewAddonCancellation", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfCancellation PreviewAddonCancellation(string APIKey, string Token, string SystemToken, string QuoteType, string ParentPolicyReference, string AddonSubTypeName, decimal OverrideFee, System.DateTime EffectiveDate, bool ApplyFeeOverride, System.DateTime CancellationTakeupDate, decimal PremiumAdjustment, int SingleAddonRecord) {
            object[] results = this.Invoke("PreviewAddonCancellation", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        QuoteType,
                        ParentPolicyReference,
                        AddonSubTypeName,
                        OverrideFee,
                        EffectiveDate,
                        ApplyFeeOverride,
                        CancellationTakeupDate,
                        PremiumAdjustment,
                        SingleAddonRecord});
            return ((APIResponseOfCancellation)(results[0]));
        }
        
        /// <remarks/>
        public void PreviewAddonCancellationAsync(string APIKey, string Token, string SystemToken, string QuoteType, string ParentPolicyReference, string AddonSubTypeName, decimal OverrideFee, System.DateTime EffectiveDate, bool ApplyFeeOverride, System.DateTime CancellationTakeupDate, decimal PremiumAdjustment, int SingleAddonRecord) {
            this.PreviewAddonCancellationAsync(APIKey, Token, SystemToken, QuoteType, ParentPolicyReference, AddonSubTypeName, OverrideFee, EffectiveDate, ApplyFeeOverride, CancellationTakeupDate, PremiumAdjustment, SingleAddonRecord, null);
        }
        
        /// <remarks/>
        public void PreviewAddonCancellationAsync(string APIKey, string Token, string SystemToken, string QuoteType, string ParentPolicyReference, string AddonSubTypeName, decimal OverrideFee, System.DateTime EffectiveDate, bool ApplyFeeOverride, System.DateTime CancellationTakeupDate, decimal PremiumAdjustment, int SingleAddonRecord, object userState) {
            if ((this.PreviewAddonCancellationOperationCompleted == null)) {
                this.PreviewAddonCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPreviewAddonCancellationOperationCompleted);
            }
            this.InvokeAsync("PreviewAddonCancellation", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        QuoteType,
                        ParentPolicyReference,
                        AddonSubTypeName,
                        OverrideFee,
                        EffectiveDate,
                        ApplyFeeOverride,
                        CancellationTakeupDate,
                        PremiumAdjustment,
                        SingleAddonRecord}, this.PreviewAddonCancellationOperationCompleted, userState);
        }
        
        private void OnPreviewAddonCancellationOperationCompleted(object arg) {
            if ((this.PreviewAddonCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PreviewAddonCancellationCompleted(this, new PreviewAddonCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/PolicyCancellation", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfBoolean PolicyCancellation(
                    string APIKey, 
                    string Token, 
                    string SystemToken, 
                    int QuoteRecord, 
                    string QuoteType, 
                    decimal OverrideFee, 
                    System.DateTime EffectiveDate, 
                    bool ApplyFeeOverride, 
                    System.DateTime CancellationTakeupDate, 
                    bool ZeroRefund, 
                    decimal PremiumAdjustment, 
                    int SingleAddonRecord, 
                    string Reason, 
                    bool ForceOutstandingQuotesRemoval, 
                    bool Reinstate, 
                    string[] ExemptFromRefund) {
            object[] results = this.Invoke("PolicyCancellation", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        QuoteRecord,
                        QuoteType,
                        OverrideFee,
                        EffectiveDate,
                        ApplyFeeOverride,
                        CancellationTakeupDate,
                        ZeroRefund,
                        PremiumAdjustment,
                        SingleAddonRecord,
                        Reason,
                        ForceOutstandingQuotesRemoval,
                        Reinstate,
                        ExemptFromRefund});
            return ((APIResponseOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void PolicyCancellationAsync(
                    string APIKey, 
                    string Token, 
                    string SystemToken, 
                    int QuoteRecord, 
                    string QuoteType, 
                    decimal OverrideFee, 
                    System.DateTime EffectiveDate, 
                    bool ApplyFeeOverride, 
                    System.DateTime CancellationTakeupDate, 
                    bool ZeroRefund, 
                    decimal PremiumAdjustment, 
                    int SingleAddonRecord, 
                    string Reason, 
                    bool ForceOutstandingQuotesRemoval, 
                    bool Reinstate, 
                    string[] ExemptFromRefund) {
            this.PolicyCancellationAsync(APIKey, Token, SystemToken, QuoteRecord, QuoteType, OverrideFee, EffectiveDate, ApplyFeeOverride, CancellationTakeupDate, ZeroRefund, PremiumAdjustment, SingleAddonRecord, Reason, ForceOutstandingQuotesRemoval, Reinstate, ExemptFromRefund, null);
        }
        
        /// <remarks/>
        public void PolicyCancellationAsync(
                    string APIKey, 
                    string Token, 
                    string SystemToken, 
                    int QuoteRecord, 
                    string QuoteType, 
                    decimal OverrideFee, 
                    System.DateTime EffectiveDate, 
                    bool ApplyFeeOverride, 
                    System.DateTime CancellationTakeupDate, 
                    bool ZeroRefund, 
                    decimal PremiumAdjustment, 
                    int SingleAddonRecord, 
                    string Reason, 
                    bool ForceOutstandingQuotesRemoval, 
                    bool Reinstate, 
                    string[] ExemptFromRefund, 
                    object userState) {
            if ((this.PolicyCancellationOperationCompleted == null)) {
                this.PolicyCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPolicyCancellationOperationCompleted);
            }
            this.InvokeAsync("PolicyCancellation", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        QuoteRecord,
                        QuoteType,
                        OverrideFee,
                        EffectiveDate,
                        ApplyFeeOverride,
                        CancellationTakeupDate,
                        ZeroRefund,
                        PremiumAdjustment,
                        SingleAddonRecord,
                        Reason,
                        ForceOutstandingQuotesRemoval,
                        Reinstate,
                        ExemptFromRefund}, this.PolicyCancellationOperationCompleted, userState);
        }
        
        private void OnPolicyCancellationOperationCompleted(object arg) {
            if ((this.PolicyCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PolicyCancellationCompleted(this, new PolicyCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/AddonCancellation", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public APIResponseOfBoolean AddonCancellation(string APIKey, string Token, string SystemToken, string QuoteType, string ParentPolicyReference, string AddonSubTypeName, decimal OverrideFee, System.DateTime EffectiveDate, bool ApplyFeeOverride, System.DateTime CancellationTakeupDate, decimal PremiumAdjustment, int SingleAddonRecord) {
            object[] results = this.Invoke("AddonCancellation", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        QuoteType,
                        ParentPolicyReference,
                        AddonSubTypeName,
                        OverrideFee,
                        EffectiveDate,
                        ApplyFeeOverride,
                        CancellationTakeupDate,
                        PremiumAdjustment,
                        SingleAddonRecord});
            return ((APIResponseOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void AddonCancellationAsync(string APIKey, string Token, string SystemToken, string QuoteType, string ParentPolicyReference, string AddonSubTypeName, decimal OverrideFee, System.DateTime EffectiveDate, bool ApplyFeeOverride, System.DateTime CancellationTakeupDate, decimal PremiumAdjustment, int SingleAddonRecord) {
            this.AddonCancellationAsync(APIKey, Token, SystemToken, QuoteType, ParentPolicyReference, AddonSubTypeName, OverrideFee, EffectiveDate, ApplyFeeOverride, CancellationTakeupDate, PremiumAdjustment, SingleAddonRecord, null);
        }
        
        /// <remarks/>
        public void AddonCancellationAsync(string APIKey, string Token, string SystemToken, string QuoteType, string ParentPolicyReference, string AddonSubTypeName, decimal OverrideFee, System.DateTime EffectiveDate, bool ApplyFeeOverride, System.DateTime CancellationTakeupDate, decimal PremiumAdjustment, int SingleAddonRecord, object userState) {
            if ((this.AddonCancellationOperationCompleted == null)) {
                this.AddonCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddonCancellationOperationCompleted);
            }
            this.InvokeAsync("AddonCancellation", new object[] {
                        APIKey,
                        Token,
                        SystemToken,
                        QuoteType,
                        ParentPolicyReference,
                        AddonSubTypeName,
                        OverrideFee,
                        EffectiveDate,
                        ApplyFeeOverride,
                        CancellationTakeupDate,
                        PremiumAdjustment,
                        SingleAddonRecord}, this.AddonCancellationOperationCompleted, userState);
        }
        
        private void OnAddonCancellationOperationCompleted(object arg) {
            if ((this.AddonCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddonCancellationCompleted(this, new AddonCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://cfsnetwork.co.uk/SetAPIPassword", RequestNamespace="https://cfsnetwork.co.uk", ResponseNamespace="https://cfsnetwork.co.uk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetAPIPassword(string APIKey, string NewPassword) {
            object[] results = this.Invoke("SetAPIPassword", new object[] {
                        APIKey,
                        NewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetAPIPasswordAsync(string APIKey, string NewPassword) {
            this.SetAPIPasswordAsync(APIKey, NewPassword, null);
        }
        
        /// <remarks/>
        public void SetAPIPasswordAsync(string APIKey, string NewPassword, object userState) {
            if ((this.SetAPIPasswordOperationCompleted == null)) {
                this.SetAPIPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAPIPasswordOperationCompleted);
            }
            this.InvokeAsync("SetAPIPassword", new object[] {
                        APIKey,
                        NewPassword}, this.SetAPIPasswordOperationCompleted, userState);
        }
        
        private void OnSetAPIPasswordOperationCompleted(object arg) {
            if ((this.SetAPIPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAPIPasswordCompleted(this, new SetAPIPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfListOfDataEvent {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private DataEvent[] responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public DataEvent[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseProfiling {
        
        private int itemsPerPageField;
        
        private int currentPageField;
        
        private long totalRowsField;
        
        private long totalPagesField;
        
        private decimal timeToExecuteField;
        
        private decimal timePerRowField;
        
        private string[] logLinesField;
        
        /// <remarks/>
        public int ItemsPerPage {
            get {
                return this.itemsPerPageField;
            }
            set {
                this.itemsPerPageField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentPage {
            get {
                return this.currentPageField;
            }
            set {
                this.currentPageField = value;
            }
        }
        
        /// <remarks/>
        public long TotalRows {
            get {
                return this.totalRowsField;
            }
            set {
                this.totalRowsField = value;
            }
        }
        
        /// <remarks/>
        public long TotalPages {
            get {
                return this.totalPagesField;
            }
            set {
                this.totalPagesField = value;
            }
        }
        
        /// <remarks/>
        public decimal TimeToExecute {
            get {
                return this.timeToExecuteField;
            }
            set {
                this.timeToExecuteField = value;
            }
        }
        
        /// <remarks/>
        public decimal TimePerRow {
            get {
                return this.timePerRowField;
            }
            set {
                this.timePerRowField = value;
            }
        }
        
        /// <remarks/>
        public string[] LogLines {
            get {
                return this.logLinesField;
            }
            set {
                this.logLinesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class CancellationLine {
        
        private int transactionRecordField;
        
        private string typeField;
        
        private System.DateTime entryDateField;
        
        private System.DateTime startDateField;
        
        private int daysOnCoverField;
        
        private int maxDaysOnCoverField;
        
        private decimal invoicePaidField;
        
        private decimal invoiceCommissionField;
        
        private decimal invoiceFeeField;
        
        private decimal paidField;
        
        private decimal paidCommissionField;
        
        private decimal refundedField;
        
        private decimal refundedComissionField;
        
        private decimal refundedFeeField;
        
        private decimal costOfCoverField;
        
        private decimal yCostOfComissionField;
        
        private int policyRecordField;
        
        private string policyReferenceField;
        
        private CancellationLine[] breakdownLinesField;
        
        private bool refundExemptField;
        
        /// <remarks/>
        public int TransactionRecord {
            get {
                return this.transactionRecordField;
            }
            set {
                this.transactionRecordField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EntryDate {
            get {
                return this.entryDateField;
            }
            set {
                this.entryDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public int DaysOnCover {
            get {
                return this.daysOnCoverField;
            }
            set {
                this.daysOnCoverField = value;
            }
        }
        
        /// <remarks/>
        public int MaxDaysOnCover {
            get {
                return this.maxDaysOnCoverField;
            }
            set {
                this.maxDaysOnCoverField = value;
            }
        }
        
        /// <remarks/>
        public decimal InvoicePaid {
            get {
                return this.invoicePaidField;
            }
            set {
                this.invoicePaidField = value;
            }
        }
        
        /// <remarks/>
        public decimal InvoiceCommission {
            get {
                return this.invoiceCommissionField;
            }
            set {
                this.invoiceCommissionField = value;
            }
        }
        
        /// <remarks/>
        public decimal InvoiceFee {
            get {
                return this.invoiceFeeField;
            }
            set {
                this.invoiceFeeField = value;
            }
        }
        
        /// <remarks/>
        public decimal Paid {
            get {
                return this.paidField;
            }
            set {
                this.paidField = value;
            }
        }
        
        /// <remarks/>
        public decimal PaidCommission {
            get {
                return this.paidCommissionField;
            }
            set {
                this.paidCommissionField = value;
            }
        }
        
        /// <remarks/>
        public decimal Refunded {
            get {
                return this.refundedField;
            }
            set {
                this.refundedField = value;
            }
        }
        
        /// <remarks/>
        public decimal RefundedComission {
            get {
                return this.refundedComissionField;
            }
            set {
                this.refundedComissionField = value;
            }
        }
        
        /// <remarks/>
        public decimal RefundedFee {
            get {
                return this.refundedFeeField;
            }
            set {
                this.refundedFeeField = value;
            }
        }
        
        /// <remarks/>
        public decimal CostOfCover {
            get {
                return this.costOfCoverField;
            }
            set {
                this.costOfCoverField = value;
            }
        }
        
        /// <remarks/>
        public decimal yCostOfComission {
            get {
                return this.yCostOfComissionField;
            }
            set {
                this.yCostOfComissionField = value;
            }
        }
        
        /// <remarks/>
        public int PolicyRecord {
            get {
                return this.policyRecordField;
            }
            set {
                this.policyRecordField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyReference {
            get {
                return this.policyReferenceField;
            }
            set {
                this.policyReferenceField = value;
            }
        }
        
        /// <remarks/>
        public CancellationLine[] BreakdownLines {
            get {
                return this.breakdownLinesField;
            }
            set {
                this.breakdownLinesField = value;
            }
        }
        
        /// <remarks/>
        public bool RefundExempt {
            get {
                return this.refundExemptField;
            }
            set {
                this.refundExemptField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class Cancellation {
        
        private bool policyFeeRefundedField;
        
        private bool hasClaimsField;
        
        private decimal appliedFeeField;
        
        private System.DateTime cancellationDateField;
        
        private CancellationLine[] cancellationLinesField;
        
        private decimal nextInstalmentAmountField;
        
        private System.DateTime minAllowedCancellationDateField;
        
        private System.DateTime maxAllowedCancellationDateField;
        
        private string[] availableCancellationReasonsField;
        
        private bool hasOutstandingMTAField;
        
        private bool hasOutstandingRenewalInviteField;
        
        /// <remarks/>
        public bool PolicyFeeRefunded {
            get {
                return this.policyFeeRefundedField;
            }
            set {
                this.policyFeeRefundedField = value;
            }
        }
        
        /// <remarks/>
        public bool HasClaims {
            get {
                return this.hasClaimsField;
            }
            set {
                this.hasClaimsField = value;
            }
        }
        
        /// <remarks/>
        public decimal AppliedFee {
            get {
                return this.appliedFeeField;
            }
            set {
                this.appliedFeeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CancellationDate {
            get {
                return this.cancellationDateField;
            }
            set {
                this.cancellationDateField = value;
            }
        }
        
        /// <remarks/>
        public CancellationLine[] CancellationLines {
            get {
                return this.cancellationLinesField;
            }
            set {
                this.cancellationLinesField = value;
            }
        }
        
        /// <remarks/>
        public decimal NextInstalmentAmount {
            get {
                return this.nextInstalmentAmountField;
            }
            set {
                this.nextInstalmentAmountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MinAllowedCancellationDate {
            get {
                return this.minAllowedCancellationDateField;
            }
            set {
                this.minAllowedCancellationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MaxAllowedCancellationDate {
            get {
                return this.maxAllowedCancellationDateField;
            }
            set {
                this.maxAllowedCancellationDateField = value;
            }
        }
        
        /// <remarks/>
        public string[] AvailableCancellationReasons {
            get {
                return this.availableCancellationReasonsField;
            }
            set {
                this.availableCancellationReasonsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasOutstandingMTA {
            get {
                return this.hasOutstandingMTAField;
            }
            set {
                this.hasOutstandingMTAField = value;
            }
        }
        
        /// <remarks/>
        public bool HasOutstandingRenewalInvite {
            get {
                return this.hasOutstandingRenewalInviteField;
            }
            set {
                this.hasOutstandingRenewalInviteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfCancellation {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private Cancellation responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public Cancellation Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class DataEventNote {
        
        private string noteField;
        
        private string addedByUsernameField;
        
        private System.DateTime timeStampField;
        
        private string linkTypeField;
        
        private int quoteRecordField;
        
        private int recordField;
        
        private EnrichmentEventType enrichmentTypeField;
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string AddedByUsername {
            get {
                return this.addedByUsernameField;
            }
            set {
                this.addedByUsernameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public string LinkType {
            get {
                return this.linkTypeField;
            }
            set {
                this.linkTypeField = value;
            }
        }
        
        /// <remarks/>
        public int QuoteRecord {
            get {
                return this.quoteRecordField;
            }
            set {
                this.quoteRecordField = value;
            }
        }
        
        /// <remarks/>
        public int Record {
            get {
                return this.recordField;
            }
            set {
                this.recordField = value;
            }
        }
        
        /// <remarks/>
        public EnrichmentEventType EnrichmentType {
            get {
                return this.enrichmentTypeField;
            }
            set {
                this.enrichmentTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public enum EnrichmentEventType {
        
        /// <remarks/>
        Bad,
        
        /// <remarks/>
        ProspectCreated,
        
        /// <remarks/>
        ClientCreated,
        
        /// <remarks/>
        QuoteDownloaded,
        
        /// <remarks/>
        Invited,
        
        /// <remarks/>
        Dialled,
        
        /// <remarks/>
        AddedNote,
        
        /// <remarks/>
        AdviserAssigned,
        
        /// <remarks/>
        Lapsed,
        
        /// <remarks/>
        TopXInfoAdded,
        
        /// <remarks/>
        DoNotRenew,
        
        /// <remarks/>
        Duplicate,
        
        /// <remarks/>
        TagAdded,
        
        /// <remarks/>
        PurchaseHalted,
        
        /// <remarks/>
        Notification,
        
        /// <remarks/>
        SanctionsSearchMatch,
        
        /// <remarks/>
        SanctionsSearchFail,
        
        /// <remarks/>
        SMSInvited,
        
        /// <remarks/>
        CancellationReasonChanged,
        
        /// <remarks/>
        ReferOverrideRequested,
        
        /// <remarks/>
        ReferOverrideRejected,
        
        /// <remarks/>
        ReferOverrideAccepted,
        
        /// <remarks/>
        ReferOverrideDeclined,
        
        /// <remarks/>
        ReferOverrideCancelled,
        
        /// <remarks/>
        AutomaticRefundFailed,
        
        /// <remarks/>
        EDIDeliveredFTP,
        
        /// <remarks/>
        EDIDeliveredEmail,
        
        /// <remarks/>
        EDIDeliveredSQS,
        
        /// <remarks/>
        RenewalReminderSent,
        
        /// <remarks/>
        RenewalReminderFailed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfListOfDataEventNote {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private DataEventNote[] responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public DataEventNote[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfInt64 {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private long responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public long Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class Member {
        
        private string idField;
        
        private System.Nullable<System.DateTime> insuranceHomeJourneyStartedField;
        
        private System.Nullable<System.DateTime> insuranceHomeQuoteAttemptedField;
        
        private System.Nullable<System.DateTime> insuranceHomeQuoteProvidedField;
        
        private System.Nullable<System.DateTime> insuranceHomeTakenUpField;
        
        private decimal insuranceHomeQuotePremiumField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InsuranceHomeJourneyStarted {
            get {
                return this.insuranceHomeJourneyStartedField;
            }
            set {
                this.insuranceHomeJourneyStartedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InsuranceHomeQuoteAttempted {
            get {
                return this.insuranceHomeQuoteAttemptedField;
            }
            set {
                this.insuranceHomeQuoteAttemptedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InsuranceHomeQuoteProvided {
            get {
                return this.insuranceHomeQuoteProvidedField;
            }
            set {
                this.insuranceHomeQuoteProvidedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InsuranceHomeTakenUp {
            get {
                return this.insuranceHomeTakenUpField;
            }
            set {
                this.insuranceHomeTakenUpField = value;
            }
        }
        
        /// <remarks/>
        public decimal InsuranceHomeQuotePremium {
            get {
                return this.insuranceHomeQuotePremiumField;
            }
            set {
                this.insuranceHomeQuotePremiumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfListOfMember {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private Member[] responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public Member[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class EditableField {
        
        private string typeField;
        
        private string fieldNameField;
        
        private string valueField;
        
        private string oValueField;
        
        private string labelField;
        
        private string groupTitleField;
        
        private bool lockedField;
        
        private string[] availableOptionsField;
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string oValue {
            get {
                return this.oValueField;
            }
            set {
                this.oValueField = value;
            }
        }
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public string GroupTitle {
            get {
                return this.groupTitleField;
            }
            set {
                this.groupTitleField = value;
            }
        }
        
        /// <remarks/>
        public bool Locked {
            get {
                return this.lockedField;
            }
            set {
                this.lockedField = value;
            }
        }
        
        /// <remarks/>
        public string[] AvailableOptions {
            get {
                return this.availableOptionsField;
            }
            set {
                this.availableOptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfListOfEditableField {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private EditableField[] responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public EditableField[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfListOfDocument {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private Document[] responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public Document[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class Document {
        
        private int policyRecordField;
        
        private string policyReferenceField;
        
        private string folderNameField;
        
        private int folderIDField;
        
        private string descriptionField;
        
        private int docRecordField;
        
        private string linkField;
        
        private string downloadLinkField;
        
        private string permalinkField;
        
        private string typeField;
        
        private bool viewedField;
        
        private System.DateTime lastViewedField;
        
        private DocumentCreationInfo creationDetailsField;
        
        /// <remarks/>
        public int PolicyRecord {
            get {
                return this.policyRecordField;
            }
            set {
                this.policyRecordField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyReference {
            get {
                return this.policyReferenceField;
            }
            set {
                this.policyReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string FolderName {
            get {
                return this.folderNameField;
            }
            set {
                this.folderNameField = value;
            }
        }
        
        /// <remarks/>
        public int FolderID {
            get {
                return this.folderIDField;
            }
            set {
                this.folderIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int DocRecord {
            get {
                return this.docRecordField;
            }
            set {
                this.docRecordField = value;
            }
        }
        
        /// <remarks/>
        public string Link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
            }
        }
        
        /// <remarks/>
        public string DownloadLink {
            get {
                return this.downloadLinkField;
            }
            set {
                this.downloadLinkField = value;
            }
        }
        
        /// <remarks/>
        public string Permalink {
            get {
                return this.permalinkField;
            }
            set {
                this.permalinkField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public bool Viewed {
            get {
                return this.viewedField;
            }
            set {
                this.viewedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastViewed {
            get {
                return this.lastViewedField;
            }
            set {
                this.lastViewedField = value;
            }
        }
        
        /// <remarks/>
        public DocumentCreationInfo CreationDetails {
            get {
                return this.creationDetailsField;
            }
            set {
                this.creationDetailsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class DocumentCreationInfo {
        
        private System.DateTime documentDateField;
        
        /// <remarks/>
        public System.DateTime DocumentDate {
            get {
                return this.documentDateField;
            }
            set {
                this.documentDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class MessageRelationship {
        
        private MessageRelationshipType typeField;
        
        private int linkRecordField;
        
        private string linkRefField;
        
        private int noteRecordField;
        
        /// <remarks/>
        public MessageRelationshipType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int LinkRecord {
            get {
                return this.linkRecordField;
            }
            set {
                this.linkRecordField = value;
            }
        }
        
        /// <remarks/>
        public string LinkRef {
            get {
                return this.linkRefField;
            }
            set {
                this.linkRefField = value;
            }
        }
        
        /// <remarks/>
        public int NoteRecord {
            get {
                return this.noteRecordField;
            }
            set {
                this.noteRecordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public enum MessageRelationshipType {
        
        /// <remarks/>
        Account,
        
        /// <remarks/>
        Policy,
        
        /// <remarks/>
        Claim,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class Message {
        
        private int recordField;
        
        private int parentRecordField;
        
        private int overrideField;
        
        private System.DateTime dateSentField;
        
        private string recipientField;
        
        private int recipientRecordField;
        
        private string senderField;
        
        private int replyToField;
        
        private SenderType senderTypeField;
        
        private string senderDepartmentField;
        
        private Status statusField;
        
        private System.DateTime statusDateField;
        
        private bool allowDeleteField;
        
        private bool allowReplyField;
        
        private string subjectField;
        
        private string contentSnippetField;
        
        private string[] linkedFileNameField;
        
        private string[] linkedFileURLField;
        
        private bool contentVerifiedField;
        
        private MessageRelationship[] relationshipsField;
        
        /// <remarks/>
        public int Record {
            get {
                return this.recordField;
            }
            set {
                this.recordField = value;
            }
        }
        
        /// <remarks/>
        public int ParentRecord {
            get {
                return this.parentRecordField;
            }
            set {
                this.parentRecordField = value;
            }
        }
        
        /// <remarks/>
        public int Override {
            get {
                return this.overrideField;
            }
            set {
                this.overrideField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateSent {
            get {
                return this.dateSentField;
            }
            set {
                this.dateSentField = value;
            }
        }
        
        /// <remarks/>
        public string Recipient {
            get {
                return this.recipientField;
            }
            set {
                this.recipientField = value;
            }
        }
        
        /// <remarks/>
        public int RecipientRecord {
            get {
                return this.recipientRecordField;
            }
            set {
                this.recipientRecordField = value;
            }
        }
        
        /// <remarks/>
        public string Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public int ReplyTo {
            get {
                return this.replyToField;
            }
            set {
                this.replyToField = value;
            }
        }
        
        /// <remarks/>
        public SenderType SenderType {
            get {
                return this.senderTypeField;
            }
            set {
                this.senderTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SenderDepartment {
            get {
                return this.senderDepartmentField;
            }
            set {
                this.senderDepartmentField = value;
            }
        }
        
        /// <remarks/>
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StatusDate {
            get {
                return this.statusDateField;
            }
            set {
                this.statusDateField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowDelete {
            get {
                return this.allowDeleteField;
            }
            set {
                this.allowDeleteField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowReply {
            get {
                return this.allowReplyField;
            }
            set {
                this.allowReplyField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string ContentSnippet {
            get {
                return this.contentSnippetField;
            }
            set {
                this.contentSnippetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LinkedFileName")]
        public string[] LinkedFileName {
            get {
                return this.linkedFileNameField;
            }
            set {
                this.linkedFileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LinkedFileURL")]
        public string[] LinkedFileURL {
            get {
                return this.linkedFileURLField;
            }
            set {
                this.linkedFileURLField = value;
            }
        }
        
        /// <remarks/>
        public bool ContentVerified {
            get {
                return this.contentVerifiedField;
            }
            set {
                this.contentVerifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Relationships")]
        public MessageRelationship[] Relationships {
            get {
                return this.relationshipsField;
            }
            set {
                this.relationshipsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public enum SenderType {
        
        /// <remarks/>
        FromClientToBroker,
        
        /// <remarks/>
        FromClientToContact,
        
        /// <remarks/>
        FromBrokerToClient,
        
        /// <remarks/>
        FromContactToClient,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public enum Status {
        
        /// <remarks/>
        Delivered,
        
        /// <remarks/>
        Received,
        
        /// <remarks/>
        Opened,
        
        /// <remarks/>
        Replied,
        
        /// <remarks/>
        Deleted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfListOfMessage {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private Message[] responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public Message[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfInt32 {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private int responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public int Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfString {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private string responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public string Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfDataItem {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private DataItem responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public DataItem Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class DataItem {
        
        private QuoteStageType stageField;
        
        private System.DateTime stageDateField;
        
        private string lastQuotePriceField;
        
        private string quoteTypeField;
        
        private string referenceField;
        
        private string policyRefField;
        
        private string currentPolicyRecordField;
        
        private Field[] fieldsField;
        
        private DataItemLink[] linksField;
        
        private Document[] documentsField;
        
        private string[] systemWarningsField;
        
        private int actualRecordField;
        
        private SchemeCurrency selectedCurrencyField;
        
        private System.DateTime policyStartDateField;
        
        private System.DateTime policyEndDateField;
        
        /// <remarks/>
        public QuoteStageType Stage {
            get {
                return this.stageField;
            }
            set {
                this.stageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StageDate {
            get {
                return this.stageDateField;
            }
            set {
                this.stageDateField = value;
            }
        }
        
        /// <remarks/>
        public string LastQuotePrice {
            get {
                return this.lastQuotePriceField;
            }
            set {
                this.lastQuotePriceField = value;
            }
        }
        
        /// <remarks/>
        public string QuoteType {
            get {
                return this.quoteTypeField;
            }
            set {
                this.quoteTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyRef {
            get {
                return this.policyRefField;
            }
            set {
                this.policyRefField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentPolicyRecord {
            get {
                return this.currentPolicyRecordField;
            }
            set {
                this.currentPolicyRecordField = value;
            }
        }
        
        /// <remarks/>
        public Field[] Fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
            }
        }
        
        /// <remarks/>
        public DataItemLink[] Links {
            get {
                return this.linksField;
            }
            set {
                this.linksField = value;
            }
        }
        
        /// <remarks/>
        public Document[] Documents {
            get {
                return this.documentsField;
            }
            set {
                this.documentsField = value;
            }
        }
        
        /// <remarks/>
        public string[] SystemWarnings {
            get {
                return this.systemWarningsField;
            }
            set {
                this.systemWarningsField = value;
            }
        }
        
        /// <remarks/>
        public int ActualRecord {
            get {
                return this.actualRecordField;
            }
            set {
                this.actualRecordField = value;
            }
        }
        
        /// <remarks/>
        public SchemeCurrency SelectedCurrency {
            get {
                return this.selectedCurrencyField;
            }
            set {
                this.selectedCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PolicyStartDate {
            get {
                return this.policyStartDateField;
            }
            set {
                this.policyStartDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PolicyEndDate {
            get {
                return this.policyEndDateField;
            }
            set {
                this.policyEndDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public enum QuoteStageType {
        
        /// <remarks/>
        QuoteOnly,
        
        /// <remarks/>
        QuoteDownloaded,
        
        /// <remarks/>
        PolicyDownloaded,
        
        /// <remarks/>
        QuoteCompleteAccepted,
        
        /// <remarks/>
        QuoteCompleteRefer,
        
        /// <remarks/>
        QuoteCompleteDecline,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class Field {
        
        private string keyField;
        
        private string valueField;
        
        private string unformattedValueField;
        
        private string formatField;
        
        private FieldListItem[] fieldListItemsField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string UnformattedValue {
            get {
                return this.unformattedValueField;
            }
            set {
                this.unformattedValueField = value;
            }
        }
        
        /// <remarks/>
        public string Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        public FieldListItem[] FieldListItems {
            get {
                return this.fieldListItemsField;
            }
            set {
                this.fieldListItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class FieldListItem {
        
        private Field[] fieldsField;
        
        /// <remarks/>
        public Field[] Fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class DataItemLink {
        
        private string keyField;
        
        private string labelField;
        
        private string uRLField;
        
        private bool isJavascriptField;
        
        private string showWhenField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        public bool IsJavascript {
            get {
                return this.isJavascriptField;
            }
            set {
                this.isJavascriptField = value;
            }
        }
        
        /// <remarks/>
        public string ShowWhen {
            get {
                return this.showWhenField;
            }
            set {
                this.showWhenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class SchemeCurrency {
        
        private string codeField;
        
        private string symbolField;
        
        private string cultureField;
        
        private decimal conversionField;
        
        private int accountSetNumberField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public decimal Conversion {
            get {
                return this.conversionField;
            }
            set {
                this.conversionField = value;
            }
        }
        
        /// <remarks/>
        public int AccountSetNumber {
            get {
                return this.accountSetNumberField;
            }
            set {
                this.accountSetNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class SchemeInsurerFeature {
        
        private string gUIDField;
        
        private string nameField;
        
        private SchemeInsurerFeatureType typeField;
        
        private string valueField;
        
        private bool excludeFromResultsPageField;
        
        /// <remarks/>
        public string GUID {
            get {
                return this.gUIDField;
            }
            set {
                this.gUIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public SchemeInsurerFeatureType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public bool ExcludeFromResultsPage {
            get {
                return this.excludeFromResultsPageField;
            }
            set {
                this.excludeFromResultsPageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public enum SchemeInsurerFeatureType {
        
        /// <remarks/>
        TickBox,
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Figure,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:PriceComparisonStandardsGroup/20160505/AddOns")]
    public partial class AddonPrice {
        
        private string frequencyField;
        
        private decimal valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public decimal Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bundled))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Incremental))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Free))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:PriceComparisonStandardsGroup/20160505/AddOns")]
    public partial class Addon {
        
        private string categoryField;
        
        private string subTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SubType {
            get {
                return this.subTypeField;
            }
            set {
                this.subTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:PriceComparisonStandardsGroup/20160505/AddOns")]
    public partial class Bundled : Addon {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:PriceComparisonStandardsGroup/20160505/AddOns")]
    public partial class Incremental : Addon {
        
        private AddonPrice priceField;
        
        private string financeableField;
        
        /// <remarks/>
        public AddonPrice Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Financeable {
            get {
                return this.financeableField;
            }
            set {
                this.financeableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:PriceComparisonStandardsGroup/20160505/AddOns")]
    public partial class Free : Addon {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class QuoteLinks {
        
        private string editField;
        
        private string viewResultsField;
        
        /// <remarks/>
        public string Edit {
            get {
                return this.editField;
            }
            set {
                this.editField = value;
            }
        }
        
        /// <remarks/>
        public string ViewResults {
            get {
                return this.viewResultsField;
            }
            set {
                this.viewResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class MonthlyPaymentResponse {
        
        private decimal actualLoanPremiumField;
        
        private double monthlyPaymentField;
        
        private double depositAmountField;
        
        private bool externalDepositField;
        
        private int instalmentsField;
        
        private double totalPayableField;
        
        private double aPRField;
        
        private double chargeForCreditField;
        
        private string referenceField;
        
        private string grossRateField;
        
        private string selectedSchemeCodeField;
        
        private double facilityFeeAmountField;
        
        private string calculationBasisField;
        
        /// <remarks/>
        public decimal ActualLoanPremium {
            get {
                return this.actualLoanPremiumField;
            }
            set {
                this.actualLoanPremiumField = value;
            }
        }
        
        /// <remarks/>
        public double MonthlyPayment {
            get {
                return this.monthlyPaymentField;
            }
            set {
                this.monthlyPaymentField = value;
            }
        }
        
        /// <remarks/>
        public double DepositAmount {
            get {
                return this.depositAmountField;
            }
            set {
                this.depositAmountField = value;
            }
        }
        
        /// <remarks/>
        public bool ExternalDeposit {
            get {
                return this.externalDepositField;
            }
            set {
                this.externalDepositField = value;
            }
        }
        
        /// <remarks/>
        public int Instalments {
            get {
                return this.instalmentsField;
            }
            set {
                this.instalmentsField = value;
            }
        }
        
        /// <remarks/>
        public double TotalPayable {
            get {
                return this.totalPayableField;
            }
            set {
                this.totalPayableField = value;
            }
        }
        
        /// <remarks/>
        public double APR {
            get {
                return this.aPRField;
            }
            set {
                this.aPRField = value;
            }
        }
        
        /// <remarks/>
        public double ChargeForCredit {
            get {
                return this.chargeForCreditField;
            }
            set {
                this.chargeForCreditField = value;
            }
        }
        
        /// <remarks/>
        public string Reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
        
        /// <remarks/>
        public string GrossRate {
            get {
                return this.grossRateField;
            }
            set {
                this.grossRateField = value;
            }
        }
        
        /// <remarks/>
        public string SelectedSchemeCode {
            get {
                return this.selectedSchemeCodeField;
            }
            set {
                this.selectedSchemeCodeField = value;
            }
        }
        
        /// <remarks/>
        public double FacilityFeeAmount {
            get {
                return this.facilityFeeAmountField;
            }
            set {
                this.facilityFeeAmountField = value;
            }
        }
        
        /// <remarks/>
        public string CalculationBasis {
            get {
                return this.calculationBasisField;
            }
            set {
                this.calculationBasisField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class Excess {
        
        private bool prePrintedField;
        
        private string labelField;
        
        private decimal compulsaryAmountField;
        
        private decimal voluntaryAmountField;
        
        private decimal totalAmountField;
        
        /// <remarks/>
        public bool PrePrinted {
            get {
                return this.prePrintedField;
            }
            set {
                this.prePrintedField = value;
            }
        }
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public decimal CompulsaryAmount {
            get {
                return this.compulsaryAmountField;
            }
            set {
                this.compulsaryAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal VoluntaryAmount {
            get {
                return this.voluntaryAmountField;
            }
            set {
                this.voluntaryAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal TotalAmount {
            get {
                return this.totalAmountField;
            }
            set {
                this.totalAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class Quote {
        
        private string referenceField;
        
        private string userAuthTokenField;
        
        private QuoteOutput quoteOutputField;
        
        private string outputReasonField;
        
        private decimal premiumField;
        
        private Excess[] excessesField;
        
        private MonthlyPaymentResponse monthlyPaymentOptionField;
        
        private string insurerField;
        
        private string defaqtoProductIdField;
        
        private string underwriterField;
        
        private QuoteLinks linksField;
        
        private string[] systemWarningsField;
        
        private Addon[] addonsField;
        
        private SchemeInsurerFeature[] featuresField;
        
        private Document[] documentsField;
        
        private System.Xml.Serialization.XmlSerializerNamespaces xmlnsField;
        
        /// <remarks/>
        public string Reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
        
        /// <remarks/>
        public string UserAuthToken {
            get {
                return this.userAuthTokenField;
            }
            set {
                this.userAuthTokenField = value;
            }
        }
        
        /// <remarks/>
        public QuoteOutput QuoteOutput {
            get {
                return this.quoteOutputField;
            }
            set {
                this.quoteOutputField = value;
            }
        }
        
        /// <remarks/>
        public string OutputReason {
            get {
                return this.outputReasonField;
            }
            set {
                this.outputReasonField = value;
            }
        }
        
        /// <remarks/>
        public decimal Premium {
            get {
                return this.premiumField;
            }
            set {
                this.premiumField = value;
            }
        }
        
        /// <remarks/>
        public Excess[] Excesses {
            get {
                return this.excessesField;
            }
            set {
                this.excessesField = value;
            }
        }
        
        /// <remarks/>
        public MonthlyPaymentResponse MonthlyPaymentOption {
            get {
                return this.monthlyPaymentOptionField;
            }
            set {
                this.monthlyPaymentOptionField = value;
            }
        }
        
        /// <remarks/>
        public string Insurer {
            get {
                return this.insurerField;
            }
            set {
                this.insurerField = value;
            }
        }
        
        /// <remarks/>
        public string DefaqtoProductId {
            get {
                return this.defaqtoProductIdField;
            }
            set {
                this.defaqtoProductIdField = value;
            }
        }
        
        /// <remarks/>
        public string Underwriter {
            get {
                return this.underwriterField;
            }
            set {
                this.underwriterField = value;
            }
        }
        
        /// <remarks/>
        public QuoteLinks Links {
            get {
                return this.linksField;
            }
            set {
                this.linksField = value;
            }
        }
        
        /// <remarks/>
        public string[] SystemWarnings {
            get {
                return this.systemWarningsField;
            }
            set {
                this.systemWarningsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:PriceComparisonStandardsGroup/20160505/AddOns")]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Addon[] Addons {
            get {
                return this.addonsField;
            }
            set {
                this.addonsField = value;
            }
        }
        
        /// <remarks/>
        public SchemeInsurerFeature[] Features {
            get {
                return this.featuresField;
            }
            set {
                this.featuresField = value;
            }
        }
        
        /// <remarks/>
        public Document[] Documents {
            get {
                return this.documentsField;
            }
            set {
                this.documentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns {
            get {
                return this.xmlnsField;
            }
            set {
                this.xmlnsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public enum QuoteOutput {
        
        /// <remarks/>
        Accepted,
        
        /// <remarks/>
        Declined,
        
        /// <remarks/>
        Referred,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfQuote {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private Quote responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public Quote Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class Token {
        
        private string keyField;
        
        private System.DateTime expiresField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfToken {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private Token responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public Token Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class PolicyDataLine {
        
        private string eventTypeField;
        
        private string statusField;
        
        private int p_IDField;
        
        private int p_OriginalPolicyNumberField;
        
        private int clientIDField;
        
        private string clientNameField;
        
        private string occupationField;
        
        private string clientPhone1Field;
        
        private string clientPhoneWork1Field;
        
        private string clientPhoneMobile1Field;
        
        private string clientEmailField;
        
        private string clientEmail2Field;
        
        private string reminderField;
        
        private string p_ReferenceField;
        
        private System.DateTime startDateField;
        
        private System.DateTime renewalDateField;
        
        private System.DateTime createdDateField;
        
        private System.DateTime takeupDateField;
        
        private string p_AdviserInitialsField;
        
        private string p_LeadInitialsField;
        
        private string p_InsurerNameField;
        
        private string productNameField;
        
        private string productSetField;
        
        private string productSubSetField;
        
        private string productField;
        
        private string planNameField;
        
        private string p_StageField;
        
        private decimal p_GrossField;
        
        private decimal p_CommField;
        
        private decimal p_FeeField;
        
        private decimal p_IPTField;
        
        private decimal p_InsurerFeeField;
        
        private decimal p_NetField;
        
        private decimal p_TotalField;
        
        private decimal p_BrokerAdjustField;
        
        private decimal p_PayawayField;
        
        private string p_PaidByField;
        
        private string p_PayMethodField;
        
        private string p_SourceOfBizField;
        
        private decimal p_PremAndIPTField;
        
        private EnrichmentEvent[] enrichmentsField;
        
        private Tag[] tagsField;
        
        private string addressLinesField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string addressLine3Field;
        
        private string addressLine4Field;
        
        private string addressLine5Field;
        
        private string addressLine6Field;
        
        private string addressPostcodeField;
        
        /// <remarks/>
        public string EventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int p_ID {
            get {
                return this.p_IDField;
            }
            set {
                this.p_IDField = value;
            }
        }
        
        /// <remarks/>
        public int p_OriginalPolicyNumber {
            get {
                return this.p_OriginalPolicyNumberField;
            }
            set {
                this.p_OriginalPolicyNumberField = value;
            }
        }
        
        /// <remarks/>
        public int ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
            }
        }
        
        /// <remarks/>
        public string ClientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
            }
        }
        
        /// <remarks/>
        public string Occupation {
            get {
                return this.occupationField;
            }
            set {
                this.occupationField = value;
            }
        }
        
        /// <remarks/>
        public string ClientPhone1 {
            get {
                return this.clientPhone1Field;
            }
            set {
                this.clientPhone1Field = value;
            }
        }
        
        /// <remarks/>
        public string ClientPhoneWork1 {
            get {
                return this.clientPhoneWork1Field;
            }
            set {
                this.clientPhoneWork1Field = value;
            }
        }
        
        /// <remarks/>
        public string ClientPhoneMobile1 {
            get {
                return this.clientPhoneMobile1Field;
            }
            set {
                this.clientPhoneMobile1Field = value;
            }
        }
        
        /// <remarks/>
        public string ClientEmail {
            get {
                return this.clientEmailField;
            }
            set {
                this.clientEmailField = value;
            }
        }
        
        /// <remarks/>
        public string ClientEmail2 {
            get {
                return this.clientEmail2Field;
            }
            set {
                this.clientEmail2Field = value;
            }
        }
        
        /// <remarks/>
        public string Reminder {
            get {
                return this.reminderField;
            }
            set {
                this.reminderField = value;
            }
        }
        
        /// <remarks/>
        public string p_Reference {
            get {
                return this.p_ReferenceField;
            }
            set {
                this.p_ReferenceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RenewalDate {
            get {
                return this.renewalDateField;
            }
            set {
                this.renewalDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TakeupDate {
            get {
                return this.takeupDateField;
            }
            set {
                this.takeupDateField = value;
            }
        }
        
        /// <remarks/>
        public string p_AdviserInitials {
            get {
                return this.p_AdviserInitialsField;
            }
            set {
                this.p_AdviserInitialsField = value;
            }
        }
        
        /// <remarks/>
        public string p_LeadInitials {
            get {
                return this.p_LeadInitialsField;
            }
            set {
                this.p_LeadInitialsField = value;
            }
        }
        
        /// <remarks/>
        public string p_InsurerName {
            get {
                return this.p_InsurerNameField;
            }
            set {
                this.p_InsurerNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProductSet {
            get {
                return this.productSetField;
            }
            set {
                this.productSetField = value;
            }
        }
        
        /// <remarks/>
        public string ProductSubSet {
            get {
                return this.productSubSetField;
            }
            set {
                this.productSubSetField = value;
            }
        }
        
        /// <remarks/>
        public string Product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
        
        /// <remarks/>
        public string PlanName {
            get {
                return this.planNameField;
            }
            set {
                this.planNameField = value;
            }
        }
        
        /// <remarks/>
        public string p_Stage {
            get {
                return this.p_StageField;
            }
            set {
                this.p_StageField = value;
            }
        }
        
        /// <remarks/>
        public decimal p_Gross {
            get {
                return this.p_GrossField;
            }
            set {
                this.p_GrossField = value;
            }
        }
        
        /// <remarks/>
        public decimal p_Comm {
            get {
                return this.p_CommField;
            }
            set {
                this.p_CommField = value;
            }
        }
        
        /// <remarks/>
        public decimal p_Fee {
            get {
                return this.p_FeeField;
            }
            set {
                this.p_FeeField = value;
            }
        }
        
        /// <remarks/>
        public decimal p_IPT {
            get {
                return this.p_IPTField;
            }
            set {
                this.p_IPTField = value;
            }
        }
        
        /// <remarks/>
        public decimal p_InsurerFee {
            get {
                return this.p_InsurerFeeField;
            }
            set {
                this.p_InsurerFeeField = value;
            }
        }
        
        /// <remarks/>
        public decimal p_Net {
            get {
                return this.p_NetField;
            }
            set {
                this.p_NetField = value;
            }
        }
        
        /// <remarks/>
        public decimal p_Total {
            get {
                return this.p_TotalField;
            }
            set {
                this.p_TotalField = value;
            }
        }
        
        /// <remarks/>
        public decimal p_BrokerAdjust {
            get {
                return this.p_BrokerAdjustField;
            }
            set {
                this.p_BrokerAdjustField = value;
            }
        }
        
        /// <remarks/>
        public decimal p_Payaway {
            get {
                return this.p_PayawayField;
            }
            set {
                this.p_PayawayField = value;
            }
        }
        
        /// <remarks/>
        public string p_PaidBy {
            get {
                return this.p_PaidByField;
            }
            set {
                this.p_PaidByField = value;
            }
        }
        
        /// <remarks/>
        public string p_PayMethod {
            get {
                return this.p_PayMethodField;
            }
            set {
                this.p_PayMethodField = value;
            }
        }
        
        /// <remarks/>
        public string p_SourceOfBiz {
            get {
                return this.p_SourceOfBizField;
            }
            set {
                this.p_SourceOfBizField = value;
            }
        }
        
        /// <remarks/>
        public decimal p_PremAndIPT {
            get {
                return this.p_PremAndIPTField;
            }
            set {
                this.p_PremAndIPTField = value;
            }
        }
        
        /// <remarks/>
        public EnrichmentEvent[] Enrichments {
            get {
                return this.enrichmentsField;
            }
            set {
                this.enrichmentsField = value;
            }
        }
        
        /// <remarks/>
        public Tag[] Tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLines {
            get {
                return this.addressLinesField;
            }
            set {
                this.addressLinesField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine3 {
            get {
                return this.addressLine3Field;
            }
            set {
                this.addressLine3Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine4 {
            get {
                return this.addressLine4Field;
            }
            set {
                this.addressLine4Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine5 {
            get {
                return this.addressLine5Field;
            }
            set {
                this.addressLine5Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine6 {
            get {
                return this.addressLine6Field;
            }
            set {
                this.addressLine6Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressPostcode {
            get {
                return this.addressPostcodeField;
            }
            set {
                this.addressPostcodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class EnrichmentEvent {
        
        private EnrichmentEventType typeField;
        
        private System.DateTime timestampField;
        
        private string userField;
        
        private string noteField;
        
        /// <remarks/>
        public EnrichmentEventType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class Tag {
        
        private string tag1Field;
        
        private System.DateTime timestampField;
        
        private string userField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Tag")]
        public string Tag1 {
            get {
                return this.tag1Field;
            }
            set {
                this.tag1Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfListOfPolicyDataLine {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private PolicyDataLine[] responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public PolicyDataLine[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfBoolean {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private bool responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public bool Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class APIResponseOfListOfDataItem {
        
        private bool successField;
        
        private string errorField;
        
        private string stackTraceField;
        
        private APIResponseProfiling infoField;
        
        private DataItem[] responseField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public APIResponseProfiling Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public DataItem[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class DataEventPremium {
        
        private System.DateTime timestampField;
        
        private decimal premiumField;
        
        private string userField;
        
        private string insurerField;
        
        private string matrixNameField;
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public decimal Premium {
            get {
                return this.premiumField;
            }
            set {
                this.premiumField = value;
            }
        }
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string Insurer {
            get {
                return this.insurerField;
            }
            set {
                this.insurerField = value;
            }
        }
        
        /// <remarks/>
        public string MatrixName {
            get {
                return this.matrixNameField;
            }
            set {
                this.matrixNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class DataEventField {
        
        private string iconField;
        
        private bool isAdditionalField;
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdditional {
            get {
                return this.isAdditionalField;
            }
            set {
                this.isAdditionalField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class InsurerEvent {
        
        private string insurerNameField;
        
        private string resultField;
        
        private decimal priceField;
        
        private string reasonField;
        
        private decimal totalPremiumField;
        
        private decimal grossPremiumField;
        
        private decimal iPTField;
        
        private decimal commissionField;
        
        private decimal totalPremiumExclAddonsField;
        
        private decimal grossPremiumExclAddonsField;
        
        private decimal iPTExclAddonsField;
        
        private decimal commissionExclAddonsField;
        
        /// <remarks/>
        public string InsurerName {
            get {
                return this.insurerNameField;
            }
            set {
                this.insurerNameField = value;
            }
        }
        
        /// <remarks/>
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public decimal TotalPremium {
            get {
                return this.totalPremiumField;
            }
            set {
                this.totalPremiumField = value;
            }
        }
        
        /// <remarks/>
        public decimal GrossPremium {
            get {
                return this.grossPremiumField;
            }
            set {
                this.grossPremiumField = value;
            }
        }
        
        /// <remarks/>
        public decimal IPT {
            get {
                return this.iPTField;
            }
            set {
                this.iPTField = value;
            }
        }
        
        /// <remarks/>
        public decimal Commission {
            get {
                return this.commissionField;
            }
            set {
                this.commissionField = value;
            }
        }
        
        /// <remarks/>
        public decimal TotalPremiumExclAddons {
            get {
                return this.totalPremiumExclAddonsField;
            }
            set {
                this.totalPremiumExclAddonsField = value;
            }
        }
        
        /// <remarks/>
        public decimal GrossPremiumExclAddons {
            get {
                return this.grossPremiumExclAddonsField;
            }
            set {
                this.grossPremiumExclAddonsField = value;
            }
        }
        
        /// <remarks/>
        public decimal IPTExclAddons {
            get {
                return this.iPTExclAddonsField;
            }
            set {
                this.iPTExclAddonsField = value;
            }
        }
        
        /// <remarks/>
        public decimal CommissionExclAddons {
            get {
                return this.commissionExclAddonsField;
            }
            set {
                this.commissionExclAddonsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class AddonEvent {
        
        private string addonIdField;
        
        /// <remarks/>
        public string AddonId {
            get {
                return this.addonIdField;
            }
            set {
                this.addonIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class Endorsement {
        
        private string codeField;
        
        private string titleField;
        
        private decimal excessAmountField;
        
        private string textField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public decimal ExcessAmount {
            get {
                return this.excessAmountField;
            }
            set {
                this.excessAmountField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public partial class DataEvent {
        
        private int identifierField;
        
        private int transactionIdentifierField;
        
        private PrimaryEventType typeField;
        
        private EventStageType currentStageField;
        
        private string reasonField;
        
        private int eDICounterField;
        
        private EnrichmentEventType[] enrichmentsField;
        
        private EnrichmentEvent[] enrichmentsLogField;
        
        private Tag[] tagsField;
        
        private Endorsement[] endorsementsField;
        
        private AddonEvent[] addonsField;
        
        private InsurerEvent[] insurerDataField;
        
        private System.DateTime creationDateField;
        
        private System.DateTime latestEventDateField;
        
        private System.DateTime policyStartDateField;
        
        private System.DateTime policyEndDateField;
        
        private System.DateTime policyEndDateNoSecondsField;
        
        private string lastQuoteInsurerField;
        
        private string previousQuoteInsurerField;
        
        private string sourceField;
        
        private string sourceIPField;
        
        private string sourceAPIKeyField;
        
        private int quoteRecordField;
        
        private string quoteReferenceField;
        
        private string policyReferenceField;
        
        private bool policyIsCancelledField;
        
        private bool policyCancellationUnderwayField;
        
        private System.DateTime policyCancelledOnField;
        
        private System.DateTime policyCancelledFromField;
        
        private string policyCancellationReasonField;
        
        private int currentPolicyRecordField;
        
        private int currentPolicyRecordExcMTAField;
        
        private int originalPolicyRecordField;
        
        private string userRecordField;
        
        private string adviserInitialsField;
        
        private string leadInitialsField;
        
        private string formattedLastPremiumField;
        
        private string quoteStageReasonField;
        
        private DataEventField[] fieldsField;
        
        private DataItemLink[] availableActionsField;
        
        private DataEventPremium[] premiumHistoryField;
        
        private decimal invoiceField;
        
        private decimal brokerageFeeField;
        
        private decimal iPTField;
        
        private decimal iPTPercentageField;
        
        private decimal iPTPercentageDecField;
        
        private decimal grossField;
        
        private decimal commField;
        
        private decimal commPercentageField;
        
        private decimal netField;
        
        /// <remarks/>
        public int Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        public int TransactionIdentifier {
            get {
                return this.transactionIdentifierField;
            }
            set {
                this.transactionIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public PrimaryEventType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public EventStageType CurrentStage {
            get {
                return this.currentStageField;
            }
            set {
                this.currentStageField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public int EDICounter {
            get {
                return this.eDICounterField;
            }
            set {
                this.eDICounterField = value;
            }
        }
        
        /// <remarks/>
        public EnrichmentEventType[] Enrichments {
            get {
                return this.enrichmentsField;
            }
            set {
                this.enrichmentsField = value;
            }
        }
        
        /// <remarks/>
        public EnrichmentEvent[] EnrichmentsLog {
            get {
                return this.enrichmentsLogField;
            }
            set {
                this.enrichmentsLogField = value;
            }
        }
        
        /// <remarks/>
        public Tag[] Tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        public Endorsement[] Endorsements {
            get {
                return this.endorsementsField;
            }
            set {
                this.endorsementsField = value;
            }
        }
        
        /// <remarks/>
        public AddonEvent[] Addons {
            get {
                return this.addonsField;
            }
            set {
                this.addonsField = value;
            }
        }
        
        /// <remarks/>
        public InsurerEvent[] InsurerData {
            get {
                return this.insurerDataField;
            }
            set {
                this.insurerDataField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LatestEventDate {
            get {
                return this.latestEventDateField;
            }
            set {
                this.latestEventDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PolicyStartDate {
            get {
                return this.policyStartDateField;
            }
            set {
                this.policyStartDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PolicyEndDate {
            get {
                return this.policyEndDateField;
            }
            set {
                this.policyEndDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PolicyEndDateNoSeconds {
            get {
                return this.policyEndDateNoSecondsField;
            }
            set {
                this.policyEndDateNoSecondsField = value;
            }
        }
        
        /// <remarks/>
        public string LastQuoteInsurer {
            get {
                return this.lastQuoteInsurerField;
            }
            set {
                this.lastQuoteInsurerField = value;
            }
        }
        
        /// <remarks/>
        public string PreviousQuoteInsurer {
            get {
                return this.previousQuoteInsurerField;
            }
            set {
                this.previousQuoteInsurerField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string SourceIP {
            get {
                return this.sourceIPField;
            }
            set {
                this.sourceIPField = value;
            }
        }
        
        /// <remarks/>
        public string SourceAPIKey {
            get {
                return this.sourceAPIKeyField;
            }
            set {
                this.sourceAPIKeyField = value;
            }
        }
        
        /// <remarks/>
        public int QuoteRecord {
            get {
                return this.quoteRecordField;
            }
            set {
                this.quoteRecordField = value;
            }
        }
        
        /// <remarks/>
        public string QuoteReference {
            get {
                return this.quoteReferenceField;
            }
            set {
                this.quoteReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyReference {
            get {
                return this.policyReferenceField;
            }
            set {
                this.policyReferenceField = value;
            }
        }
        
        /// <remarks/>
        public bool PolicyIsCancelled {
            get {
                return this.policyIsCancelledField;
            }
            set {
                this.policyIsCancelledField = value;
            }
        }
        
        /// <remarks/>
        public bool PolicyCancellationUnderway {
            get {
                return this.policyCancellationUnderwayField;
            }
            set {
                this.policyCancellationUnderwayField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PolicyCancelledOn {
            get {
                return this.policyCancelledOnField;
            }
            set {
                this.policyCancelledOnField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PolicyCancelledFrom {
            get {
                return this.policyCancelledFromField;
            }
            set {
                this.policyCancelledFromField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyCancellationReason {
            get {
                return this.policyCancellationReasonField;
            }
            set {
                this.policyCancellationReasonField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentPolicyRecord {
            get {
                return this.currentPolicyRecordField;
            }
            set {
                this.currentPolicyRecordField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentPolicyRecordExcMTA {
            get {
                return this.currentPolicyRecordExcMTAField;
            }
            set {
                this.currentPolicyRecordExcMTAField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalPolicyRecord {
            get {
                return this.originalPolicyRecordField;
            }
            set {
                this.originalPolicyRecordField = value;
            }
        }
        
        /// <remarks/>
        public string UserRecord {
            get {
                return this.userRecordField;
            }
            set {
                this.userRecordField = value;
            }
        }
        
        /// <remarks/>
        public string AdviserInitials {
            get {
                return this.adviserInitialsField;
            }
            set {
                this.adviserInitialsField = value;
            }
        }
        
        /// <remarks/>
        public string LeadInitials {
            get {
                return this.leadInitialsField;
            }
            set {
                this.leadInitialsField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedLastPremium {
            get {
                return this.formattedLastPremiumField;
            }
            set {
                this.formattedLastPremiumField = value;
            }
        }
        
        /// <remarks/>
        public string QuoteStageReason {
            get {
                return this.quoteStageReasonField;
            }
            set {
                this.quoteStageReasonField = value;
            }
        }
        
        /// <remarks/>
        public DataEventField[] Fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
            }
        }
        
        /// <remarks/>
        public DataItemLink[] AvailableActions {
            get {
                return this.availableActionsField;
            }
            set {
                this.availableActionsField = value;
            }
        }
        
        /// <remarks/>
        public DataEventPremium[] PremiumHistory {
            get {
                return this.premiumHistoryField;
            }
            set {
                this.premiumHistoryField = value;
            }
        }
        
        /// <remarks/>
        public decimal Invoice {
            get {
                return this.invoiceField;
            }
            set {
                this.invoiceField = value;
            }
        }
        
        /// <remarks/>
        public decimal BrokerageFee {
            get {
                return this.brokerageFeeField;
            }
            set {
                this.brokerageFeeField = value;
            }
        }
        
        /// <remarks/>
        public decimal IPT {
            get {
                return this.iPTField;
            }
            set {
                this.iPTField = value;
            }
        }
        
        /// <remarks/>
        public decimal IPTPercentage {
            get {
                return this.iPTPercentageField;
            }
            set {
                this.iPTPercentageField = value;
            }
        }
        
        /// <remarks/>
        public decimal IPTPercentageDec {
            get {
                return this.iPTPercentageDecField;
            }
            set {
                this.iPTPercentageDecField = value;
            }
        }
        
        /// <remarks/>
        public decimal Gross {
            get {
                return this.grossField;
            }
            set {
                this.grossField = value;
            }
        }
        
        /// <remarks/>
        public decimal Comm {
            get {
                return this.commField;
            }
            set {
                this.commField = value;
            }
        }
        
        /// <remarks/>
        public decimal CommPercentage {
            get {
                return this.commPercentageField;
            }
            set {
                this.commPercentageField = value;
            }
        }
        
        /// <remarks/>
        public decimal Net {
            get {
                return this.netField;
            }
            set {
                this.netField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public enum PrimaryEventType {
        
        /// <remarks/>
        NewBusiness,
        
        /// <remarks/>
        MTA,
        
        /// <remarks/>
        Renewal,
        
        /// <remarks/>
        Cancellation,
        
        /// <remarks/>
        Reinstate,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public enum EventStageType {
        
        /// <remarks/>
        Enquiry,
        
        /// <remarks/>
        Accept,
        
        /// <remarks/>
        Refer,
        
        /// <remarks/>
        Decline,
        
        /// <remarks/>
        TakeUp,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://cfsnetwork.co.uk")]
    public enum InboxType {
        
        /// <remarks/>
        Inbox,
        
        /// <remarks/>
        Sent,
        
        /// <remarks/>
        DepartmentInbox,
        
        /// <remarks/>
        DepartmentSent,
        
        /// <remarks/>
        DefaultInbox,
        
        /// <remarks/>
        DefaultSent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEventFeedCompletedEventHandler(object sender, GetEventFeedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventFeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventFeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfDataEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfDataEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEventCompletedEventHandler(object sender, GetEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfDataEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfDataEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEventExportCompletedEventHandler(object sender, GetEventExportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfDataEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfDataEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ListRecordsCompletedEventHandler(object sender, ListRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfDataItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfDataItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ListArchivedRecordsCompletedEventHandler(object sender, ListArchivedRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListArchivedRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListArchivedRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfDataItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfDataItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ArchiveDataItemCompletedEventHandler(object sender, ArchiveDataItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArchiveDataItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArchiveDataItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RestoreDataItemCompletedEventHandler(object sender, RestoreDataItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreDataItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreDataItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPolicyDataCompletedEventHandler(object sender, GetPolicyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPolicyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPolicyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfPolicyDataLine Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfPolicyDataLine)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GenerateTokenCompletedEventHandler(object sender, GenerateTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfToken Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfToken)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TestTokenValidityCompletedEventHandler(object sender, TestTokenValidityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestTokenValidityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestTokenValidityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProduceRenewalCompletedEventHandler(object sender, ProduceRenewalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProduceRenewalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProduceRenewalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfQuote Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfQuote)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProduceRenewalWithDocumentsCompletedEventHandler(object sender, ProduceRenewalWithDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProduceRenewalWithDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProduceRenewalWithDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfQuote Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfQuote)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProduceQuoteCompletedEventHandler(object sender, ProduceQuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProduceQuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProduceQuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfQuote Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfQuote)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProduceQuoteWithDocumentsCompletedEventHandler(object sender, ProduceQuoteWithDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProduceQuoteWithDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProduceQuoteWithDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfQuote Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfQuote)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateQuoteCompletedEventHandler(object sender, CreateQuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateQuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateQuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfQuote Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfQuote)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ConvertQuoteCompletedEventHandler(object sender, ConvertQuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertQuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertQuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfDataItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfDataItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ConvertRenewalCompletedEventHandler(object sender, ConvertRenewalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertRenewalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertRenewalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfDataItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfDataItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PopulateTopXInfoCompletedEventHandler(object sender, PopulateTopXInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulateTopXInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulateTopXInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfString Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfString)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUnreadMessageCountCompletedEventHandler(object sender, GetUnreadMessageCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnreadMessageCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnreadMessageCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfInt32 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfInt32)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMessagesCompletedEventHandler(object sender, GetMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMessageContentCompletedEventHandler(object sender, GetMessageContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfString Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfString)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MarkMessageUnreadCompletedEventHandler(object sender, MarkMessageUnreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarkMessageUnreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MarkMessageUnreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfString Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfString)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteMessageCompletedEventHandler(object sender, DeleteMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfString Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfString)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendSecureMessageCompletedEventHandler(object sender, SendSecureMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSecureMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSecureMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfString Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfString)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendSecureMessageWithAttachmentCompletedEventHandler(object sender, SendSecureMessageWithAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSecureMessageWithAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSecureMessageWithAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfString Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfString)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ListDocumentsCompletedEventHandler(object sender, ListDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfDocument Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfDocument)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ListDocumentsBySystemTokenCompletedEventHandler(object sender, ListDocumentsBySystemTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListDocumentsBySystemTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListDocumentsBySystemTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfDocument Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfDocument)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ListPersonalDataCompletedEventHandler(object sender, ListPersonalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListPersonalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListPersonalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfEditableField Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfEditableField)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdatePersonalDataCompletedEventHandler(object sender, UpdatePersonalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePersonalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePersonalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EditPasswordCompletedEventHandler(object sender, EditPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfString Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfString)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EditDataProtectionCompletedEventHandler(object sender, EditDataProtectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDataProtectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDataProtectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfString Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfString)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EditUserSettingCompletedEventHandler(object sender, EditUserSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditUserSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditUserSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TestPostcodeCompletedEventHandler(object sender, TestPostcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestPostcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestPostcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TestPostcodeAcceptanceCompletedEventHandler(object sender, TestPostcodeAcceptanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestPostcodeAcceptanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestPostcodeAcceptanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TestAddressAcceptanceCompletedEventHandler(object sender, TestAddressAcceptanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestAddressAcceptanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestAddressAcceptanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MemberMICompletedEventHandler(object sender, MemberMICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MemberMICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MemberMICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfMember Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfMember)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TESTMemberMICompletedEventHandler(object sender, TESTMemberMICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TESTMemberMICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TESTMemberMICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfMember Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfMember)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChurchillsInterfaceCompletedEventHandler(object sender, ChurchillsInterfaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChurchillsInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChurchillsInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfInt64 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfInt64)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetAdviserCompletedEventHandler(object sender, SetAdviserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAdviserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAdviserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddNoteCompletedEventHandler(object sender, AddNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteNoteCompletedEventHandler(object sender, DeleteNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ToggleEnrichmentCompletedEventHandler(object sender, ToggleEnrichmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ToggleEnrichmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ToggleEnrichmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteEventCompletedEventHandler(object sender, DeleteEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ListNotesCompletedEventHandler(object sender, ListNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfDataEventNote Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfDataEventNote)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void QueryGetCountCompletedEventHandler(object sender, QueryGetCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryGetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryGetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfInt64 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfInt64)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void QueryCompletedEventHandler(object sender, QueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfListOfDataEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfListOfDataEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateOverrideCodeCompletedEventHandler(object sender, CreateOverrideCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOverrideCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOverrideCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfString Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfString)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RevokeOverrideCodeCompletedEventHandler(object sender, RevokeOverrideCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RevokeOverrideCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RevokeOverrideCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PreviewPolicyCancellationCompletedEventHandler(object sender, PreviewPolicyCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PreviewPolicyCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PreviewPolicyCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfCancellation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfCancellation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PreviewAddonCancellationCompletedEventHandler(object sender, PreviewAddonCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PreviewAddonCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PreviewAddonCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfCancellation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfCancellation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PolicyCancellationCompletedEventHandler(object sender, PolicyCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PolicyCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PolicyCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddonCancellationCompletedEventHandler(object sender, AddonCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddonCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddonCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIResponseOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIResponseOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetAPIPasswordCompletedEventHandler(object sender, SetAPIPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAPIPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAPIPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591