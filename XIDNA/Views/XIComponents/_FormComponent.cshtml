@model XICore.XIIComponent
@using XIDNA
@using XISystem
@using XICore
@using xiEnumSystem
@{
    string sRefenceID = SessionManager.sReference;
    XIBODisplay oBOIns = new XIBODisplay();
    XIIBO oBOI = new XIIBO();
    XIDBO oBOD = new XIDBO();
    List<XIVisualisation>
    oBOVisual = new List<XIVisualisation>
        ();
        string sHierarchy = string.Empty;
        XIInfraCache oCache = new XIInfraCache();
        if (Model.oContent.ContainsKey(XIConstant.FormComponent))
        {
        oBOIns = (XIBODisplay)Model.oContent[XIConstant.FormComponent];
        if (oBOIns.BOInstance != null)
        {
        oBOI = oBOIns.BOInstance;
        oBOVisual = oBOIns.Visualisations;
        sHierarchy = oBOI.sHierarchy;
        }
        oBOD = (XIDBO)oCache.GetObjectFromCache(XIConstant.CacheBO_All, null, oBOI.iBODID.ToString());
        if (oBOD != null)
        {
        oBOI.BOD = oBOD;
        }
        }
        XID1Click o1Click = new XID1Click();
        var sSessionID = Context.Session.SessionID;
        var oneclickid = oCache.Get_ParamVal(sSessionID, ViewBag.sGUID, null, "{-iInstanceID}");
        if (!string.IsNullOrEmpty(oneclickid))
        {
        o1Click = (XID1Click)oCache.GetObjectFromCache(XIConstant.Cache1Click, null, oneclickid.ToString());
        }
        var bIsStepLock = false;
        if (ViewBag.bIsStepLock != null)
        {
        bIsStepLock = ViewBag.bIsStepLock;
        }
        // string PhysicalPath = System.Configuration.ConfigurationManager.AppSettings["FilesPath"];
        string PhysicalPath = System.Configuration.ConfigurationManager.AppSettings["SharedPath"];
        //var oBOInstance = Model.BOInstance;
        var oVisualisations = Model.oVisualisation;
        string sDisplayMode = string.Empty;
        string sShowID = string.Empty;
        string sShowFK = string.Empty;
        string sFormClass = "form-h label-5 wrap-8";
        string sScroll = "yes";
        string sShowHeading = "yes";
        string sHeadingLabel = string.Empty;
        string sShowSaveButton = "yes";
        string sAutoSave = "no";
        string sShowCancelButton = "no";
        string sShowDeleteButton = "no";
        string sSaveLableName = "Save";
        string sMergeID = "no";
        string bISLetterGeneration = "no";
        string sPreviewStructure = string.Empty;
        string sDisableSaveButton = "no";
        string sShowCopyButton = "no";
        string sShowButtons = "no";
        string sShowSaveSections = string.Empty;
        string sMode = string.Empty;
        int iCount = 0;
        string sFileAliasName = string.Empty;
        string sFileAliasType = string.Empty;
        string sDataIdentifier = string.Empty;
        string sCacheInstance = string.Empty;
        string sDependencyIdentifier = string.Empty;
        string IsRefreshForm = "no";
        string IsListAdd = "no";
        var sAskFK = string.Empty;
        var sFKBO = string.Empty;
        var sFKCol = string.Empty;
        var sFKVal = string.Empty;
        var sFKName = string.Empty;
        var sFKLabel = string.Empty;
        var sOnlyView = string.Empty;
        var lButtonNames = new List<XIDropDown>
            ();
            string IsAlert = "no";
            string sRead = "yes";
            string sWrite = "yes";
            string sUpdateAction = string.Empty;
            List<XIVisualisationNV>
                oVNVs = new List<XIVisualisationNV>
                    ();
                    if (oBOVisual != null && oBOVisual.Count() > 0 && oBOVisual.FirstOrDefault().NVs != null && oBOVisual.FirstOrDefault().NVs.Count() > 0)
                    {
                    if (oBOVisual.FirstOrDefault().Name.ToLower() == "askfk")
                    {
                    var NVs = oBOVisual.FirstOrDefault().NVs;
                    sAskFK = NVs.Where(m => m.sName.ToLower() == "sAskFK".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    sFKBO = NVs.Where(m => m.sName.ToLower() == "sFKBO".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    sFKCol = NVs.Where(m => m.sName.ToLower() == "sFKCol".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    sFKVal = NVs.Where(m => m.sName.ToLower() == "sFKVal".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    sFKName = NVs.Where(m => m.sName.ToLower() == "sFKName".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    }
                    else if (oBOVisual.FirstOrDefault().Name.ToLower() == "tracebuttons")
                    {
                    var NVs = oBOVisual.FirstOrDefault().NVs;
                    foreach (var NV in NVs)
                    {
                    var ivalue = Convert.ToInt32(NV.sValue.Split('-')[1]);
                    var iXiLinkID = Convert.ToInt32(NV.sValue.Split('-')[0]);
                    lButtonNames.Add(new XIDropDown { text = NV.sName, Type = NV.sType, Value = ivalue, ID = iXiLinkID });
                    }
                    }
                    else if (oBOVisual.FirstOrDefault().Name.ToLower() == "updateaction")
                    {
                    var NVs = oBOVisual.FirstOrDefault().NVs;
                    var UpdateAction = NVs.Where(m => m.sName.ToLower() == "sUpdateAction".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (UpdateAction != null)
                    {
                    sUpdateAction = UpdateAction;
                    }
                    }
                    }
                    if (lButtonNames.Count > 0)
                    {
                    sShowButtons = "yes";
                    }
                    if (oVisualisations != null)
                    {
                    var oVisual = oVisualisations.FirstOrDefault();
                    if (oVisual != null && oVisual.XiVisualisationNVs != null && oVisual.XiVisualisationNVs.Count() > 0)
                    {
                    oVNVs = oVisual.XiVisualisationNVs;
                    var AllButtons = oVNVs.Where(m => m.sName.ToLower().Contains("button")).ToList();
                    if (AllButtons.Count() > 0)
                    {
                    sShowButtons = "yes";
                    foreach (var Single in AllButtons)
                    {
                    var btnNameValue = new XIDropDown();
                    btnNameValue.text = Single.sName.Split('-')[1];
                    btnNameValue.Type = Single.sValue.Split('-')[0];
                    btnNameValue.Value = Convert.ToInt32(Single.sValue.Split('-')[1]);
                    lButtonNames.Add(btnNameValue);
                    }
                    }
                    sDisplayMode = oVNVs.Where(m => m.sName.ToLower() == "DisplayMode".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    var ShowHead = oVNVs.Where(m => m.sName.ToLower() == "Heading".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (!string.IsNullOrEmpty(ShowHead))
                    {
                    sShowHeading = ShowHead;
                    }
                    var HeadingLabel = oVNVs.Where(m => m.sName.ToLower() == "HeadingLabel".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (!string.IsNullOrEmpty(HeadingLabel))
                    {
                    sHeadingLabel = HeadingLabel;
                    }
                    sShowID = oVNVs.Where(m => m.sName.ToLower() == "DisplayID".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    sShowFK = oVNVs.Where(m => m.sName.ToLower() == "ShowFK".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    var FormClass = oVNVs.Where(m => m.sName.ToLower() == "FormClass".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (!string.IsNullOrEmpty(FormClass))
                    {
                    sFormClass = FormClass;
                    }
                    var Scroll = oVNVs.Where(m => m.sName.ToLower() == "Scroll".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (!string.IsNullOrEmpty(Scroll))
                    {
                    sScroll = Scroll;
                    }
                    var ShowSaveButton = oVNVs.Where(m => m.sName.ToLower() == "ShowSaveBtn".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (ShowSaveButton != null)
                    {
                    sShowSaveButton = ShowSaveButton;
                    }
                    var ShowCancelButton = oVNVs.Where(m => m.sName.ToLower() == "ShowCancelBtn".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (ShowCancelButton != null)
                    {
                    sShowCancelButton = ShowCancelButton.ToLower();
                    }
                    var IsAutoSave = oVNVs.Where(m => m.sName.ToLower() == "IsAutoSave".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (IsAutoSave != null)
                    {
                    sAutoSave = IsAutoSave.ToLower();
                    }
                    var ShowDeleteButton = oVNVs.Where(m => m.sName.ToLower() == "ShowDeleteBtn".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (ShowDeleteButton != null)
                    {
                    sShowDeleteButton = ShowDeleteButton.ToLower();
                    }
                    var SaveLableName = oVNVs.Where(m => m.sName.ToLower() == "SaveLableName".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (SaveLableName != null)
                    {
                    sSaveLableName = SaveLableName;
                    }
                    var IsMerge = oVNVs.Where(m => m.sName.ToLower() == "MergeID".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (IsMerge != null)
                    {
                    sMergeID = IsMerge.ToLower();
                    }
                    var SISLetterGeneration = oVNVs.Where(m => m.sName.ToLower() == "ISLetterGeneration".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (SISLetterGeneration != null)
                    {
                    bISLetterGeneration = SISLetterGeneration;
                    }
                    var sStructureName = oVNVs.Where(m => m.sName.ToLower() == "PreviewStructureName".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (sStructureName != null)
                    {
                    sPreviewStructure = sStructureName;
                    }
                    var DisbleSaveButton = oVNVs.Where(m => m.sName.ToLower() == "DisableSaveBtn".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (!string.IsNullOrEmpty(DisbleSaveButton) && (DisbleSaveButton == "0" || DisbleSaveButton == "-1" || DisbleSaveButton.ToLower() == "yes"))
                    {
                    sDisableSaveButton = "yes";
                    }
                    var ShowCopyButton = oVNVs.Where(m => m.sName.ToLower() == "ShowCopyBtn".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (ShowCopyButton != null)
                    {
                    sShowCopyButton = ShowCopyButton;
                    }
                    var Count = oVNVs.Where(m => m.sName.ToLower() == "iCount".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (int.TryParse(Count, out iCount))
                    {
                    }
                    var ShowSaveSections = oVNVs.Where(m => m.sName.ToLower() == "sShowSaveSections".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (ShowSaveSections != null)
                    {
                    sShowSaveSections = ShowSaveSections;
                    }
                    var DataIdentifier = oVNVs.Where(m => m.sName.ToLower() == "FormIdentifier".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (DataIdentifier != null)
                    {
                    sDataIdentifier = DataIdentifier;
                    }
                    var CacheInstance = oVNVs.Where(m => m.sName.ToLower() == "CacheInstance".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (CacheInstance != null)
                    {
                    sCacheInstance = CacheInstance;
                    }
                    var DependencyIdentifier = oVNVs.Where(m => m.sName.ToLower() == "DependencyIdentifier".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (DependencyIdentifier != null)
                    {
                    sDependencyIdentifier = DependencyIdentifier;
                    }
                    var sIsRefreshForm = oVNVs.Where(m => m.sName.ToLower() == "sIsRefreshForm".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (sIsRefreshForm != null)
                    {
                    IsRefreshForm = sIsRefreshForm;
                    }
                    var ListAdd = oVNVs.Where(m => m.sName.ToLower() == "ListAdd".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (ListAdd != null)
                    {
                    var s1ClickGUID = oVNVs.Where(m => m.sName.ToLower() == "ListAdd".ToLower()).Select(m => m.sType).FirstOrDefault();
                    IsListAdd = "oneclick_" + ListAdd;
                    if (!string.IsNullOrEmpty(s1ClickGUID))
                    {
                    IsListAdd = IsListAdd + "_" + s1ClickGUID;
                    }
                    }
                    var GridAdd = oVNVs.Where(m => m.sName.ToLower() == "GridAdd".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (GridAdd != null)
                    {
                    IsListAdd = "grid_" + GridAdd;
                    }
                    var OnlyView = oVNVs.Where(m => m.sName.ToLower() == "OnlyView".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (OnlyView != null)
                    {
                    sOnlyView = OnlyView;
                    }
                    var sIsAlert = oVNVs.Where(m => m.sName.ToLower() == "sIsAlert".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (sIsAlert != null)
                    {
                    IsAlert = sIsAlert;
                    }
                    var Mode = oVNVs.Where(m => m.sName.ToLower() == "sMode".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (Mode != null)
                    {
                    sMode = Mode;
                    }
                    var Read = oVNVs.Where(m => m.sName.ToLower() == "sRead".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (Read != null)
                    {
                    sRead = Read;
                    }
                    var Write = oVNVs.Where(m => m.sName.ToLower() == "sWrite".ToLower()).Select(m => m.sValue).FirstOrDefault();
                    if (Write != null)
                    {
                    sWrite = Write;
                    }
                    }
                    }
                    if (sWrite == "no")
                    {
                    sDisplayMode = "View";
                    }
                    var sDisableDeleteButton = "no";
                    if (bIsStepLock)
                    {
                    sDisableSaveButton = "yes";
                    sDisableDeleteButton = "yes";
                    }
                    string sGUID = ViewBag.sGUID;
                    //var NewsGUID = string.Empty;
                    var NewsGUID = Guid.NewGuid().ToString();
                    //var oXIDComponent = (XIDComponent)Model.oDefintion;
                    //if (oXIDComponent != null)
                    //{
                    //    NewsGUID = oXIDComponent.sGUID;
                    //}
                    //else
                    //{
                    //    NewsGUID = Guid.NewGuid().ToString();
                    //}
                    //if (string.IsNullOrEmpty(NewsGUID))
                    //{
                    //    NewsGUID = Guid.NewGuid().ToString();
                    //}
                    string ID = string.Empty;
                    var sBOName = string.Empty;
                    var sBOIdentity = string.Empty;
                    var iBODID = 0;
                    bool bUID = false;
                    var XIGUID = "";
                    var sPrimaryKey = string.Empty;
                    var iID = string.Empty;
                    var sID = string.Empty;
                    bool bUIDRef = false;
                    if (oBOI != null)
                    {
                    bUID = oBOI.BOD.bUID;
                    sBOName = oBOI.BOD.Name;
                    iBODID = oBOI.BOD.BOID;
                    XIGUID = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == "xiguid").Select(m => m.sValue).FirstOrDefault();
                    sPrimaryKey = oBOI.BOD.sPrimaryKey;
                    if (string.IsNullOrEmpty(sPrimaryKey))
                    {
                    sPrimaryKey = "id";
                    }
                    var IDPair = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == sPrimaryKey.ToLower()).FirstOrDefault();
                    if (IDPair != null)
                    {
                    ID = IDPair.sValue;
                    sID = IDPair.sName;
                    }
                    if (!string.IsNullOrEmpty(sRefenceID) && sRefenceID.ToLower() == "xiguid")
                    {
                    bUIDRef = true;
                    sBOName = oBOI.BOD.XIGUID.ToString();
                    var XIGUIDD = oBOI.BOD.AttributeD("xiguid");
                    var GuidPair = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == "xiguid").FirstOrDefault();
                    if (GuidPair != null)
                    {
                    sID = XIGUIDD.XIGUID.ToString();
                    iID = GuidPair.sValue;
                    }
                    }
                    else
                    {
                    sBOName = oBOI.BOD.Name;
                    iID = ID;
                    }
                    sBOIdentity = oBOI.BOD.Name.Replace(" ", "");
                    }
                    if (sShowSaveButton == "no")
                    {
                    sAutoSave = "yes";
                    }

                    var sInstanceID = "";
                    if (bUID == true)
                    {
                    if (!string.IsNullOrEmpty(XIGUID))
                    {
                    sInstanceID = XIGUID.ToString();
                    }
                    }
                    else
                    {
                    if (!string.IsNullOrEmpty(ID))
                    {
                    sInstanceID = ID.ToString();
                    }
                    else
                    {
                    sInstanceID = "0";
                    }
                    }
                    var sBOUID = iBODID + "_" + sInstanceID;
                    var sboud = sBOName + "_" + sInstanceID;
                    var opolicyDet = (Dictionary<int, string>
                        )Session["PolicyCollection"];
                        var sFormtype = "Create";
                        if (!string.IsNullOrEmpty(sInstanceID) && sInstanceID != "0")
                        {
                        sFormtype = "Update";
                        }
                        }
                        @if (oBOI != null)
                        {
                        if (!string.IsNullOrEmpty(sDisplayMode) && sDisplayMode == "View")
                        {
                        sBOUID = sInstanceID;
                        sGUID = "0";
                        }


                        <div class="PopupTabContentArea PopupTabContentArea_@sGUID BOCRUDFrm_@sBOUID xicomponent" id="Popup_@sboud" data-id="@sboud">
                            @*<span class="DialogPopout" onclick="fncDialogPopout(this)"><i class="fa fa-external-link"></i></span>*@
                            <div class="LeadContent body-container">
                                <div class="clerfix container-width">
                                    <div class="LeadContent-table p5">
                                        <div class="scroll_vh_100 form-container">
                                            <div class="flex-head">
                                                @if (sShowHeading == "yes")
                                                {
                                                if (!string.IsNullOrEmpty(sHeadingLabel))
                                                {
                                                <h3 class="maintitle">@sHeadingLabel</h3>
                                                }
                                                else
                                                {
                                                <h3 class="maintitle">@oBOD.LabelName</h3>
                                                }
                                                }
                                            </div>
                                            <div class="DetailsTable">
                                                @if (!string.IsNullOrEmpty(sDisplayMode) && sDisplayMode == "View" && (!string.IsNullOrEmpty(ID) && ID != "0"))
                                                {
                                                //if (sDisplayMode == "View")
                                                //{
                                                bool bShowForm = true;
                                                if ((string.IsNullOrEmpty(ID) || ID == "0") && sOnlyView.ToLower() == "yes")
                                                {
                                                bShowForm = false;
                                                }
                                                if (bShowForm)
                                                {
                                                <div>
                                                    @foreach (var items in oBOI.Attributes.Values.Where(m => m.bDirty == true).ToList())
                                                    {
                                                    items.BOD = oBOD;
                                                    var oAttrD = oBOI.BOD.Attributes.Values.Where(m => m.Name.ToLower() == items.sName.ToLower() || m.LabelName.ToLower() == items.sName.ToLower()).FirstOrDefault();
                                                    if ((oAttrD != null && oAttrD.Name.ToLower() == sPrimaryKey.ToLower()) || (oAttrD != null && oAttrD.Name.ToLower() == "spageno"))
                                                    {

                                                    }
                                                    else if (oBOI.BOD.Attributes.Values.Where(m => m.Name.ToLower() == items.sName.ToLower()).Select(m => m.FKiFileTypeID).FirstOrDefault() > 0)
                                                    {
                                                    var iPageNo = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == "spageno").Select(m => m.sValue).FirstOrDefault();
                                                    if (items.ImagePathDetails != null && items.ImagePathDetails.Count() > 0)
                                                    {
                                                    var Images = items.ImagePathDetails; //oBOI.Attributes.Values.Where(m => m.sName.ToLower() == items.sName.ToLower()).Select(m => m.ImagePathDetails);
                                                    foreach (var img in Images)
                                                    {
                                                    //foreach (var item in img)
                                                    //{
                                                    if (!string.IsNullOrEmpty(iPageNo))
                                                    {
                                                    var src = @PhysicalPath + "\\" + img.Expression + "#page=" + iPageNo;
                                                    <embed src="@src" style="width:100%;" type='application/pdf'>
                                                    }
                                                    else
                                                    {
                                                    <embed src="@PhysicalPath\@img.Expression" style="width:100%;height:100%;" type='application/pdf'>
                                                    }

                                                    //}
                                                    }
                                                    }

                                                    }
                                                    else
                                                    {
                                                    oAttrD = oBOI.BOD.Attributes.Values.Where(m => m.Name.ToLower() == items.sName.ToLower() || m.LabelName.ToLower() == items.sName.ToLower()).FirstOrDefault();
                                                    if (oAttrD == null)
                                                    {
                                                    oAttrD = new XIDAttribute();
                                                    oAttrD.Name = items.sName;
                                                    if (items.sName.ToLower() == XIConstant.Key_XICrtdBy.ToLower())
                                                    {
                                                    oAttrD.LabelName = "Created by";
                                                    }
                                                    else if (items.sName.ToLower() == XIConstant.Key_XICrtdWhn.ToLower())
                                                    {
                                                    oAttrD.LabelName = "Created when";
                                                    }
                                                    else if (items.sName.ToLower() == XIConstant.Key_XIUpdtdBy.ToLower())
                                                    {
                                                    oAttrD.LabelName = "Updated by";
                                                    }
                                                    else if (items.sName.ToLower() == XIConstant.Key_XIUpdtdWhn.ToLower())
                                                    {
                                                    oAttrD.LabelName = "Updated when";
                                                    }
                                                    }
                                                    var Label = oAttrD.LabelName;
                                                    @*<div class="@sFormClass">
                                                        <div class="form-group highlight--help">
                                                            <div class="wrap-width clearfix control-block">
                                                                <label class="form-label">@Label</label>
                                                                @if (oAttrD.iAttributeType == 20)
                                                                {
                                                                <div class="form-input">
                                                                    <span class="no-border bg-transparent" data-fid="@oAttrD.Name"></span>
                                                                </div>
                                                                }
                                                                else
                                                                {
                                                                <div class="form-input">
                                                                    <span class="no-border bg-transparent">@items.sResolvedValue</span>
                                                                </div>
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>*@
                                                    <div class="@sFormClass">
                                                        <div class="form-group highlight--help">
                                                            <div class="row">
                                                                <label class="control-label col-sm-6">@Label</label>
                                                                @if (oAttrD.iAttributeType == 20)
                                                                {
                                                                <label class="control-label col-sm-6" data-fid="@oAttrD.Name"></label>
                                                                }
                                                                else
                                                                {
                                                                <label class="control-label col-sm-6">@items.sResolvedValue</label>
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                    }
                                                    //else if (!string.IsNullOrEmpty(items.sResolvedValue))
                                                    //            {
                                                    //                var Label = oBOI.BOD.Attributes.Values.Where(m => m.Name.ToLower() == items.sName.ToLower() || m.LabelName.ToLower() == items.sName.ToLower()).Select(m => m.LabelName).FirstOrDefault();
                                                    //    < div class="form-group highlight--help">
                                                    //        <div class="wrap-width clearfix control-block">
                                                        //            <label class="form-label">@Label</label>
                                                        //            <div class="form-input">
                                                            //                <span class="no-border bg-transparent">@items.sResolvedValue</span>
                                                            //
                                                            //</div>
                                                        //
                                                        //</div>
                                                    //
                                                    //</div>
                                                //}


                                                }
                                            </div>
                                            }
                                            }
                                            else
                                            {
                                            var iType = "0";
                                            <form class="CreateForm @sFormClass wrap-fullwidth" id="Create_@NewsGUID" data-savetype="@sAutoSave" data-sbo="@sBOName" data-id="@sMergeID" data-disable="@sDisableSaveButton" data-Type="@sFormtype" data-sNo="@iCount" data-instanceid="@iID" data-identifier="@sDataIdentifier" data-DependencyIdentifier="@sDependencyIdentifier" data-CacheInstance="@sCacheInstance" data-sPrimary="@sID">
                                                @if (!string.IsNullOrEmpty(sAskFK) && sAskFK.ToLower() == "no" && !string.IsNullOrEmpty(sFKCol) && !string.IsNullOrEmpty(sFKName))
                                                {
                                                var AttrD = oBOI.BOD.Attributes.Values.Where(m => m.Name.ToLower() == sFKCol.ToLower()).FirstOrDefault();
                                                sFKLabel = AttrD.LabelName;
                                                <div class="form-group highlight--help" data-controltype="bofield">
                                                    <div class="wrap-width clearfix control-block">
                                                        <label class="form-label">
                                                            <span class="pull-left">
                                                                @AttrD.LabelName
                                                            </span>
                                                        </label>
                                                        <div class="form-input">
                                                            @sFKName
                                                        </div>
                                                    </div>
                                                </div>
                                                <input type="hidden" name="@sFKCol" value="@sFKVal" />
                                                }
                                                else if (!string.IsNullOrEmpty(sAskFK) && sAskFK.ToLower() == "no" && !string.IsNullOrEmpty(sFKCol))
                                                {
                                                <input type="hidden" name="@sFKCol" value="@sFKVal" />
                                                }
                                                @if (!string.IsNullOrEmpty(sMode))
                                                {
                                                <div id="FormMode" data-value="@sMode"></div>
                                                }
                                                @if (!string.IsNullOrEmpty(sUpdateAction))
                                                {
                                                <div id="UpdateAction" data-value="@sUpdateAction"></div>
                                                }
                                                <input type="hidden" data-hierarchy="@sHierarchy" />
                                                <div id="BtnMsg" hidden></div>
                                                @foreach (var items in oBOI.Attributes.Values.Where(m => m.bDirty == true).ToList())
                                                {
                                                if (items.sName == "iType")
                                                {
                                                iType = items.sValue;
                                                }
                                                var bIsDependent = false;
                                                var AttrD = oBOI.BOD.Attributes.Values.Where(m => m.Name.ToLower() == items.sName.ToLower() || m.LabelName.ToLower() == items.sName.ToLower()).FirstOrDefault();
                                                if (AttrD != null)
                                                {
                                                if (AttrD.bIsFileAliasName)
                                                {
                                                sFileAliasType = AttrD.Name;
                                                if (!string.IsNullOrEmpty(sFileAliasType))
                                                {
                                                var oAttrDef = oBOD.Attributes.Values.Where(m => m.Name.ToLower() == sFileAliasType.ToLower() || m.LabelName.ToLower() == sFileAliasType.ToLower()).FirstOrDefault();
                                                if (oAttrDef.FKiType > 0)
                                                {
                                                var OptValue = oBOI.Attributes.Values.Where(m => m.sName == items.sName).Select(s => s.sValue).FirstOrDefault();
                                                if (oAttrDef.FieldDDL != null && oAttrDef.FieldDDL.Count() > 0)
                                                {
                                                var sSelectedValue = string.Empty;
                                                if (string.IsNullOrEmpty(OptValue))
                                                {
                                                var sDefaultValue = oAttrDef.DefaultValue;
                                                if (!string.IsNullOrEmpty(sDefaultValue))
                                                {
                                                sSelectedValue = oAttrDef.FieldDDL.Where(x => x.text == sDefaultValue).Select(x => x.Expression).FirstOrDefault();
                                                }
                                                }
                                                else
                                                {
                                                sSelectedValue = oAttrDef.FieldDDL.Where(x => x.text == OptValue).Select(x => x.Expression).FirstOrDefault();
                                                }
                                                sFileAliasName = sSelectedValue;
                                                }
                                                }
                                                else if (oAttrDef.IsOptionList)
                                                {
                                                var OptValue = oBOI.Attributes.Values.Where(m => m.sName == items.sName).Select(s => s.sValue).FirstOrDefault();

                                                if (oAttrDef.OptionList != null)
                                                {
                                                var sSelectedValue = string.Empty;
                                                if (string.IsNullOrEmpty(OptValue))
                                                {
                                                var sDefaultValue = oAttrDef.DefaultValue;
                                                if (!string.IsNullOrEmpty(sDefaultValue))
                                                {
                                                int iDefaultValue = Convert.ToInt32(sDefaultValue);
                                                sSelectedValue = oAttrDef.OptionList.Where(x => x.ID == iDefaultValue).Select(x => x.sOptionName).FirstOrDefault();
                                                }
                                                }
                                                else
                                                {
                                                sSelectedValue = oAttrDef.OptionList.Where(x => x.sValues == OptValue).Select(x => x.sOptionName).FirstOrDefault();
                                                }
                                                sFileAliasName = sSelectedValue;
                                                }
                                                }
                                                else
                                                {
                                                sFileAliasName = oBOI.Attributes.Values.Where(x => x.sName.ToLower() == sFileAliasType.ToLower()).Select(x => x.sValue).FirstOrDefault();
                                                }
                                                }
                                                }
                                                }
                                                if (AttrD == null)
                                                {
                                                AttrD = new XIDAttribute();
                                                AttrD.Name = items.sName;
                                                if (items.sName.ToLower() == XIConstant.Key_XICrtdBy.ToLower())
                                                {
                                                AttrD.LabelName = "Created by";
                                                items.bLock = true;
                                                }
                                                else if (items.sName.ToLower() == XIConstant.Key_XICrtdWhn.ToLower())
                                                {
                                                AttrD.LabelName = "Created when";
                                                items.bLock = true;
                                                }
                                                else if (items.sName.ToLower() == XIConstant.Key_XIUpdtdBy.ToLower())
                                                {
                                                AttrD.LabelName = "Updated by";
                                                items.bLock = true;
                                                }
                                                else if (items.sName.ToLower() == XIConstant.Key_XIUpdtdWhn.ToLower())
                                                {
                                                AttrD.LabelName = "Updated when";
                                                items.bLock = true;
                                                }
                                                }
                                                if (bIsStepLock)
                                                {
                                                items.bLock = true;
                                                }
                                                if (oBOI.DependentFields != null && oBOI.DependentFields.Count() > 0)
                                                {
                                                if (oBOI.DependentFields.Contains(AttrD.Name))
                                                {
                                                bIsDependent = true;
                                                }
                                                }
                                                var Label = AttrD.LabelName;
                                                var AttrName = items.sName;
                                                if (bUIDRef)
                                                {
                                                AttrName = AttrD.XIGUID.ToString();
                                                }
                                                //var FieldOrigin = oBOI.BOD.Attributes.Values.Where(m => m.Name.ToLower() == AttrName.ToLower() || m.LabelName.ToLower() == AttrName.ToLower()).FirstOrDefault();
                                                bool isLockField = items.bLock;
                                                if (items.sName.ToLower() == sPrimaryKey.ToLower() && !string.IsNullOrEmpty(sShowID) && sShowID.ToLower() == "no")
                                                {
                                                if (!string.IsNullOrEmpty(sShowID) && sShowID.ToLower() == "no")
                                                {
                                                <input type="hidden" name="@sID.ToLower()" value="@iID" />
                                                }
                                                else
                                                {
                                                <div class="form-input">
                                                    <div class="field-errmsg fc-red">
                                                        <span class="@NewsGUID-@sBOIdentity-@AttrName"></span>
                                                    </div>
                                                    <span class="no-border bc-disable form-control" readonly="readonly">@items.sValue</span>
                                                    <input type="hidden" name="@AttrName.ToLower()" value="@items.sValue" />
                                                </div>
                                                }
                                                }
                                                else if (bIsDependent == false)
                                                {
                                                var sHiddenClass = "off";
                                                bool bIsHidden = items.bIsHidden;
                                                if (sInstanceID != "0" && oBOD.BOID == 887)
                                                {
                                                if (items.sValue == "0" || items.sValue == null || items.sValue == "")
                                                {
                                                if (items.sName == "dtTurnOFFFrom" || items.sName == "dtTurnOFFTo")
                                                {

                                                }
                                                else
                                                {
                                                sHiddenClass = "on";
                                                }
                                                }
                                                }
                                                if (bIsHidden)
                                                {
                                                sHiddenClass = "on";
                                                }
                                                if (items.sName.ToLower() == sPrimaryKey.ToLower())
                                                {
                                                sHiddenClass = "on";
                                                }
                                                if (items.sName.ToLower() == "xiguid")
                                                {
                                                sHiddenClass = "on";
                                                }
                                                if (!string.IsNullOrEmpty(AttrD.LabelName))
                                                {
                                                var isHidden = oVNVs.Where(x => x.sName.ToLower() == AttrD.LabelName.ToLower()).Select(x => x.sValue).FirstOrDefault();
                                                if (!string.IsNullOrEmpty(isHidden) && isHidden.ToLower() == "yes")
                                                {
                                                sHiddenClass = "on";
                                                }
                                                }
                                                <div class="form-group highlight--help @sHiddenClass" data-controltype="bofield">
                                                    <div class="wrap-width clearfix control-block">
                                                        <label class="form-label">
                                                            <span class="pull-left">
                                                                @if (items.sName.ToLower() == "id" && !string.IsNullOrEmpty(sShowID) && sShowID.ToLower() == "no")
                                                                {

                                                                }
                                                                else
                                                                {
                                                                @Label
                                                                if (AttrD.bIsMandatory)
                                                                {
                                                                <span class="star">*</span>
                                                                }

                                                                }
                                                                @if (!string.IsNullOrEmpty(AttrD.sHelpText))
                                                                {
                                                                <span class="HelpIcon"></span>
                                                                }
                                                                <div class="helptext">
                                                                    <div class="helptext--desktop">
                                                                        <div class="helptext__content">
                                                                            <a class="helptext-content-close"><i class="fas fa-times"></i></a>									<p><strong>@AttrD.sHelpText</strong></p>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </span>
                                                        </label>
                                                        @if (items.sName.ToLower() != "id" && isLockField == false)
                                                        {
                                                        if (AttrD.bComponent && AttrD.FKiComponentID > 0)
                                                        {
                                                        <div class="mapbox" data-name="@AttrName">
                                                            @{ Html.RenderAction("Load_Component", "XIComponents", new { iComponentID = AttrD.FKiComponentID, sType = "attribute", iInstanceID = AttrD.ID, sGUID = ViewBag.sGUID, sInput = items.sValue }); }
                                                        </div>

                                                        }
                                                        else if (AttrD.IsOptionList)
                                                        {
                                                        string strEvent = string.Empty;
                                                        if (!string.IsNullOrEmpty(AttrD.sEventHandler))
                                                        {
                                                        var oEventHandler = AttrD.sEventHandler.Replace("\r\n", string.Empty).Split(',');
                                                        var oDepBOFieldIDs = AttrD.sDepBOFieldIDs.Split(',');
                                                        var sDepBOField1 = string.Empty;
                                                        var sDepBoName = AttrD.sDepBoName;
                                                        int i = 0;
                                                        strEvent = string.Empty;
                                                        foreach (var sEventHandler in oEventHandler)
                                                        {
                                                        var sDepBOField = string.Empty;
                                                        var sEvents = sEventHandler.Split('=');
                                                        foreach (var sDepBOFieldIDs in oDepBOFieldIDs)
                                                        {
                                                        if (sEvents[0] == "onchange")
                                                        {
                                                        sDepBOField1 = oBOI.BOD.Attributes.Values.Where(m => m.ID == Convert.ToInt32(sDepBOFieldIDs)).Select(m => m.Name).FirstOrDefault();
                                                        }

                                                        else if (sEvents[0] == "onload")
                                                        {
                                                        sDepBOField1 = oBOI.BOD.Attributes.Values.Where(m => m.ID == Convert.ToInt32(sDepBOFieldIDs)).Select(m => m.Name).FirstOrDefault();
                                                        }
                                                        sDepBOField += sDepBOField1 + ",";
                                                        }
                                                        string itemValue = "0";
                                                        if (!string.IsNullOrEmpty(items.sValue) && items.sValue != "0")
                                                        {
                                                        itemValue = items.sValue;
                                                        }
                                                        if (!string.IsNullOrEmpty(AttrD.sDepBoName))
                                                        {
                                                        strEvent = strEvent + "" + sEvents[0] + "=" + sEvents[1] + "(this,'" + sDepBOField.Trim(',') + "','" + sDepBoName + "'," + itemValue + ",'" + NewsGUID + "')";
                                                        }
                                                        else
                                                        {
                                                        strEvent = strEvent + " " + sEvents[0] + "=" + sEvents[1] + "(this,'" + sDepBOField.Trim(',') + "','" + NewsGUID + "')";
                                                        }
                                                        i++;
                                                        }
                                                        if (!string.IsNullOrEmpty(strEvent) && (items.sName != "sOneClickOrBO" && items.sName != "sConfig"))
                                                        {
                                                        var sEvents2 = strEvent.Split('=');
                                                        if (!string.IsNullOrEmpty(items.sValue) && sEvents2.Length == 2 && !string.IsNullOrEmpty(sEvents2[1]))
                                                        {
                                                        <script>
                                                                                        $(document).ready(function(){
                                        @Html.Raw(sEvents2[1]);
                                    })
                                                        </script>
                                                        }
                                                        }
                                                        }
                                                        else
                                                        {
                                                        string itemValue = "0";
                                                        if (!string.IsNullOrEmpty(items.sValue) && items.sValue != "0")
                                                        {
                                                        itemValue = items.sValue;
                                                        }
                                                        }
                                                        var bIsSelect = false;
                                                        <div class="form-input">
                                                            <div class="field-errmsg fc-red">
                                                                <span class="@NewsGUID-@sBOIdentity-@AttrName"></span>
                                                            </div>
                                                            <div class="select-wrapper">
                                                                @*@Html.Hidden("ChangeFields", Url.Action("XiLink/ChangeFields"))*@
                                                                <select name="@AttrName" class="form-control" id="DDL-@AttrName@NewsGUID" data-attrname="@AttrName" @strEvent data-nonformdata="@items.sPreviousValue" data-sPreviousValue="@items.sPreviousValue" onchange="fncShowGroup(this)" data-attrid="@AttrD.ID" data-sbo="@AttrD.sFKBOName">
                                                                    @if (AttrD.OptionList != null)
                                                                    {
                                                                    var OptValue = items.sPreviousValue;
                                                                    if (oBOD.BOID == 717 && AttrD.Name.ToLower() == "istatus")
                                                                    {
                                                                    <option value="">Please Select</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="" class="ps">Please Select</option>
                                                                    }
                                                                    foreach (var opt in AttrD.OptionList.Where(m => m.XIDeleted == 0).OrderBy(m => m.sOptionName))
                                                                    {
                                                                    if (opt.sOptionName != null && opt.sOptionName.ToLower() == "please select")
                                                                    {
                                                                    {
                                                                    bIsSelect = true;
                                                                    }
                                                                    }
                                                                    else if (OptValue == null)
                                                                    {
                                                                    if (!string.IsNullOrEmpty(AttrD.DefaultValue))
                                                                    {
                                                                    if (opt.sOptionName == AttrD.DefaultValue)
                                                                    {
                                                                    <option value="@opt.sValues" selected data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField">@opt.sOptionName</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="@opt.sValues" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField">@opt.sOptionName</option>
                                                                    }
                                                                    }
                                                                    else
                                                                    {
                                                                    if (opt.bIsGroup == true)
                                                                    {
                                                                    <option id="@opt.BOID" value="@opt.sValues" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField">@opt.sOptionName</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="@opt.sValues" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField">@opt.sOptionName</option>
                                                                    }
                                                                    }
                                                                    }
                                                                    else
                                                                    {
                                                                    if (opt.sValues == OptValue)
                                                                    {
                                                                    if (opt.bIsGroup == true)
                                                                    {
                                                                    <option id="@opt.BOID" selected value="@opt.sValues" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField">@opt.sOptionName</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="@opt.sValues" selected data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField">@opt.sOptionName</option>
                                                                    }
                                                                    }
                                                                    else
                                                                    {
                                                                    if (opt.bIsGroup == true)
                                                                    {
                                                                    if (opt.sValues == OptValue)
                                                                    {
                                                                    <option id="@opt.BOID" selected value="@opt.sValues" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField">@opt.sOptionName</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    <option id="@opt.BOID" value="@opt.sValues" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField">@opt.sOptionName</option>
                                                                    }
                                                                    }
                                                                    else
                                                                    {
                                                                    if (opt.sValues == OptValue)
                                                                    {
                                                                    <option value="@opt.sValues" selected data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField">@opt.sOptionName</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="@opt.sValues" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField">@opt.sOptionName</option>
                                                                    }
                                                                    }
                                                                    }
                                                                    }
                                                                    }
                                                                    }
                                                                </select>
                                                                @if (AttrD.iDisplayType == 20)
                                                                {
                                                                <script>
                                                                        $('#DDL-@AttrD.Name@NewsGUID').addClass('chosen', function () { $('.chosen').chosen(); });
                                                                </script>
                                                                }
                                                                else if (AttrD.iDisplayType == 30)
                                                                {
                                                                <script>
                                                                        $('#DDL-@AttrD.Name@NewsGUID').attr("multiple", "multiple").addClass('chosen', function () { $('.chosen').chosen(); });
                                                                </script>
                                                                }
                                                                <script>
                                                                                    if ('@items.sValue' == null || '@items.sValue' == '' || '@items.sValue' == '0') {
                                                                                        if ('@bIsSelect' == 'True') {
                                                                                            $('#DDL-@AttrName@NewsGUID').val('');
                                                                                        }
                                                                                    }
                                                                </script>
                                                                <span class="select_wrapper_caret fas fa-chevron-down"></span>
                                                            </div>
                                                            <div class="helptext-btn-group">
                                                                @if (AttrD.bTrack)
                                                                {
                                                                <a href="#" class="btn btn-theme AttrTrack" data-boiid="@sInstanceID" data-attrid="@AttrD.ID" data-bodid="@oBOD.BOID" data-columnname="@Label">
                                                                    <i class="fa fa-bars" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme" data-toggle="tooltip" title="Info">
                                                                    <i class="fa fa-info-circle" tabindex="0" role="button"></i>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        }
                                                        else if (AttrD.FKiType > 0)
                                                        {
                                                        <div class="form-input">
                                                            <div class="field-errmsg fc-red">
                                                                <span class="@NewsGUID-@sBOIdentity-@AttrName"></span>
                                                            </div>
                                                            @*@if (AttrD.Name.StartsWith("s"))
                                                            {
                                                            <span>@items.sValue</span>
                                                            }
                                                            else*@
                                                            
                                                            @if (AttrD.sFKBOSize == "10")
                                                            {
                                                            var bIsSelect = false;
                                                            if (AttrD.iOneClickID > 0)
                                                            {
                                                            string strEvent = string.Empty;
                                                            if (!string.IsNullOrEmpty(AttrD.sEventHandler))
                                                            {
                                                            var oEventHandler = AttrD.sEventHandler.Replace("\r\n", string.Empty).Split(',');
                                                            if (AttrD.sDepBOFieldIDs != null)
                                                            {
                                                            var oDepBOFieldIDs = AttrD.sDepBOFieldIDs.Split(',');
                                                            var sDepBOField1 = string.Empty;
                                                            var sDepBoName = AttrD.sDepBoName;
                                                            int i = 0;
                                                            strEvent = string.Empty;

                                                            foreach (var sEventHandler in oEventHandler)
                                                            {
                                                            var sDepBOField = string.Empty;
                                                            var sEvents = sEventHandler.Split('=');
                                                            foreach (var sDepBOFieldIDs in oDepBOFieldIDs)
                                                            {
                                                            if (sEvents[0] == "onchange")
                                                            {
                                                            if (bUIDRef)
                                                            {
                                                            sDepBOField1 = oBOI.BOD.Attributes.Values.Where(m => m.ID == Convert.ToInt32(sDepBOFieldIDs)).Select(m => m.XIGUID.ToString()).FirstOrDefault();
                                                            }
                                                            else
                                                            {
                                                            sDepBOField1 = oBOI.BOD.Attributes.Values.Where(m => m.ID == Convert.ToInt32(sDepBOFieldIDs)).Select(m => m.Name).FirstOrDefault();
                                                            }
                                                            }

                                                            else if (sEvents[0] == "onload")
                                                            {
                                                            if (bUIDRef)
                                                            {
                                                            sDepBOField1 = oBOI.BOD.Attributes.Values.Where(m => m.ID == Convert.ToInt32(sDepBOFieldIDs)).Select(m => m.XIGUID.ToString()).FirstOrDefault();
                                                            }
                                                            else
                                                            {
                                                            sDepBOField1 = oBOI.BOD.Attributes.Values.Where(m => m.ID == Convert.ToInt32(sDepBOFieldIDs)).Select(m => m.Name).FirstOrDefault();
                                                            }
                                                            }
                                                            sDepBOField += sDepBOField1 + ",";
                                                            }
                                                            string itemValue = "0";
                                                            if (!string.IsNullOrEmpty(items.sValue) && items.sValue != "0")
                                                            {
                                                            itemValue = items.sValue;
                                                            }
                                                            if (!string.IsNullOrEmpty(AttrD.sDepBoName))
                                                            {
                                                            strEvent = strEvent + "" + sEvents[0] + "=" + sEvents[1] + "(this,'" + sDepBOField.Trim(',') + "','" + sDepBoName + "'," + itemValue + ",'" + NewsGUID + "')";
                                                            }
                                                            else
                                                            {
                                                            strEvent = strEvent + " " + sEvents[0] + "=" + sEvents[1] + "(this,'" + @sDepBOField.Trim(',') + "')";
                                                            }
                                                            i++;
                                                            }
                                                            }
                                                            else
                                                            {
                                                            foreach (var sEventHandler in oEventHandler)
                                                            {
                                                            //var sDepBOField = string.Empty;
                                                            //var sEvents = sEventHandler.Split('=');
                                                            //strEvent = oEventHandler[0].Replace('^', ',');
                                                            strEvent = strEvent + sEventHandler.Replace('^', ',') + ',';
                                                            }
                                                            }
                                                            if (!string.IsNullOrEmpty(strEvent) && strEvent.EndsWith(","))
                                                            {
                                                            strEvent = strEvent.Substring(0, strEvent.Length - 1);
                                                            }
                                                            if (!string.IsNullOrEmpty(strEvent) && !string.IsNullOrEmpty(AttrD.sDepBoName))
                                                            {
                                                            var sEvents2 = strEvent.Split('=');
                                                            if (!string.IsNullOrEmpty(items.sValue) && sEvents2.Length == 2 && !string.IsNullOrEmpty(sEvents2[1]))
                                                            {
                                                            <script>
                                                                                                    $(document).ready(function(){
                                                                                                        @Html.Raw(sEvents2[1]);
                                                                                                    })
                                                            </script>
                                                            }
                                                            }
                                                            }
                                                            <div class="select-wrapper">
                                                                <select name="@AttrName" class="form-control" id="DDL-@AttrName@NewsGUID" @Html.Raw(strEvent) data-attrname="@AttrName" data-spreviousvalue="@items.sPreviousValue" data-attrid="@AttrD.ID" data-sbo="@AttrD.sFKBOName">
                                                                    @{var OptValue = items.sPreviousValue;
                                                                    if (items.FieldDDL != null && items.FieldDDL.Count() > 0)
                                                                    {
                                                                    <option value="" class="ps">Please Select</option>
                                                                    foreach (var opt in items.FieldDDL.OrderBy(m => m.Expression))
                                                                    {
                                                                    if (opt.Expression != null && opt.Expression.ToLower() == "please select")
                                                                    {
                                                                    {
                                                                    bIsSelect = true;
                                                                    }
                                                                    }
                                                                    else if (string.IsNullOrEmpty(OptValue))
                                                                    {
                                                                    if (!string.IsNullOrEmpty(AttrD.DefaultValue) && opt.Expression == AttrD.DefaultValue)
                                                                    {
                                                                    var selectdvalue = items.FieldDDL.Where(s => s.Expression.ToLower() == AttrD.DefaultValue.ToLower()).Select(s => s.text).FirstOrDefault();
                                                                    <option value="@selectdvalue" selected>@AttrD.DefaultValue</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="@opt.text">@opt.Expression</option>
                                                                    }
                                                                    }
                                                                    else
                                                                    {
                                                                    if (opt.text == OptValue)
                                                                    {
                                                                    <option value="@opt.text" selected>@opt.Expression</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="@opt.text">@opt.Expression</option>
                                                                    }
                                                                    }
                                                                    }
                                                                    }
                                                                    else if (AttrD.FieldDDL != null && AttrD.FieldDDL.Count() > 0)
                                                                    {
                                                                    <option value="" class="ps">Please Select</option>
                                                                    foreach (var opt in AttrD.FieldDDL.OrderBy(m => m.Expression))
                                                                    {
                                                                    if (opt.Expression != null && opt.Expression.ToLower() == "please select")
                                                                    {
                                                                    {
                                                                    bIsSelect = true;
                                                                    }
                                                                    }
                                                                    else if (string.IsNullOrEmpty(OptValue))
                                                                    {
                                                                    <option value="@opt.text">@opt.Expression</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    if (opt.text == OptValue)
                                                                    {
                                                                    <option value="@opt.text" selected>@opt.Expression</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="@opt.text">@opt.Expression</option>
                                                                    }
                                                                    }
                                                                    }
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="0"></option>
                                                                    }
                                                                    }
                                                                </select>
                                                                <script>
                                                                                            if ('@items.sValue' == null || '@items.sValue' == '') {
                                                                                                if ('@bIsSelect' == 'True') {
                                                                                                    $('#DDL-@AttrName@NewsGUID').val('');
                                                                                                }
                                                                                            }
                                                                </script>
                                                                <span class="select_wrapper_caret fas fa-chevron-down"></span>
                                                            </div>
                                                            }
                                                            else
                                                            {
                                                            string strEvent = string.Empty;
                                                            if (!string.IsNullOrEmpty(AttrD.sEventHandler))
                                                            {
                                                            var oEventHandler = AttrD.sEventHandler.Replace("\r\n", string.Empty).Split(',');
                                                            var oDepBOFieldIDs = AttrD.sDepBOFieldIDs.Split(',');
                                                            foreach (var sEventHandler in oEventHandler)
                                                            {
                                                            var sDepBOField = string.Empty;
                                                            var sEvents = sEventHandler.Split('=');
                                                            foreach (var sDepBOFieldID in oDepBOFieldIDs)
                                                            {
                                                            if (sEvents[0] == "onchange")
                                                            {
                                                            if (bUIDRef)
                                                            {
                                                            sDepBOField = oBOI.BOD.Attributes.Values.Where(m => m.ID == Convert.ToInt32(sDepBOFieldID)).Select(m => m.XIGUID.ToString()).FirstOrDefault();
                                                            }
                                                            else
                                                            {
                                                            sDepBOField = oBOI.BOD.Attributes.Values.Where(m => m.ID == Convert.ToInt32(sDepBOFieldID)).Select(m => m.Name).FirstOrDefault();
                                                            }
                                                            }
                                                            else if (sEvents[0] == "onload")
                                                            {
                                                            if (bUIDRef)
                                                            {
                                                            sDepBOField = oBOI.BOD.Attributes.Values.Where(m => m.ID == Convert.ToInt32(sDepBOFieldID)).Select(m => m.XIGUID.ToString()).FirstOrDefault();
                                                            }
                                                            else
                                                            {
                                                            sDepBOField = oBOI.BOD.Attributes.Values.Where(m => m.ID == Convert.ToInt32(sDepBOFieldID)).Select(m => m.Name).FirstOrDefault();
                                                            }
                                                            }
                                                            strEvent = strEvent + " " + sEvents[0] + "=" + sEvents[1] + "(this,'" + @sDepBOField + "')";
                                                            }
                                                            }
                                                            }
                                                            if (AttrD.FieldDDL != null && AttrD.FieldDDL.Count() > 0 && oBOI.Attributes.Keys.Contains("OptionorText".ToLower()) && (AttrName.ToLower().Contains("FKiSearchGroup".ToLower()) || AttrName.ToLower().Contains("FKiListGroup".ToLower())))
                                                            {
                                                            <div class="form-input search">
                                                                @if (string.IsNullOrEmpty(items.sPreviousValue) && !string.IsNullOrEmpty(AttrD.DefaultValue))
                                                                {
                                                                items.sPreviousValue = AttrD.DefaultValue;
                                                                }
                                                                <select name="@AttrName" class="form-control" id="DDL-@AttrName@NewsGUID" data-attrname="@AttrName" @strEvent data-nonformdata="@items.sPreviousValue" data-sPreviousValue="@items.sPreviousValue" data-attrid="@AttrD.ID" data-sbo="@AttrD.sFKBOName">
                                                                    @{var OptValue = items.sPreviousValue;
                                                                    if (AttrD.FieldDDL != null && AttrD.FieldDDL.Count() > 0)
                                                                    {
                                                                    <option value="" class="ps">Please Select</option>
                                                                    foreach (var opt in AttrD.FieldDDL.OrderBy(m => m.Expression))
                                                                    {
                                                                    if (opt.Expression != null && opt.Expression.ToLower() == "please select")
                                                                    {
                                                                    {
                                                                    bIsSelect = true;
                                                                    }
                                                                    }
                                                                    else if (string.IsNullOrEmpty(OptValue))
                                                                    {
                                                                    if (!string.IsNullOrEmpty(AttrD.DefaultValue))
                                                                    {
                                                                    if (opt.Expression == AttrD.DefaultValue)
                                                                    {
                                                                    <option value="@opt.text" selected>@opt.Expression</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="@opt.text">@opt.Expression</option>
                                                                    }
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="@opt.text">@opt.Expression</option>
                                                                    }
                                                                    }
                                                                    else
                                                                    {
                                                                    if (opt.text == OptValue)
                                                                    {
                                                                    <option value="@opt.text" selected>@opt.Expression</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="@opt.text">@opt.Expression</option>
                                                                    }
                                                                    }
                                                                    }
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="0"></option>
                                                                    }
                                                                    }
                                                                </select>
                                                                <script>
                                                                                                                if ('@items.sValue' == null || '@items.sValue' == '') {
                                                                                                                    if ('@bIsSelect' == 'True') {
                                                                                                                        $('#DDL-@AttrName@NewsGUID').val('');
                                                                                                                    }
                                                                                                                }
                                                                </script>
                                                                <span class="select_wrapper_caret fas fa-chevron-down"></span>
                                                            </div>
                                                            <span style="float:left;padding:3px;">/</span>

                                                            <div class="search" style="float:left;padding:3px;">
                                                                @if (o1Click.SearchFields != null && o1Click.FKiSearchGroup == 0 && items.sName == "FKiSearchGroup")
                                                                {
                                                                items.sValue = o1Click.SearchFields;
                                                                }
                                                                else if (o1Click.SelectFields != null && o1Click.FKiListGroup == 0 && items.sName == "FKiListGroup")
                                                                {
                                                                items.sValue = o1Click.SelectFields;
                                                                }
                                                                else
                                                                {
                                                                items.sValue = string.Empty;
                                                                }
                                                                @Html.TextBoxFor(m => items.sValue, new { @Name = AttrName, @class = "form-control", @id = AttrName, @data_sPreviousValue = items.sPreviousValue })
                                                            </div>
                                                            }
                                                            else
                                                            {
                                                            <div class="select-wrapper">
                                                                @if (string.IsNullOrEmpty(items.sPreviousValue) && !string.IsNullOrEmpty(AttrD.DefaultValue))
                                                                {
                                                                items.sPreviousValue = AttrD.DefaultValue;
                                                                }
                                                                <select name="@AttrName" class="form-control" id="DDL-@AttrName@NewsGUID" data-attrname="@AttrName" @strEvent data-nonformdata="@items.sPreviousValue" data-sPreviousValue="@items.sPreviousValue" data-attrid="@AttrD.ID" data-sbo="@AttrD.sFKBOName">
                                                                    @{var OptValue = items.sPreviousValue;
                                                                    if (AttrD.FieldDDL != null && AttrD.FieldDDL.Count() > 0)
                                                                    {
                                                                    <option value="" class="ps">Please Select</option>
                                                                    foreach (var opt in AttrD.FieldDDL.OrderBy(m => m.Expression))
                                                                    {
                                                                    if (opt.Expression != null && opt.Expression.ToLower() == "please select")
                                                                    {
                                                                    {
                                                                    bIsSelect = true;
                                                                    }
                                                                    }
                                                                    else if (string.IsNullOrEmpty(OptValue))
                                                                    {
                                                                    if (!string.IsNullOrEmpty(AttrD.DefaultValue))
                                                                    {
                                                                    if (opt.Expression == AttrD.DefaultValue)
                                                                    {
                                                                    <option value="@opt.text" selected>@opt.Expression</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="@opt.text">@opt.Expression</option>
                                                                    }
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="@opt.text">@opt.Expression</option>
                                                                    }
                                                                    }
                                                                    else
                                                                    {
                                                                    if (opt.text == OptValue)
                                                                    {
                                                                    <option value="@opt.text" selected>@opt.Expression</option>
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="@opt.text">@opt.Expression</option>
                                                                    }
                                                                    }
                                                                    }
                                                                    }
                                                                    else
                                                                    {
                                                                    <option value="0"></option>
                                                                    }
                                                                    }
                                                                </select>
                                                                @if (AttrD.iDisplayType == 20)
                                                                {
                                                                    <script>
                                                                        $('#DDL-@AttrD.Name@NewsGUID').addClass('chosen', function () { $('.chosen').chosen(); });
                                                                    </script>
                                                                }
                                                                else if (AttrD.iDisplayType == 30)
                                                                {
                                                                    <script>
                                                                        $('#DDL-@AttrD.Name@NewsGUID').attr("multiple", "multiple").addClass('chosen', function () { $('.chosen').chosen(); });
                                                                    </script>
                                                                }

                                                                <script>
                                                                                                                                if ('@items.sValue' == null || '@items.sValue' == '') {
                                                                                                                                    if ('@bIsSelect' == 'True') {
                                                                                                                                        $('#DDL-@AttrName@NewsGUID').val('');
                                                                                                                                    }
                                                                                                                                }
                                                                </script>
                                                                <span class="select_wrapper_caret fas fa-chevron-down"></span>
                                                            </div>
                                                            }
                                                            }

                                                            }
                                                            else if (AttrD.sFKBOSize == "20")
                                                            {
                                                            items.BOD = oBOD;
                                                            if (!string.IsNullOrEmpty(items.sValue) && items.sValue != "0")
                                                            {
                                                            <input id="DDLShow-@AttrName@NewsGUID" type="text" data-name="@AttrName" value="@items.sResolvedValue" class="form-control XIField @AttrName" data-sPreviousValue="@items.sPreviousValue" />
                                                            }
                                                            else
                                                            {
                                                            <input id="DDLShow-@AttrName@NewsGUID" type="text" data-name="@AttrName" value="" class="form-control XIField @AttrName" placeholder="@AttrD.sPlaceHolder" data-sPreviousValue="@items.sPreviousValue" />
                                                            }
                                                            <input id="DDL-@AttrName@NewsGUID" type="hidden" name="@AttrName" value="@items.sValue" data-IsValid="" />
                                                            <script>
                                                                                                                                            var iBODID = 0;
                                                                                                                                            var sBOName = '@AttrD.sFKBOName';
                                                                                                                                            var fieldVal = '@items.sValue';
                                                                                                                                            var AutoCompleteList = 0;
                                                                                                                                            var sRefType = "bo";
                                                                                                                                            if ('@AttrD.iOneClickID' > 0) {
                                                                                                                                                sRefType = "1click";
                                                                                                                                                iBODID = '@AttrD.iOneClickID';
                                                                                                                                            }
                                                                                                                                            $.ajax({
                                                                                                                                                url: '@Url.Action("GetAutoCompleteList", "BusinessObjects")',
                                                                                                                                                type: 'POST',
                                                                                                                                                contentType: "application/json; charset=utf-8",
                                                                                                                                                datatype: "json",
                                                                                                                                                async: true,
                                                                                                                                                cache: false,
                                                                                                                                                data: JSON.stringify({ sType: sRefType, iBODID: iBODID, sBOName: sBOName, sGUID: '@sGUID' }),
                                                                                                                                                success: function (data) {
                                                                                                                                                    AutoCompleteList = data;
                                                                                                                                                    if ('@AttrD.iOneClickID' > 0) {
                                                                                                                                                        AutoCompleteDict.push({
                                                                                                                                                            key: '@AttrD.iOneClickID',
                                                                                                                                                            value: AutoCompleteList
                                                                                                                                                        });
                                                                                                                                                    }
                                                                                                                                                    else if ('@AttrD.sFKBOName' != "") {
                                                                                                                                                        AutoCompleteDict.push({
                                                                                                                                                            key: '@AttrD.sFKBOName',
                                                                                                                                                            value: AutoCompleteList
                                                                                                                                                        });
                                                                                                                                                    }
                                                                                                                                                    if ('@items.sValue' && '@items.sValue'.length > 0) {
                                                                                                                                                        var autoDict = 0;
                                                                                                                                                        if ('@AttrD.iOneClickID' > 0) {
                                                                                                                                                            for (var k = 0; k < AutoCompleteDict.length; k++) {
                                                                                                                                                                if (AutoCompleteDict[k].key == '@AttrD.iOneClickID') {
                                                                                                                                                                    autoDict = AutoCompleteDict[k].value;
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        else if ('@AttrD.sFKBOName' != "") {
                                                                                                                                                            for (var k = 0; k < AutoCompleteDict.length; k++) {
                                                                                                                                                                if (AutoCompleteDict[k].key == '@AttrD.sFKBOName') {
                                                                                                                                                                    autoDict = AutoCompleteDict[k].value;
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        var sResValue = Object.keys(autoDict).filter(function (key) { return autoDict[key] === '@items.sValue' })[0];
                                                                                                                                                        $("#DDLShow-@AttrName@NewsGUID").val(sResValue);
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            });
                                                                                                                                            $(document.body).on('change', '#DDLShow-@AttrName@NewsGUID', function () {
                                                                                                                                                var sResult = 0;
                                                                                                                                                if ('@AttrD.iOneClickID' > 0) {
                                                                                                                                                    for (var k = 0; k < AutoCompleteDict.length; k++) {
                                                                                                                                                        if (AutoCompleteDict[k].key == '@AttrD.iOneClickID') {
                                                                                                                                                            sResult = AutoCompleteDict[k].value;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                else if ('@AttrD.sFKBOName' != "") {
                                                                                                                                                    for (var k = 0; k < AutoCompleteDict.length; k++) {
                                                                                                                                                        if (AutoCompleteDict[k].key == '@AttrD.sFKBOName') {
                                                                                                                                                            sResult = AutoCompleteDict[k].value;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }

                                                                                                                                                @*@Html.Raw(Json.Encode(FieldOrigin.FieldDDL.Where(m=>!string.IsNullOrEmpty(m.Expression)).GroupBy(m=>m.Expression).Select(m=>m.FirstOrDefault()).ToDictionary(m=>m.Expression, m=>m.text)));*@
                                                                                                                                                var txtValue = $(this).val();
                                                                                                                                                $("#DDL-@AttrName@NewsGUID").val("");
                                                                                                                                                if (typeof txtValue !== 'undefined' && txtValue != '') {
                                                                                                                                                    var sValue = sResult[$(this).val()];
                                                                                                                                                    if (typeof sValue !== 'undefined' && sValue != '') {
                                                                                                                                                        $("#DDL-@AttrName@NewsGUID").val(sValue);
                                                                                                                                                        $("#DDL-@AttrName@NewsGUID").attr("data-IsValid", true);
                                                                                                                                                        $("span.@NewsGUID-@sBOName-@AttrName").closest('.highlight--help').removeClass('msg-error');
                                                                                                                                                        $("span.@NewsGUID-@sBOName-@AttrName").html("");
                                                                                                                                                    }
                                                                                                                                                    else {
                                                                                                                                                        // $(this).val('');
                                                                                                                                                        $("#DDL-@AttrName@NewsGUID").attr("data-IsValid", false);
                                                                                                                                                        $("span.@NewsGUID-@sBOName-@AttrName").closest('.highlight--help').addClass('msg-error');
                                                                                                                                                        $("span.@NewsGUID-@sBOName-@AttrName").html("Please select " + '@AttrD.LabelName');
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            });
                                                                                                                                            $("#DDLShow-@AttrName@NewsGUID").autocomplete({
                                                                                                                                                source: function (request, response) {
                                                                                                                                                    var DOptionsList = 0;

                                                                                                                                                    if ('@AttrD.iOneClickID' > 0) {
                                                                                                                                                        for (var k = 0; k < AutoCompleteDict.length; k++) {
                                                                                                                                                            if (AutoCompleteDict[k].key == '@AttrD.iOneClickID') {
                                                                                                                                                                DOptionsList = AutoCompleteDict[k].value;
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                    else if ('@AttrD.sFKBOName' != "") {
                                                                                                                                                        for (var k = 0; k < AutoCompleteDict.length; k++) {
                                                                                                                                                            if (AutoCompleteDict[k].key == '@AttrD.sFKBOName') {
                                                                                                                                                                DOptionsList = AutoCompleteDict[k].value;
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }

                                                                                                                                                    @*@Html.Raw(Json.Encode(FieldOrigin.FieldDDL.Where(m=>!string.IsNullOrEmpty(m.Expression)).GroupBy(m=>m.Expression).Select(m=>m.FirstOrDefault()).ToDictionary(m=>m.Expression, m=>m.text)));*@
                                                                                                                                                    $("#DDL-@AttrName@NewsGUID").val("");
                                                                                                                                                    var List = [];
                                                                                                                                                    //for(var i = 0;i < DOptionsList.length; i++){
                                                                                                                                                    //    List.push({label:DOptionsList[i].Expression, value:DOptionsList[i].text});
                                                                                                                                                    //}
                                                                                                                                                    $.each(DOptionsList, function (key, value) {
                                                                                                                                                        List.push({ label: key, value: value });
                                                                                                                                                    });
                                                                                                                                                    response($.ui.autocomplete.filter(List, request.term));
                                                                                                                                                },
                                                                                                                                                select: function (event, ui) {
                                                                                                                                                    $("#DDLShow-@AttrName@NewsGUID").val(ui.item.label);
                                                                                                                                                    $("#DDL-@AttrName@NewsGUID").val(ui.item.value);
                                                                                                                                                    return false;
                                                                                                                                                },
                                                                                                                                                focus: function (event, ui) {
                                                                                                                                                    $("#DDLShow-@AttrName@NewsGUID").val(ui.item.label);
                                                                                                                                                    $("#DDL-@AttrName@NewsGUID").val(ui.item.value);
                                                                                                                                                    return false;
                                                                                                                                                }
                                                                                                                                            });
                                                            </script>
                                                            }
                                                            else if (AttrD.sFKBOSize == "30")
                                                            {
                                                            items.BOD = oBOD;
                                                            <input type="text" class="form-control autocomplete" value="@items.sResolvedValue" placeholder="Type Here" id="DDL-@AttrName@NewsGUID" data-value="0" onkeyup="fncgetautocomplete('@AttrD.iOneClickID', this, event)" data-sPreviousValue="@items.sPreviousValue" />
                                                            <input id="DDL-@AttrName@NewsGUID" type="hidden" name="@AttrName" value="@items.sResolvedValue" />
                                                            }
                                                            @*else
                                                            {
                                                            <span>@items.sValue</span>
                                                            }*@
                                                            @if (string.IsNullOrEmpty(sShowFK) || (sShowFK != null && sShowFK.ToLower() == "yes"))
                                                            {
                                                            <div class="helptext-btn-group">
                                                                <a href="#" class="btn btn-theme GetQuickView" data-instanceid="@items.sValue" data-columnname="@Label">
                                                                    <i class="far fa-eye" aria-hidden="true"></i>
                                                                </a>
                                                                @if (AttrD.iDefaultPopupID > 0)
                                                                {
                                                                <a onclick="fncLoadDefaultFKPopup(this, '@AttrD.iDefaultPopupID', '@items.sValue', '@AttrD.sFKBOName', '@AttrD.Name')" class="btn btn-theme btn-xs">
                                                                    <i class="far fa-window-restore" aria-hidden="true"></i>
                                                                </a>
                                                                @*<a onclick="fncXILinkLoad('@AttrD.iDefaultPopupID', '@items.sValue', '@AttrD.sFKBOName', '@AttrD.Name')" class="btn btn-theme">
                                                                    <i class="far fa-window-restore" aria-hidden="true"></i>
                                                                </a>*@
                                                                }
                                                                else
                                                                {
                                                                <a class="btn btn-theme" onclick="fncLoadDefaultFKPopup(this, '@AttrD.sFKBOName')">
                                                                    <i class="far fa-window-restore" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                @if (AttrD.bTrack)
                                                                {
                                                                <a href="#" class="btn btn-theme AttrTrack" data-boiid="@sInstanceID" data-attrid="@AttrD.ID" data-bodid="@oBOD.BOID" data-columnname="@Label">
                                                                    <i class="fa fa-bars" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme" data-toggle="tooltip" title="Info">
                                                                    <i class="fa fa-info-circle" tabindex="0" role="button"></i>
                                                                </button>
                                                            </div>
                                                            }

                                                        </div>

                                                        }
                                                        else if (AttrD.FKiFileTypeID > 0 && AttrD.FKiType == 0)
                                                        {
                                                        <div class="form-input">
                                                            <div class="field-errmsg fc-red">
                                                                <span class="@NewsGUID-@sBOIdentity-@AttrName"></span>
                                                            </div>
                                                            @{var sParentID = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == "sparentid").Select(m => m.sValue).FirstOrDefault();
                                                            var iBuildingID = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == "ibuildingid").Select(m => m.sValue).FirstOrDefault();
                                                            var sFolderName = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == "sfoldername").Select(m => m.sValue).FirstOrDefault();
                                                            if (!string.IsNullOrEmpty(sFolderName)) { sFolderName = sFolderName.Replace(@"\", "$"); }
                                                            var sFolderTreeGUID = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == "sFolderTreeGUID".ToLower()).Select(m => m.sValue).FirstOrDefault();
                                                            var iDocID = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == "iDocID".ToLower()).Select(m => m.sValue).FirstOrDefault();
                                                            }
                                                            <input type="file" class="UploadImage" name="UploadImage" id="UploadImage-@sInstanceID" multiple onchange="UploadFile('@AttrName',@oBOI.BOD.Attributes.Values.Where(m => m.Name == AttrName).Select(m => m.ID).FirstOrDefault(),this,'@sFileAliasName','@sParentID','@iBuildingID','@sFolderName','@sFolderTreeGUID', '@iDocID')" />
                                                            @if (oBOI.Attributes.Values.Where(m => m.sName.ToLower() == AttrName.ToLower()).Select(m => m.ImagePathDetails).Count() == 0)
                                                            {
                                                            <input class="IconDisplay" type="hidden" name="@AttrName" id="ImageID-@sInstanceID" value="0" />
                                                            }
                                                            else
                                                            {
                                                            <input type="hidden" name="@AttrName" id="ImageID-@sInstanceID" value="@items.sValue" />
                                                            }
                                                            <div class=form-group id="dvPreview-@sInstanceID">

                                                            </div>
                                                            @if (oBOI.BOD.Attributes.Values.Where(m => m.LabelName.ToLower() == AttrName.ToLower() || m.Name.ToLower() == AttrName.ToLower()).Select(m => m.FKiFileTypeID).FirstOrDefault() == 3)
                                                            {
                                                            var Files = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == AttrName.ToLower()).Select(m => m.ImagePathDetails);
                                                            foreach (var File in Files)
                                                            {
                                                            foreach (var item in File)
                                                            {
                                                            <div class=form-group id="dvImage_@item.ID">
                                                                @if (item != null)
                                                                {
                                                                var qs = HttpUtility.ParseQueryString("");
                                                                if (!string.IsNullOrEmpty(item.sGUID))
                                                                {
                                                                qs.Add("sGUID", item.sGUID);
                                                                }
                                                                else
                                                                {
                                                                qs.Add("sID", item.ID.ToString());
                                                                }
                                                                @*<a href="@PhysicalPath\@item.Expression" class="btn btn-sm btn-theme lbluebtn" target="_blank" type='application/pdf'>View</a>*@
                                                                <a href="@Url.Action(" GetFileFromDisk", "xilink" )?@qs" target="_blank" type='application/pdf'>@item.text</a>
                                                                @*<span>@item.text</span>*@
                                                                <div class=form-group id="dvImagePreview">
                                                                    <img src="@PhysicalPath\@item.Expression" />
                                                                    <a href="@Url.Action(" GetFileFromDisk", "xilink" )?@qs" target="_blank" type='application/pdf' onclick="window.open(this.href);return false;"><input type="button" value="View" name="View" /></a>
                                                                    <input type="button" value="Remove" id="RemoveImage-@sInstanceID" name="Remove" onclick="removeFile('@AttrName',@oBOI.BOD.Attributes.Values.Where(m => m.Name == items.sName).Select(m => m.ID).FirstOrDefault(),this,'@sFileAliasName','@item.ID')" />

                                                                </div>
                                                                }
                                                            </div>
                                                            }
                                                            }
                                                            }
                                                            else
                                                            {
                                                            if (oBOI.BOD.Attributes.Values.Where(m => m.LabelName.ToLower() == items.sName.ToLower() || m.Name.ToLower() == items.sName.ToLower()).Select(m => m.FKiFileTypeID).FirstOrDefault() == 2)
                                                            {
                                                            var Images = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == items.sName.ToLower()).Select(m => m.ImagePathDetails);
                                                            foreach (var img in Images)
                                                            {
                                                            foreach (var item in img)
                                                            {
                                                            <a href="@PhysicalPath\@item.Expression" target="_blank">@item.Expression</a>
                                                            }
                                                            }
                                                            }
                                                            else if (oBOI.Attributes.Values.Where(m => m.sName.ToLower() == items.sName.ToLower()).Select(m => m.ImagePathDetails).Count() > 0)
                                                            {
                                                            var Images = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == items.sName.ToLower()).Select(m => m.ImagePathDetails);
                                                            foreach (var img in Images)
                                                            {
                                                            foreach (var item in img)
                                                            {
                                                            <img src="@item.Expression" width="50" height="50" />
                                                            }
                                                            }
                                                            }
                                                            }

                                                            <div class="helptext-btn-group">
                                                                @if (AttrD.bTrack)
                                                                {
                                                                <a href="#" class="btn btn-theme AttrTrack" data-boiid="@sInstanceID" data-attrid="@AttrD.ID" data-bodid="@oBOD.BOID" data-columnname="@Label">
                                                                    <i class="fa fa-bars" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme" data-toggle="tooltip" title="Info">
                                                                    <i class="fa fa-info-circle" tabindex="0" role="button"></i>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        }
                                                        else if (AttrD.TypeID == 150 || AttrD.TypeID == 110)
                                                        {
                                                        items.BOD = oBOD;
                                                        AttrD.sMaxDate = AttrD.sMaxResolvedValue;
                                                        AttrD.sMinDate = AttrD.sMinResolvedValue;

                                                        <div class="form-input">
                                                            <div class="field-errmsg fc-red">

                                                                <span class="@NewsGUID-@sBOIdentity-@AttrName"></span>
                                                            </div>
                                                            @if ((items.sValue == "1/1/1900 12:00:00 AM") || (items.sValue == "1/1/0001 12:00:00 AM") || (items.sValue == "01-Jan-1900") || (items.sValue == "01-01-1900 00:00:00") || (items.sValue == "01/01/1900 00:00:00"))
                                                            {
                                                            @Html.TextBoxFor(m => items.sResolvedValue, new { @Name = AttrName, @Value = "", @class = "form-control DatePic DatePicker_Txt_" + @NewsGUID + "-" + @AttrD.ID + "", @id = @AttrName + @sBOUID + "_" + @NewsGUID, @Placeholder = AttrD.sPlaceHolder, @readonly = "readonly", @data_sPreviousValue = items.sPreviousValue })
                                                            }
                                                            else if (!string.IsNullOrEmpty(items.sDefaultDate))
                                                            {
                                                            @Html.TextBoxFor(m => items.sResolvedValue, new { @Name = AttrName, @value = items.sValue, @class = "form-control DatePic DatePicker_Txt_" + @NewsGUID + "-" + @AttrD.ID + "", @id = @AttrName + @sBOUID + "_" + @NewsGUID, @Placeholder = AttrD.sPlaceHolder, @readonly = "readonly", @data_sPreviousValue = items.sPreviousValue })
                                                            }
                                                            else
                                                            {
                                                            @Html.TextBoxFor(m => items.sResolvedValue, new { @Name = AttrName, @class = "form-control DatePic DatePicker_Txt_" + @NewsGUID + "-" + @AttrD.ID + "", @id = @AttrName + @sBOUID + "_" + @NewsGUID, @Placeholder = AttrD.sPlaceHolder, @readonly = "readonly", @data_sPreviousValue = items.sPreviousValue })
                                                            }
                                                            <div class="helptext-btn-group">
                                                                @if (AttrD.bTrack)
                                                                {
                                                                <a href="#" class="btn btn-theme AttrTrack" data-boiid="@sInstanceID" data-attrid="@AttrD.ID" data-bodid="@oBOD.BOID" data-columnname="@Label">
                                                                    <i class="fa fa-bars" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme" data-toggle="tooltip" title="Info">
                                                                    <i class="fa fa-info-circle" tabindex="0" role="button"></i>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        <script type="text/javascript">
                                                                                                                                                        $(document).ready(function () {
                                                                                                                                                            var dates = '@items.sValue';
                                                                                                                                                            var format = '@AttrD.Format';
                                                                                                                                                            $('.DatePicker_Txt_@NewsGUID-@AttrD.ID').datepicker({
                                                                                                                                                                changeMonth: true,
                                                                                                                                                                changeYear: true,
                                                                                                                                                                inline: true,
                                                                                                                                                                yearRange: '1920:2030',
                                                                                                                                                                dateFormat: 'dd-M-yy',
                                                                                                                                                                minDate: new Date('@AttrD.sMinResolvedValue'),
                                                                                                                                                                maxDate: new Date('@AttrD.sMaxResolvedValue'),
                                                                                                                                                                //maxDate:'+1m +10d',
                                                                                                                                                                //minDate: -10
                                                                                                                                                                @*beforeShow: function (input) {
                                                                                                                    setTimeout(function () {
                                                                                                                        var headerPane = $(input)
                                                                                                                            .datepicker("widget")
                                                                                                                            .find(".ui-datepicker-header");

                                                                                                                        $("<button>", {
                                                                                                                            text: "x",
                                                                                                                            click: function () {
                                                                                                                                $('.DatePicker_Txt_@NewsGUID-@AttrD.ID').datepicker("hide");
                                                                                                                                $('.DatePicker_Txt_@NewsGUID-@AttrD.ID').val('');
                                                                                                                            }
                                                                                                                        }).appendTo(headerPane);
                                                                                                                    }, 1);
                                                                                                                }*@
                                                                                                                                                                showButtonPanel: true,
                                                                                                                                                                closeText: 'Clear',
                                                                                                                                                                onClose: function (dateText, inst) {
                                                                                                                                                                    if ($(window.event.srcElement).hasClass('ui-datepicker-close')) {
                                                                                                                                                                        $('.DatePicker_Txt_@NewsGUID-@AttrD.ID').datepicker("hide");
                                                                                                                                                                        $('.DatePicker_Txt_@NewsGUID-@AttrD.ID').val('');
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                            });
                                                                                                                                                            if ('@sBOName.ToLower()' == "claim_t" || '@sBOName.ToLower()' == "conviction_t") {
                                                                                                                                                                $('.DatePicker_Txt_@NewsGUID-@AttrD.ID').one('focus', function () {
                                                                                                                                                                    $('.DatePicker_Txt_@NewsGUID-@AttrD.ID').datepicker('option', 'minDate', new Date('@AttrD.sMinResolvedValue'));
                                                                                                                                                                    $('.DatePicker_Txt_@NewsGUID-@AttrD.ID').datepicker('option', 'maxDate', new Date('@AttrD.sMaxResolvedValue'));
                                                                                                                                                                    $('.DatePicker_Txt_@NewsGUID-@AttrD.ID').datepicker("show");
                                                                                                                                                                });
                                                                                                                                                            }
                                                                                                                                                        });
                                                        </script>
                                                        }
                                                        else if (AttrD.TypeID == 230)
                                                        {
                                                        <div class="form-input">
                                                            <div class="field-errmsg fc-red">
                                                                <span class="@NewsGUID-@sBOIdentity-@AttrName"></span>
                                                            </div>
                                                            @Html.PasswordFor(m => items.sValue, new { @Name = AttrName, @class = "form-control", @Placeholder = AttrD.sPlaceHolder, @id = AttrName })
                                                            <div class="helptext-btn-group">
                                                                @if (AttrD.bTrack)
                                                                {
                                                                <a href="#" class="btn btn-theme AttrTrack" data-boiid="@sInstanceID" data-attrid="@AttrD.ID" data-bodid="@oBOD.BOID" data-columnname="@Label">
                                                                    <i class="fa fa-bars" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme" data-toggle="tooltip" title="Info">
                                                                    <i class="fa fa-info-circle" tabindex="0" role="button"></i>
                                                                </button>
                                                            </div>
                                                        </div>

                                                        }
                                                        else if (AttrD.TypeID == 240)
                                                        {
                                                        <div class="form-input">
                                                            <div class="field-errmsg fc-red">
                                                                <span class="@NewsGUID-@sBOIdentity-@AttrName"></span>
                                                            </div>
                                                            @Html.TextBoxFor(m => items.sValue, new { @Name = AttrName, @class = "form-control", @Placeholder = AttrD.sPlaceHolder, @id = AttrName, @data_sPreviousValue = items.sPreviousValue })
                                                            <div class="helptext-btn-group">
                                                                @if (AttrD.bTrack)
                                                                {
                                                                <a href="#" class="btn btn-theme AttrTrack" data-boiid="@sInstanceID" data-attrid="@AttrD.ID" data-bodid="@oBOD.BOID" data-columnname="@Label">
                                                                    <i class="fas fa-bars" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                <a class="btn btn-theme" onclick="fncXIScriptEditor(this, '@items.sName', '@AttrD.BOID', '@AttrD.ID', '@sBOName', '@AttrD.LabelName')">
                                                                    <i class="fas fa-file-code" aria-hidden="true"></i>
                                                                </a>
                                                                <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme" data-toggle="tooltip" title="Info">
                                                                    <i class="fas fa-info-circle" tabindex="0" role="button"></i>
                                                                </button>
                                                            </div>
                                                        </div>

                                                        }
                                                        else if (AttrD.TypeID == 20)
                                                        {
                                                        var sDefaultValue1 = AttrD.DefaultValue;
                                                        <div class="form-input">
                                                            <div class="field-errmsg fc-red">
                                                                <span class="@NewsGUID-@sBOIdentity-@AttrName"></span>
                                                            </div>
                                                            @if (items.sValue == "False" || string.IsNullOrEmpty(items.sValue) || (!string.IsNullOrEmpty(sDefaultValue1) && sDefaultValue1.Substring(1, AttrD.DefaultValue.Length - 1) == "false"))
                                                            {

                                                            <label class="label-wrapper">
                                                                <input type="checkbox" class="CheckboxClass" data-attrname="@AttrName" />
                                                                <i class="check"></i>
                                                            </label>
                                                            }
                                                            else
                                                            {
                                                            <label class="label-wrapper">
                                                                <input type="checkbox" class="CheckboxClass" data-attrname="@AttrName" checked />
                                                                <i class="check"></i>
                                                            </label>
                                                            }
                                                            @if (string.IsNullOrEmpty(items.sValue) && !string.IsNullOrEmpty(sDefaultValue1))
                                                            {
                                                            sDefaultValue1 = sDefaultValue1.Substring(1, AttrD.DefaultValue.Length - 1);
                                                            items.sValue = sDefaultValue1;
                                                            }
                                                            <input type="hidden" name="@AttrName" id="Checkbox-@AttrName" value="@items.sValue" data-spreviousvalue="@items.sValue" />
                                                            @*//<input type="hidden" name="@AttrName" id="Checkbox-@AttrName" />*@
                                                            <div class="helptext-btn-group">
                                                                @if (AttrD.bTrack)
                                                                {
                                                                <a href="#" class="btn btn-theme AttrTrack" data-boiid="@sInstanceID" data-attrid="@AttrD.ID" data-bodid="@oBOD.BOID" data-columnname="@Label">
                                                                    <i class="fas fa-bars" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme" data-toggle="tooltip" title="Info">
                                                                    <i class="fas fa-info-circle" tabindex="0" role="button"></i>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        }
                                                        else if (AttrD.TypeID == 260)
                                                        {
                                                        <div class="form-input">
                                                            <div class="field-errmsg fc-red">
                                                                <span class="@NewsGUID-@sBOIdentity-@AttrName"></span>
                                                            </div>
                                                            @Html.TextBoxFor(m => items.sValue, new { @Name = AttrName, @class = "form-control", @Placeholder = AttrD.sPlaceHolder, @id = AttrName, @onkeyup = "fncLoadPostCode(this, '" + NewsGUID + "','','form')", @data_sPreviousValue = items.sPreviousValue })
                                                            <div class="addresses" style="display:none;"></div>
                                                            <div class="helptext-btn-group">
                                                                @if (AttrD.bTrack)
                                                                {
                                                                <a href="#" class="btn btn-theme AttrTrack" data-boiid="@sInstanceID" data-attrid="@AttrD.ID" data-bodid="@oBOD.BOID" data-columnname="@Label">
                                                                    <i class="fas fa-bars" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme" data-toggle="tooltip" title="Info">
                                                                    <i class="fas fa-info-circle" tabindex="0" role="button"></i>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        }
                                                        else
                                                        {
                                                        <div class="form-input">
                                                            <div class="field-errmsg fc-red">
                                                                <span class="@NewsGUID-@sBOIdentity-@AttrName"></span>
                                                            </div>
                                                            @if (AttrD.IsTextArea == true)
                                                            {
                                                            if (AttrD.bIsScript)
                                                            {
                                                            @Html.TextAreaFor(m => items.sValue, new { @Name = AttrName, @rows = 5, @cols = 40, @class = "form-control", })
                                                            if (iType == "30")
                                                            {
                                                            <a onclick="fncScriptEdit('@AttrD.iDefaultPopupID','@sInstanceID', '@items.sName', '@sBOName')" id="ScriptIcon" class="btn btn-theme btn-xs ScriptIcon">
                                                                <i class="far fa-window-restore" aria-hidden="true"></i>
                                                            </a>
                                                            }
                                                            else
                                                            {
                                                            <a onclick="fncScriptEdit('@AttrD.iDefaultPopupID','@sInstanceID', '@items.sName', '@sBOName')" id="ScriptIcon" class="btn btn-theme btn-xs ScriptIcon" style="visibility: hidden">
                                                                <i class="far fa-window-restore" aria-hidden="true"></i>
                                                            </a>
                                                            }
                                                            }
                                                            else
                                                            {
                                                            @Html.TextAreaFor(m => items.sValue, new { @Name = AttrName, @rows = 5, @cols = 40, @class = "form-control", })
                                                            }
                                                            }
                                                            else
                                                            {
                                                            string sDependentFlds = string.Empty;
                                                            string sMergeFlds = string.Empty;
                                                            if (AttrD.bIsFieldMerge)
                                                            {
                                                            var oMergeAttrD = oBOI.BOD.Attributes.Values.Where(m => m.ID == AttrD.iMergeFieldID).FirstOrDefault();
                                                            if (oMergeAttrD != null)
                                                            {
                                                            sMergeFlds = sMergeFlds + AttrName + ",";
                                                            var sMerField = oMergeAttrD.Name;
                                                            if (bUIDRef)
                                                            {
                                                            sMerField = oMergeAttrD.XIGUID.ToString();
                                                            }
                                                            sMergeFlds = sMergeFlds + sMerField + ",";
                                                            @Html.TextBoxFor(m => items.sValue, new { @Name = AttrName, @class = "form-control", @Placeholder = AttrD.sPlaceHolder, @style = "width:60px;", @id = AttrName, @data_sPreviousValue = items.sPreviousValue })
                                                            <input type="hidden" name="@AttrName" id="hidden-@AttrName" disabled /><span>/</span>
                                                            var oMergeAttrI = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == oMergeAttrD.Name.ToLower()).FirstOrDefault();
                                                            @Html.TextBoxFor(m => oMergeAttrI.sValue, new { @Name = sMerField, @class = "form-control", @Placeholder = oMergeAttrD.sPlaceHolder, @style = "width:80px;", @id = AttrName, @data_sPreviousValue = items.sPreviousValue })
                                                            <input type="hidden" name="@sMerField" id="hidden-@sMerField" disabled />
                                                            }
                                                            }
                                                            if (AttrD.bIsFieldDependent)
                                                            {
                                                            var oDependentAttrD = oBOI.BOD.Attributes.Values.Where(m => m.ID == AttrD.iDependentFieldID).FirstOrDefault();
                                                            var oDependentAttrI = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == oDependentAttrD.Name.ToLower()).FirstOrDefault();
                                                            {
                                                            sDependentFlds = @oDependentAttrD.Name;
                                                            }
                                                            <span> or </span>
                                                            if (oDependentAttrD != null)
                                                            {
                                                            var sDepField = oDependentAttrD.Name;
                                                            if (bUIDRef)
                                                            {
                                                            sDepField = oDependentAttrD.XIGUID.ToString();
                                                            }
                                                            if (oDependentAttrI != null && (oDependentAttrI.sValue == "False" || string.IsNullOrEmpty(oDependentAttrI.sValue)))
                                                            {
                                                            <label class="label-wrapper" style="display:inline-block">
                                                                <input type="checkbox" class="CheckboxClass" data-attrname="@sDepField" data-merge="@sMergeFlds" />
                                                                <span class="check"></span> @oDependentAttrD.LabelName
                                                            </label>
                                                            }
                                                            else
                                                            {
                                                            <label class="label-wrapper" style="display:inline-block">
                                                                <input type="checkbox" class="CheckboxClass" data-attrname="@sDepField" data-merge="@sMergeFlds" checked />
                                                                <span class="check"></span> @oDependentAttrD.LabelName
                                                            </label>
                                                            }
                                                            <input type="hidden" name="@sDepField" id="Checkbox-@sDepField" value="@oDependentAttrI.sValue" />
                                                            }
                                                            }
                                                            else
                                                            {
                                                            if (AttrD.TypeID == 90 && items.sValue == "0")
                                                            {
                                                            @Html.TextBoxFor(m => items.sValue, new { @Name = AttrName, @Value = "0.00", @class = "form-control", @Placeholder = AttrD.sPlaceHolder, @id = AttrName, @data_sPreviousValue = items.sPreviousValue })
                                                            }
                                                            else if (sBOName == "XIUserSetting" && AttrD.TypeID == 0)
                                                            {
                                                            <input class="cursor-pointer h-10 outline-none rounded-full w-10 input-color-picker" type="color" data-id="bg-color" name="@AttrName">
                                                            }
                                                            else
                                                            {
                                                            if (AttrD.bIsScript)
                                                            {
                                                            @Html.TextBoxFor(m => items.sValue, new { @Name = AttrName, @class = "form-control", @Placeholder = AttrD.sPlaceHolder, @id = AttrName, @data_sPreviousValue = items.sPreviousValue })
                                                            if (iType == "30")
                                                            {
                                                            <a onclick="fncScriptEdit('@AttrD.iDefaultPopupID','@sInstanceID', '@items.sName', '@sBOName')" class="btn btn-theme btn-xs">
                                                                <i class="far fa-window-restore" aria-hidden="true"></i>
                                                            </a>
                                                            }
                                                            }
                                                            else
                                                            {
                                                            @Html.TextBoxFor(m => items.sValue, new { @Name = AttrName, @class = "form-control", @Placeholder = AttrD.sPlaceHolder, @id = AttrName, @data_sPreviousValue = items.sPreviousValue })
                                                            }
                                                            }
                                                            }
                                                            }
                                                            <div class="helptext-btn-group">
                                                                @if (AttrD.bTrack)
                                                                {
                                                                <a href="#" class="btn btn-theme AttrTrack" data-boiid="@sInstanceID" data-attrid="@AttrD.ID" data-bodid="@oBOD.BOID" data-columnname="@Label">
                                                                    <i class="fa fa-bars" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme" data-toggle="tooltip" title="Info">
                                                                    <i class="fa fa-info-circle" tabindex="0" role="button"></i>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        }
                                                        }
                                                        else if (items.sName.ToLower() == "xiguid")
                                                        {
                                                        <div class="form-input">
                                                            <div class="field-errmsg fc-red">
                                                                <span class="@NewsGUID-@sBOIdentity-@AttrName"></span>
                                                            </div>
                                                            <span class="no-border bc-disable form-control" readonly="readonly">@items.sValue</span>
                                                            <input type="hidden" name="@AttrName.ToLower()" value="@items.sValue" />
                                                        </div>
                                                        }
                                                        else if (items.sName.ToLower() == sPrimaryKey.ToLower())
                                                        {
                                                        <div class="form-input">
                                                            <div class="field-errmsg fc-red">
                                                                <span class="@NewsGUID-@sBOIdentity-@AttrName"></span>
                                                            </div>
                                                            <span class="no-border bc-disable form-control" readonly="readonly">@items.sValue</span>
                                                            <input type="hidden" name="@sID.ToLower()" value="@iID" />
                                                        </div>
                                                        }
                                                        else
                                                        {
                                                        if (AttrD.FKiType > 0)
                                                        {
                                                        <div class="form-input">
                                                            @if (AttrD.sFKBOSize == "10")
                                                            {
                                                            {
                                                            var OptValue = oBOI.Attributes.Values.Where(m => m.sName == items.sName).Select(s => s.sValue).FirstOrDefault();
                                                            if (AttrD.FieldDDL != null && AttrD.FieldDDL.Count() > 0)
                                                            {
                                                            var sSelectedValue = string.Empty;
                                                            if (string.IsNullOrEmpty(OptValue))
                                                            {
                                                            var sDefaultValue = AttrD.DefaultValue;
                                                            if (!string.IsNullOrEmpty(sDefaultValue))
                                                            {
                                                            sSelectedValue = AttrD.FieldDDL.Where(x => x.text == sDefaultValue).Select(x => x.Expression).FirstOrDefault();
                                                            }
                                                            }
                                                            else
                                                            {
                                                            sSelectedValue = AttrD.FieldDDL.Where(x => x.text == OptValue).Select(x => x.Expression).FirstOrDefault();
                                                            }
                                                            <input type="hidden" name="@AttrName" value="@items.sValue" class="no-border bc-disable form-control" />
                                                            <span class="no-border bc-disable form-control" readonly="readonly">@sSelectedValue</span>
                                                            }
                                                            }
                                                            }
                                                            else if (AttrD.sFKBOSize == "20" || AttrD.sFKBOSize == "30")
                                                            {
                                                            items.BOD = oBOD;
                                                            <input type="hidden" name="@AttrName" value="@items.sValue" class="no-border bc-disable form-control" />
                                                            <span class="no-border bc-disable form-control" readonly="readonly">@items.sResolvedValue</span>
                                                            }

                                                            @if (string.IsNullOrEmpty(sShowFK) || (sShowFK != null && sShowFK.ToLower() == "yes"))
                                                            {
                                                            <div class="helptext-btn-group">
                                                                <a href="#" class="btn btn-theme GetQuickView" style="" data-columnname="@Label" data-instanceid="@items.sValue">
                                                                    @*onmouseover="fncToolTip('@iBODID', this)"*@
                                                                    <i class="far fa-eye" aria-hidden="true" data-original-title="" title=""></i>
                                                                </a>
                                                                <a onclick="fncXILinkLoad('@AttrD.iDefaultPopupID', '@items.sValue', '@AttrD.sFKBOName', '@AttrD.Name')" class="btn btn-theme">
                                                                    <i class="far fa-window-restore" aria-hidden="true"></i>
                                                                </a>
                                                                @*<a onclick="XIRun('@AttrD.iDefaultPopupID', '@items.sValue', '@ViewBag.sGUID', '@AttrD.sFKBOName', false, 0, 0)" class="btn btn-theme">

                                                                    <i class="far fa-window-restore" aria-hidden="true"></i>
                                                                </a>*@
                                                                @if (AttrD.bTrack)
                                                                {
                                                                <a href="#" class="btn btn-theme AttrTrack" data-boiid="@sInstanceID" data-attrid="@AttrD.ID" data-bodid="@oBOD.BOID" data-columnname="@Label">
                                                                    <i class="fa fa-bars" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme" data-toggle="tooltip" title="Info">
                                                                    <i class="fa fa-info-circle" tabindex="0" role="button"></i>
                                                                </button>
                                                            </div>
                                                            }

                                                        </div>
                                                        }
                                                        else if (AttrD.IsOptionList)
                                                        {
                                                        var OptValue = items.sPreviousValue; /*oBOI.Attributes.Values.Where(m => m.sName == items.sName).Select(s => s.sValue).FirstOrDefault();*/
                                                        <div class="form-input">
                                                            <div class="select-wrapper">
                                                                @if (AttrD.OptionList != null)
                                                                {
                                                                var sSelectedValue = string.Empty;
                                                                if (string.IsNullOrEmpty(OptValue))
                                                                {
                                                                var sDefaultValue = AttrD.DefaultValue;
                                                                if (!string.IsNullOrEmpty(sDefaultValue))
                                                                {
                                                                //int iDefaultValue = Convert.ToInt32(sDefaultValue);
                                                                sSelectedValue = AttrD.OptionList.Where(x => x.sOptionName == sDefaultValue).Select(x => x.sOptionName).FirstOrDefault();
                                                                }
                                                                }
                                                                else
                                                                {
                                                                sSelectedValue = AttrD.OptionList.Where(x => x.sValues == OptValue).Select(x => x.sOptionName).FirstOrDefault();
                                                                }
                                                                if (!string.IsNullOrEmpty(AttrD.sCase))
                                                                {
                                                                if (AttrD.sCase.ToLower() == "lower")
                                                                {
                                                                sSelectedValue = sSelectedValue.ToLower();
                                                                }
                                                                else if (AttrD.sCase.ToLower() == "upper")
                                                                {
                                                                sSelectedValue = sSelectedValue.ToUpper();
                                                                }
                                                                }
                                                                <input type="hidden" name="@AttrName" value="@items.sValue" class="no-border bc-disable form-control" />
                                                                @*<input type="hidden" name="@AttrName" value="@items.sValue" class="no-border bc-disable form-control" />*@
                                                                <span class="form-control no-border bc-disable form-control" readonly="readonly">@sSelectedValue</span>
                                                                }
                                                                @*<span class="select_wrapper_caret glyphicon glyphicon-chevron-down"></span>*@
                                                            </div>
                                                            <div class="helptext-btn-group">
                                                                @if (AttrD.bTrack)
                                                                {
                                                                <a href="#" class="btn btn-theme AttrTrack" data-boiid="@sInstanceID" data-attrid="@AttrD.ID" data-bodid="@oBOD.BOID" data-columnname="@Label">
                                                                    <i class="fa fa-bars" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme" data-toggle="tooltip" title="Info">
                                                                    <i class="fa fa-info-circle" tabindex="0" role="button"></i>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        }
                                                        else if (AttrD.TypeID == 150 || AttrD.TypeID == 110)
                                                        {
                                                        items.BOD = oBOD;
                                                        <div class="form-input">
                                                            <div class="select-wrapper">
                                                                @if ((items.sValue == "1/1/1900 12:00:00 AM") || (items.sValue == "1/1/0001 12:00:00 AM") || (items.sValue == "01-Jan-1900") || (items.sValue == "01-01-1900 00:00:00") || (items.sValue == "01/01/1900 00:00:00"))
                                                                {
                                                                @Html.TextBoxFor(m => items.sResolvedValue, new { @Name = AttrName, @Value = "", @class = "form-control", @readonly = "readonly", @id = AttrName, @data_sPreviousValue = items.sPreviousValue })
                                                                }
                                                                else if (!string.IsNullOrEmpty(items.sDefaultDate))
                                                                {
                                                                @Html.TextBoxFor(m => items.sResolvedValue, new { @Name = AttrName, @value = items.sValue, @class = "form-control", @readonly = "readonly", @id = AttrName, @data_sPreviousValue = items.sPreviousValue })
                                                                }
                                                                else
                                                                {
                                                                @Html.TextBoxFor(m => items.sResolvedValue, new { @Name = AttrName, @class = "form-control", @readonly = "readonly", @id = AttrName, @data_sPreviousValue = items.sPreviousValue })
                                                                }
                                                            </div>
                                                            <div class="helptext-btn-group">
                                                                @if (AttrD.bTrack)
                                                                {
                                                                <a href="#" class="btn btn-theme AttrTrack" data-boiid="@sInstanceID" data-attrid="@AttrD.ID" data-bodid="@oBOD.BOID" data-columnname="@Label">
                                                                    <i class="fa fa-bars" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme" data-toggle="tooltip" title="Info">
                                                                    <i class="fa fa-info-circle" tabindex="0" role="button"></i>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        }
                                                        else if (AttrD.FKiFileTypeID > 0)
                                                        {
                                                        <div class="form-input">
                                                            @if (oBOI.BOD.Attributes.Values.Where(m => m.LabelName.ToLower() == items.sName.ToLower() || m.Name.ToLower() == items.sName.ToLower()).Select(m => m.FKiFileTypeID).FirstOrDefault() > 0)
                                                            {
                                                            var Images = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == items.sName.ToLower()).Select(m => m.ImagePathDetails);
                                                            foreach (var img in Images)
                                                            {
                                                            foreach (var item in img)
                                                            {
                                                            if (!string.IsNullOrEmpty(item.text) && item.text != "0")
                                                            {
                                                            <a href="@PhysicalPath\@item.Expression" target="_blank">@item.text</a>
                                                            <div class=form-group id="dvImagePreview">
                                                                @if (item != null)
                                                                {
                                                                <img src="@PhysicalPath\@item.Expression" />
                                                                }
                                                            </div>
                                                            }
                                                            }
                                                            }
                                                            }
                                                        </div>
                                                        }
                                                        else
                                                        {
                                                        items.BOD = oBOD;
                                                        string sMergeFlds = string.Empty;
                                                        string sDependentFlds = string.Empty;
                                                        <div class="form-input">
                                                            @if (AttrD.bIsFieldMerge)
                                                            {
                                                            var oMergeAttrD = oBOI.BOD.Attributes.Values.Where(m => m.ID == AttrD.iMergeFieldID).FirstOrDefault();
                                                            if (oMergeAttrD != null)
                                                            {

                                                            sMergeFlds = sMergeFlds + AttrName + ",";
                                                            sMergeFlds = sMergeFlds + oMergeAttrD.Name + ",";
                                                            @Html.TextBoxFor(m => items.sValue, new { @Name = AttrName, @class = "form-control", @Placeholder = AttrD.sPlaceHolder, @style = "width:60px;", @readonly = "readonly", @id = AttrName, @data_sPreviousValue = items.sPreviousValue })
                                                            <input type="hidden" name="@AttrName" id="hidden-@AttrName" disabled /><span>/</span>
                                                            var oMergeAttrI = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == oMergeAttrD.Name.ToLower()).FirstOrDefault();
                                                            @Html.TextBoxFor(m => oMergeAttrI.sValue, new { @Name = oMergeAttrD.Name, @class = "form-control", @Placeholder = oMergeAttrD.sPlaceHolder, @style = "width:80px;", @readonly = "readonly", @id = AttrName, @data_sPreviousValue = items.sPreviousValue })
                                                            <input type="hidden" name="@oMergeAttrD.Name" id="hidden-@oMergeAttrD.Name" disabled />
                                                            }
                                                            }
                                                            @if (AttrD.bIsFieldDependent)
                                                            {
                                                            var oDependentAttrD = oBOI.BOD.Attributes.Values.Where(m => m.ID == AttrD.iDependentFieldID).FirstOrDefault();
                                                            var oDependentAttrI = oBOI.Attributes.Values.Where(m => m.sName.ToLower() == oDependentAttrD.Name.ToLower()).FirstOrDefault();
                                                            {
                                                            sDependentFlds = @oDependentAttrD.Name;
                                                            }

                                                            if (oDependentAttrD != null && oDependentAttrI != null)
                                                            {
                                                            <span> or </span>
                                                            if (oDependentAttrI.sValue == "False" || string.IsNullOrEmpty(oDependentAttrI.sValue))
                                                            {
                                                            <label class="label-wrapper" style="display:inline-block">
                                                                <input type="checkbox" class="CheckboxClass" data-attrname="@oDependentAttrD.Name" data-merge="@sMergeFlds" disabled="disabled" />
                                                                <span class="check"></span> @oDependentAttrD.LabelName
                                                            </label>
                                                            }
                                                            else
                                                            {
                                                            <label class="label-wrapper" style="display:inline-block">
                                                                <input type="checkbox" class="CheckboxClass" data-attrname="@oDependentAttrD.Name" data-merge="@sMergeFlds" checked disabled="disabled" />
                                                                <span class="check"></span> @oDependentAttrD.LabelName
                                                            </label>
                                                            }
                                                            <input type="hidden" name="@oDependentAttrD.Name" id="Checkbox-@oDependentAttrD.Name" value="@oDependentAttrI.sValue" />
                                                            }
                                                            }
                                                            else
                                                            {
                                                            <div class="select-wrapper">
                                                                @if (!string.IsNullOrEmpty(items.sValue))
                                                                {
                                                                @Html.TextBoxFor(m => items.sValue, new { @Name = AttrName.ToLower(), @class = "no-border bc-disable form-control", @readonly = "readonly", @id = AttrName, @data_sPreviousValue = items.sPreviousValue })
                                                                }
                                                                else
                                                                {
                                                                @Html.TextBoxFor(m => items.sValue, new { @Name = AttrName.ToLower(), @class = "form-control", @id = AttrName, @data_sPreviousValue = items.sPreviousValue, @Placeholder = AttrD.sPlaceHolder })
                                                                }

                                                            </div>
                                                            }

                                                            @*<span class="form-control no-border bc-disable form-control" readonly="readonly">@items.sResolvedValue</span>*@
                                                            <div class="helptext-btn-group">
                                                                @if (AttrD.bTrack)
                                                                {
                                                                <a href="#" class="btn btn-theme AttrTrack" data-boiid="@sInstanceID" data-attrid="@AttrD.ID" data-bodid="@oBOD.BOID" data-columnname="@Label">
                                                                    <i class="fa fa-bars" aria-hidden="true"></i>
                                                                </a>
                                                                }
                                                                <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme" data-toggle="tooltip" title="Info">
                                                                    <i class="fa fa-info-circle" tabindex="0" role="button"></i>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        }
                                                        }
                                                        <div class="helptext">
                                                            <div class="helptext--desktop">
                                                                <div class="helptext__content">
                                                                    <a class="helptext-content-close"><i class="fas fa-times"></i></a>
                                                                    <p><strong>@Label</strong></p>
                                                                    @if (!string.IsNullOrEmpty(AttrD.sHelpText))
                                                                    {
                                                                    <p>@AttrD.sHelpText</p>
                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                }
                                                }
                                                <div class="wrap-width clearfix control-block tab-footer-form-btn">
                                                    <div class="footer-form-btn">
                                                        @if (sInstanceID != "" && sInstanceID != "0")
                                                        {
                                                        if (bISLetterGeneration.ToLower() == "yes")
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" onclick="PreviewTemplate(this, '@oBOI.BOD.Name')">Preview</button>
                                                        <button type="button" class="btn btn-theme btnQuote" onclick="SendTemplate(this, '@oBOI.BOD.Name')">Send</button>

                                                        }
                                                        if (sShowSaveButton.ToLower() == "yes" && sDisableSaveButton == "no" && IsAlert == "yes")
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" data-IsRefresh="@IsRefreshForm" onclick="Alert(@sInstanceID, '@oBOI.BOD.Name', this)"><i class="fa fa-edit"></i>@sSaveLableName</button>
                                                        }
                                                        else if (sShowSaveButton.ToLower() == "yes" && sDisableSaveButton == "no")
                                                        {
                                                        if (oBOI.BOD.Name == "Environment Template")
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" data-IsRefresh="@IsRefreshForm" onclick="DBSchemaCompare(this,'Schema',@sInstanceID,'@oBOI.BOD.Name')">SchemaCompare</button>
                                                        <button type="button" class="btn btn-theme btnQuote" data-IsRefresh="@IsRefreshForm" onclick="DBSchemaCompare(this,'Data',@sInstanceID)">DataCompare</button>
                                                        <button type="button" class="btn btn-theme btnQuote" data-IsRefresh="@IsRefreshForm" onclick="DBSchemaCompare(this,'Structure',@sInstanceID,'@oBOI.BOD.Name')">StructreCompare</button>
                                                        }
                                                        else
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" data-IsRefresh="@IsRefreshForm" onclick="SaveData(this, '@sBOName','@sShowSaveSections', '')"><i class="fa fa-edit"></i>@sSaveLableName</button>
                                                        }
                                                        }
                                                        else if (sShowSaveButton.ToLower() == "yes" && sDisableSaveButton == "yes")
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" data-IsRefresh="@IsRefreshForm" onclick="SaveData(this, '@sBOName','@sShowSaveSections', '')" disabled><i class="fa fa-plus"></i> @sSaveLableName</button>
                                                        }
                                                       if (sShowCopyButton.ToLower() == "yes")
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" onclick="Copy(@sInstanceID, '@oBOI.BOD.Name', this)"><i class="fa fa-copy"></i> Copy</button>
                                                        }
                                                        if (sShowDeleteButton == "yes" && sDisableDeleteButton == "no")
                                                        {
                                                        string dButtonID = "Delete_" + sBOName + "_" + iID;
                                                        <button type="button" class="DeleteBtn btn btn-theme btnQuote" id=@dButtonID onclick="DeleteBO('@iID','@sGUID', '@sBOName','form component',this)"><i class="fa fa-edit"></i> Remove</button>
                                                        }
                                                        else if (sShowDeleteButton.ToLower() == "yes" && sDisableDeleteButton == "yes")
                                                        {
                                                        string dButtonID = "Delete_" + sBOName + "_" + iID;
                                                        <button type="button" class="DeleteBtn btn btn-theme btnQuote" id=@dButtonID onclick="DeleteBO('@iID','@sGUID', '@sBOName','form component',this)" disabled><i class="fa fa-edit"></i> Remove</button>
                                                        }
                                                        @*<button type="button" class="delete_Inst btn btn-theme btnQuote"><i class="fa fa-remove"></i> Remove</button>*@
                                                        }
                                                        else
                                                        {
                                                        if (bISLetterGeneration.ToLower() == "yes")
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" onclick="PreviewTemplate(this, '@oBOI.BOD.Name')">Preview</button>
                                                        <button type="button" class="btn btn-theme btnQuote" onclick="SendTemplate(this, '@oBOI.BOD.Name')">Send</button>
                                                        }
                                                        if (sShowSaveButton.ToLower() == "yes" && sDisableSaveButton == "no")
                                                        {
                                                        //<button type="button" class="btn btn-theme btnQuote" data-IsRefresh="@IsRefreshForm" onclick="SaveData(this, '@sBOName','@sShowSaveSections', '@IsListAdd')"><i class="fa fa-plus"></i> @sSaveLableName</button>
                                                        if (oBOI.iBODID == 887)
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" data-IsRefresh="@IsRefreshForm" onclick="SearchData(this)">Search</button>
                                                        }

                                                        <button type="button" class="btn btn-theme btnQuote" data-IsRefresh="@IsRefreshForm" onclick="SaveData(this, '@oBOI.BOD.Name','@sShowSaveSections', '@IsListAdd')"><i class="fa fa-plus"></i> @sSaveLableName</button>

                                                        }
                                                        else if (sShowSaveButton.ToLower() == "yes" && sDisableSaveButton == "yes")
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" data-IsRefresh="@IsRefreshForm" onclick="SaveData(this, '@sBOName','@sShowSaveSections', '')" disabled><i class="fa fa-plus"></i> @sSaveLableName</button>
                                                        }
                                                        if (sShowDeleteButton == "yes")
                                                        {
                                                        string dButtonID = "Delete_" + sBOName + "_" + iID;
                                                        <button type="button" style="display:none;" class="DeleteBtn btn btn-theme btnQuote" id=@dButtonID onclick="DeleteBO('@iID','@sGUID', '@sBOName','form component',this)"><i class="fa fa-edit"></i> Remove</button>
                                                        }
                                                        @*<button type="button" class="delete_Inst btn btn-theme btnQuote"><i class="fa fa-remove"></i> Remove</button>*@
                                                        }
                                                        @if (sShowCancelButton == "yes")
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote decline DlgClose"><i class="fas fa-times"></i> Cancel</button>
                                                        }

                                                        @if (sShowButtons == "yes")
                                                        {
                                                        foreach (var btnNameValue in lButtonNames)
                                                        {
                                                        var isHidden = oVNVs.Where(x => x.sName.ToLower() == btnNameValue.text.ToLower()).Select(x => x.sValue).FirstOrDefault();
                                                        var isHiddenButton = string.Empty;
                                                        if (!string.IsNullOrEmpty(isHidden) && isHidden.ToLower() == "yes")
                                                        {
                                                        isHiddenButton = "disabled=" + "disabled";
                                                        }
                                                        if (btnNameValue.Type == "XIRun")
                                                        {
                                                        if (@Model.sGUID == null)
                                                        {
                                                        <button type="button" @isHiddenButton class="btn btn-theme" onclick="XIRun(this,'@btnNameValue.Value', 0, '@sGUID', '@sBOName', false, 0)">@btnNameValue.text</button>
                                                        }
                                                        else
                                                        {
                                                        <button type="button" @isHiddenButton class="btn btn-theme" onclick="XIRun(this,'@btnNameValue.Value', 0, '@Model.sGUID', '@sBOName', false, 0)">@btnNameValue.text</button>
                                                        }
                                                        }
                                                        else if (btnNameValue.Type == "XILinkLoadJson")
                                                        {
                                                        <button type="button" @isHiddenButton class="btn btn-theme" onclick="XILinkLoadJson('@btnNameValue.Value', '@sGUID', null)">@btnNameValue.text</button>
                                                        }
                                                        else if (btnNameValue.Type == "XIReset")
                                                        {
                                                        <button type="button" @isHiddenButton class="btn btn-theme" onclick="XICustomerReset(this, '@sGUID')">@btnNameValue.text</button>
                                                        }
                                                        else if (btnNameValue.Type == "ReloadQS")
                                                        {
                                                        <button type="button" @isHiddenButton class="btn btn-theme" onclick="XIRun(this,'@btnNameValue.Value', '@sInstanceID', '@Model.sGUID', null, false, 0)">Reload QS</button>
                                                        }
                                                        else if (btnNameValue.Type == "TraceBtn")
                                                        {
                                                        var attrName = btnNameValue.text.Split('-')[1];
                                                        var Btntext = btnNameValue.text.Split('-')[0];
                                                        <button type="button" class="btn btn-theme" onclick="TraceButton('@btnNameValue.ID', '@sInstanceID', '@Model.sGUID','@btnNameValue.Value','@attrName')">@Btntext</button>
                                                        }
                                                        }
                                                        }

                                                        @if (oBOI.Actions != null && oBOI.Actions.Count() > 0)
                                                        {
                                                        foreach (var items in oBOI.Actions)
                                                        {
                                                        var Action = (EnumBOActions)items.iType;
                                                        if (Action.ToString().ToLower() == XIConstant.Action_XI.ToLower() && items.iSystemAction == 10)
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" onclick="fncTriggerBOAction('@items.ID', 'StructureCopy', '0', '@sInstanceID', '@oBOI.BOD.BOID', '@sGUID')"><i class="fa fa-copy"></i> Copy</button>
                                                        }
                                                        else if (Action.ToString().ToLower() == XIConstant.Action_XI.ToLower() && items.iSystemAction == 20)
                                                        {
                                                        <button type="button" class="DeleteBtn btn btn-theme btnQuote" onclick="fncTriggerBOAction('@items.ID', 'XIDelete', '0', '@sInstanceID','@oBOI.BOD.BOID', '@sGUID')"><i class="fa fa-edit"></i> Delete</button>
                                                        }
                                                        else
                                                        {
                                                        if (Action.ToString().ToLower() == XIConstant.Action_ActionChain.ToLower() && items.FKiActionID > 0)
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" onclick="fncTriggerBOAction('@items.ID', '@Action','@items.FKiActionID','@sInstanceID', '@oBOI.BOD.BOID', '@sGUID')">@items.sName</button>
                                                        }
                                                        else if (Action.ToString().ToLower() == XIConstant.Action_DefaultPopup.ToLower())
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" onclick="fncTriggerBOAction('@items.ID', '@Action',0,'@sInstanceID', '@oBOI.BOD.BOID', '@sGUID')">@items.sName</button>
                                                        }
                                                        else if (Action.ToString().ToLower() == XIConstant.Action_questionset.ToLower() && items.FKiQSDefinitionID > 0)
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" onclick="fncTriggerBOAction('@items.ID', '@Action','@items.FKiQSDefinitionID','@sInstanceID', '@oBOI.BOD.BOID', '@sGUID')">@items.sName</button>
                                                        }
                                                        else if (Action.ToString().ToLower() == XIConstant.Action_Script.ToLower())
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" onclick="fncTriggerBOAction('@items.ID', '@Action','@items.FKiScriptID','@sInstanceID', '@oBOI.BOD.BOID', '@sGUID')">@items.sName</button>
                                                        }
                                                        else if (Action.ToString().ToLower() == XIConstant.Action_XIAlgorithm.ToLower())
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" onclick="fncTriggerBOAction('@items.ID', '@Action','@items.FKiAlgorithmID','@sInstanceID', '@oBOI.BOD.BOID', '@sGUID')">@items.sName</button>
                                                        }
                                                        }
                                                        }
                                                        }
                                                        @*@if (oBOI.BOD.Name.ToLower() == "ACReconcilliation_T".ToLower())
                                                        {
                                                        <button type="button" class="btn btn-theme btnQuote" onclick="XILinkLoadJson('4380')">Continue Reconciliation</button>
                                                        <button type="button" class="btn btn-theme btnQuote" onclick="XILinkLoadJson('4379')">View Reconciliation</button>
                                                        }*@
                                                    </div>
                                                </div>
                                            </form>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        </div>
                        }
                        <div id="dialog_autocomplete"></div>
                        <div class="popcontainer popover-time"></div>
                        <div class="trackcontainer popover-time"></div>
                        <style>
                            .thumbnail {
                                float: left;
                                margin-left: 10px;
                            }

                            .Logo {
                                float: left;
                                margin-right: 10px;
                            }

                            .Delete {
                                margin-top: -95px;
                            }

                            .CreateForm .on {
                                display: none;
                            }

                            .CreateForm .off {
                                display: block;
                            }
                        </style>
                        <script src="~/Scripts/ajaxfileupload.js"></script>
                        <script>
    function TraceButton(XiLinkID, sInstanceID, sGUID, sValue, sattrName){
        debugger
        fncSetParam(sValue, sGUID, "{XIP|sLeadStatus}", sValue).then(function (state, callback) {
            fncSetParam(sattrName, sGUID, "{XIP|sLeadAttrName}", "").then(function (state, callback) {
                XIRun(null, XiLinkID, sInstanceID, sGUID, null, false, 0)
            });
        });
    }

    function GetAutoCompleteList(sFKBOName,iOneClickID,sValue,sName){
        //sValue=$("#DDLShow-"+sName).val();
        var iBODID = 0;
        var sBOName = sFKBOName;
        var fieldVal = sValue;
        var AutoCompleteList = 0;
        var sRefType = "bo";
        if (iOneClickID > 0) {
            sRefType = "1click";
            iBODID = iOneClickID;
        }
        $.ajax({
            url: '@Url.Action("GetAutoCompleteList", "BusinessObjects")',
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            async: true,
            cache: false,
            data: JSON.stringify({ sType: sRefType, iBODID: iBODID, sBOName: sBOName, sGUID: '@sGUID' }),
            success: function (data) {
                AutoCompleteList = data;
                if (iOneClickID > 0) {
                    AutoCompleteDict.push({
                        key: iOneClickID,
                        value: AutoCompleteList
                    });
                }
                else if (sFKBOName != "") {
                    AutoCompleteDict.push({
                        key: sFKBOName,
                        value: AutoCompleteList
                    });
                }
                if (sValue && sValue.length > 0) {
                    var autoDict = 0;
                    if (iOneClickID > 0) {
                        for (var k = 0; k < AutoCompleteDict.length; k++) {
                            if (AutoCompleteDict[k].key == iOneClickID) {
                                autoDict = AutoCompleteDict[k].value;
                            }
                        }
                    }
                    else if (sFKBOName != "") {
                        for (var k = 0; k < AutoCompleteDict.length; k++) {
                            if (AutoCompleteDict[k].key == sFKBOName) {
                                autoDict = AutoCompleteDict[k].value;
                            }
                        }
                    }
                    var sResValue = Object.keys(autoDict).filter(function (key) { return autoDict[key] === sValue })[0];
                    $("#DDLShow-"+sName).val(sResValue);
                }
            }
        });
    }
    function Copy(sInstanceID, sBOName, This) {
        var formid = $(This).closest('form').attr('id');
        var cValue = {
            sInstanceID: sInstanceID,
            sBOName: sBOName,
        }
        // debugger
        $.ajax({
            url: '@Url.Action("BOICopy", "XiLink")',
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            cache: false,
            data: JSON.stringify(cValue),
            success: function (data) {
                //debugger
                if (data != 0) {
                    $('#' + formid).find(".StatusMessages").hide();
                    $('#' + formid).prepend($('<div class="StatusMessages"><div class="alert alert-success">Data Copied Succesfully</div></div>'));
                }
            },
            error: function (respose, ID) {
                $('#' + formid).find(".StatusMessages").hide();
                $('#' + formid).prepend($('<div class="StatusMessages"></div>'));
                $('.StatusMessages').html('<div class="alert alert-danger">Something went wrong while saving</div>');
            }
        })
    }
    function Alert(sInstanceID, sBOName, This) {
        $('<div> All Policies will updated!!<br/>Do you want to continue? </div>').dialog({
            title: "Confirmation",
            autoOpen: true,
            modal: true,
            width: 400,
            left: '600px',
            top: '80px',
            buttons: [
{
    text: "Yes",
    click: function () {
        $(this).dialog('destroy').remove()
        SaveData(This, sBOName,'@sShowSaveSections', '')
    }
},
{
    text: "No",
    click: function () {
        $(this).dialog('destroy').remove()
    }
}
            ]
        });
    }
    function UploadFile(AttrName, BOFieldID, This, sFileAliasName, sParentID, iBuildingID, sFolderName, sFolderTreeGUID, iDocID) {
        var LayoutGUID = '';
        if (This != undefined && This != null) {
            LayoutGUID = fncGetGUIDFromHTMLTree('LayoutGUID', This);
        }
        var sNewGUID = '@NewsGUID';
        var sBOName = '@sBOName';
        sFileAliasName = sFileAliasName.trim();
        var id = $(This).attr('id');
        var iInstanceID = id.split('-')[1];
        var ID = 0;
        if (iBuildingID == "") {
            iBuildingID = '0';
        }

        if ($("#" + id).val() != "") {
            $.ajaxFileUpload({
                url: '@Url.Action("SaveFiles", "XiLink")',
                data: { ID: ID, BOFieldID: BOFieldID, sInstanceID: iInstanceID, sFileAliasName: sFileAliasName, sParentID:sParentID, iBuildingID:iBuildingID, sFolderName:sFolderName,sNewGUID:sGUID, iDocumentID:iDocID },
                secureuri: false,
                type: 'POST',
                fileElementId: id,
                dataType: 'json',
                success: function (response, iID) {
                    if(sBOName.toLowerCase() == 'xidocumenttree'){
                        var IDs = iID.split('_');
                        var iID =IDs[0];
                        var CIFDocID = IDs[1].split(',')[1];
                        var sDocName = IDs[1].split(',')[2];
                        var batchid = IDs[1].split(',')[3];
                        var cType = IDs[1].split(',')[4];
                        var iOldDocID = IDs[1].split(',')[5];
                        funAddNode(sParentID, CIFDocID, sDocName, "20", sFolderTreeGUID, batchid, cType, iOldDocID)
                        $('#Create_@NewsGUID').find(".StatusMessages").hide();
                        $('#Create_@NewsGUID').prepend($('<div class="StatusMessages"></div>'));
                        $('#Create_@NewsGUID').find('.StatusMessages').html('<div class="alert alert-success">Document uploaded successfully</div>');
                        $('#Create_@NewsGUID').find('input[name="id"]').val(CIFDocID);

                    }
                    if (iID.indexOf(',') > -1) {
                        imagesPreview(This, iInstanceID);
                        $("." + sNewGUID + "-" + sBOName + "-" + AttrName).html("File uploaded successfully").animate({color:'green'});
                        if (iID && iID.length > 0) {
                            //$("." + sNewGUID + "-" + sBOName + "-" + AttrName).html("");
                            if (LayoutGUID != "" && LayoutGUID != null) {
                                $('.LayoutCode_' + LayoutGUID).find('#ImageID-' + iInstanceID).val(iID);
                            }
                            else {
                                $('#ImageID-' + iInstanceID).val(iID);
                            }
                        }
                    }
                    else
                    {
                        var ID = parseInt(iID);
                        if (ID && ID > 0) {
                            imagesPreview(This, iInstanceID);
                            $("." + sNewGUID + "-" + sBOName + "-" + AttrName).html("File uploaded successfully").animate({color:'green'});
                            //$("." + sNewGUID + "-" + sBOName + "-" + AttrName).html("");
                            if (LayoutGUID != "" && LayoutGUID != null) {
                                $('.LayoutCode_' + LayoutGUID).find('#ImageID-' + iInstanceID).val(iID);
                            }
                            else {
                                $('#ImageID-' + iInstanceID).val(ID);
                            }
                        }
                        else {
                            $("." + sNewGUID + "-" + sBOName + "-" + AttrName).html("Please upload valid file and less size file");
                        }
                    }
                },
                error: function (respose, ID) {
                    $("." + sNewGUID + "-" + sBOName + "-" + AttrName).html("File upload failed...Please upload it again");
                }
            })
        }
        else {
            $("." + sNewGUID + "-" + sBOName + "-" + AttrName).html("File upload failed...Please upload it again");
        }
    }
    $("#PolicyDDL").change(function () {
        sRegNo = $('#PolicyDDL :selected').attr('data-RegNo');
        $("#sRegistrationNo").val(sRegNo);
    });
    function removeFile(AttrName, BOFieldID, This, sFileAliasName, DocID) {
        debugger;
        var LayoutGUID = '';
        if (This != undefined && This != null) {
            LayoutGUID = fncGetGUIDFromHTMLTree('LayoutGUID', This);
        }
        var sNewGUID = '@NewsGUID';
        var sBOName = '@sBOName';
        sFileAliasName = sFileAliasName.trim();
        var id = $(This).attr('id');
        var iInstanceID = id.split('-')[1];
        var iIds = [];
        var sDocIDs = "";
        if (LayoutGUID != "" && LayoutGUID != null) {
            var sDocId=$('.LayoutCode_' + LayoutGUID).find('#ImageID-' + iInstanceID).val();
            iIds = sDocId.split(',');
            iIds.splice($.inArray(DocID, iIds),1);
            sDocIDs = iIds.join(",");
        }
        else {
            var sDocId = $('#ImageID-' + iInstanceID).val();
            iIds = sDocId.split(',');
            iIds.remove(DocID);
            sDocIDs = iIds.join(",");
        }

        //if (iID.indexOf(',') > -1) {
        //    if (iID && iID.length > 0) {
        $("." + sNewGUID + "-" + sBOName + "-" + AttrName).html("");
        if (LayoutGUID != "" && LayoutGUID != null) {
            $('.LayoutCode_' + LayoutGUID).find('#ImageID-' + iInstanceID).val(sDocIDs);
        }
        else {
            $('#ImageID-' + iInstanceID).val(sDocIDs);
        }
        $('#dvImage_' + DocID).remove();
        //    }
        //}
        //else {
        //    var ID = parseInt(iID);
        //    if (ID && ID > 0) {
        //        $("." + sNewGUID + "-" + sBOName + "-" + AttrName).html("");
        //        if (LayoutGUID != "" && LayoutGUID != null) {
        //            $('.LayoutCode_' + LayoutGUID).find('#ImageID-' + iInstanceID).val(iID);
        //        }
        //        else {
        //            $('#ImageID-' + iInstanceID).val(ID);
        //        }
        //    }
        //    else {
        //        $("." + sNewGUID + "-" + sBOName + "-" + AttrName).html("Please upload valid file and less size file");
        //    }
        //}
    }
    var imagesPreview = function (input, iInstanceID) {
        if (input.files) {
            var filesAmount = input.files.length;
            $('div#dvPreview-' + iInstanceID).html('');
            for (i = 0; i < filesAmount; i++) {
                var reader = new FileReader();
                reader.onload = function (event) {
                    $($.parseHTML('<img>')).attr('src', event.target.result).attr('width', '50').attr('height', '50').appendTo("div#dvPreview-" + iInstanceID);
                }
                reader.readAsDataURL(input.files[i]);
            }
        }
    };
    function PreviewTemplate($this, sBOName) {
        //debugger
        var sInstanceID = "";
        var formid = $($this).closest('form').attr('id');
        var formData = JSON.parse(JSON.stringify(jQuery('#' + formid).serializeArray()));
        var FormValues = [];
        for (var i = 0; i < formData.length; i++) {
            if (formData[i].name.toLowerCase() != "id") {
                FormValues.push({ sName: formData[i].name, sValue: formData[i].value, bDirty: true });
            }
        }
        if (FormValues != "" && FormValues != null) {
            sInstanceID = FormValues[0].sValue
        }
        var sPreviewStructure = '@sPreviewStructure';
        var cValue = {
            sInstanceID: sInstanceID,
            sBOName: sBOName,
            sPreviewStructure: sPreviewStructure,
            sGUID: sGUID
        }
        $.ajax({
            url: '@Url.Action("PreviewTemplate", "XiLink")',
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            cache: false,
            data: JSON.stringify(cValue),
            success: function (data) {
                //debugger
                if (data != "" && data != null) {
                    tinymce.remove('#TypeHere');
                    //tinymce.get("TypeHere").hide();
                    //$('#TypeHere').tinymce().hide();
                    $("#TypeHere").val("");
                    $("#TypeHere").val(data);
                    $("#TypeHere").show();
                    tinymce.init({ selector: '#TypeHere' });
                    tinymce.activeEditor.contentDocument.body.style.backgroundColor = '#f0f0f0';
                    //$('textarea#TypeHere').froalaEditor();
                    //$("#TypeHere").shieldEditor({
                    //    height: 260
                    //});
                }
            },
            error: function (respose, ID) {
                $('#' + formid).find(".StatusMessages").hide();
                $('#' + formid).prepend($('<div class="StatusMessages"></div>'));
                $('.StatusMessages').html('<div class="alert alert-danger">Something went wrong while saving</div>');
            }
        })
    }
    function SendTemplate($this, sBOName) {
        //debugger
        var sInstanceID = "";
        var formid = $($this).closest('form').attr('id');
        var formData = JSON.parse(JSON.stringify(jQuery('#' + formid).serializeArray()));
        var FormValues = [];
        for (var i = 0; i < formData.length; i++) {
            if (formData[i].name.toLowerCase() != "id") {
                FormValues.push({ sName: formData[i].name, sValue: formData[i].value, bDirty: true });
            }
        }
        if (FormValues != "" && FormValues != null) {
            sInstanceID = FormValues[0].sValue
        }
        tinyMCE.triggerSave();
        //var sPreviewContent = tinyMCE.get('TypeHere').getContent();
        var sPreviewContent = $("#TypeHere").val();
        var sPreviewStructure = '@sPreviewStructure';
        var cValue = {
            sPreviewContent: sPreviewContent,
            sInstanceID: sInstanceID,
            sBOName: sBOName,
            sStructureName: sPreviewStructure,
            sGUID: sGUID
        }
        $.ajax({
            url: '@Url.Action("SendLetterTemplate", "XiLink")',
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            cache: false,
            data: JSON.stringify(cValue),
            success: function (data) {
                //debugger
            },
            error: function (respose, ID) {
            }
        })
    }
    $('.CheckboxClass').unbind().on('change', function () {
        var dDOB = $('input[name=dDOB]').val();
        if('@bUIDRef' == 'True' || '@bUIDRef' == 'true') {
            dDOB = $('input[name=ac572cc3-5e90-4087-928d-e40de39049bd]').val();
        }

        var yearfield="";
        var monthfield="";
        if(dDOB!=undefined)
        {
            var yearfield = dDOB.split('-')[2];
            var monthfield = dDOB.split('-')[1];
        }
        monthfield = getMonth(monthfield);
        if (monthfield <= 9) {
            monthfield = "0" + monthfield;
        }
        var AttrNames = $(this).attr('data-attrname');
        if ($(this).is(':checked')) {
            $("#Checkbox-" + AttrNames).val("True");
            $('input[name=iUKResidentMonth]').val(monthfield);
            $('input[name=iUKResidentYear]').val(yearfield);
            $('#hidden-iUKResidentMonth').val(monthfield);
            $('#hidden-iUKResidentYear').val(yearfield);
            $('input[name=2565b709-d824-45d6-9e9a-044114e988ce]').val(monthfield);
            $('input[name=87e96957-3984-4f7d-ba6e-a29b126b25bc]').val(yearfield);
            $('#hidden-2565b709-d824-45d6-9e9a-044114e988ce').val(monthfield);
            $('#hidden-87e96957-3984-4f7d-ba6e-a29b126b25bc').val(yearfield);
        }
        else {
            $("#Checkbox-" + AttrNames).val("False");
            $('input[name=iUKResidentMonth]').val("");
            $('input[name=iUKResidentYear]').val("");
            $('#hidden-iUKResidentMonth').val("");
            $('#hidden-iUKResidentYear').val("");
            $('input[name=2565b709-d824-45d6-9e9a-044114e988ce]').val("");
            $('input[name=87e96957-3984-4f7d-ba6e-a29b126b25bc]').val("");
            $('#hidden-2565b709-d824-45d6-9e9a-044114e988ce').val("");
            $('#hidden-87e96957-3984-4f7d-ba6e-a29b126b25bc').val("");
        }
        var sMergeFlds = $(this).attr('data-merge');
        if (sMergeFlds && sMergeFlds.length > 0) {
            sMergeFlds = sMergeFlds.substring(0, sMergeFlds.length - 1);
            var AllFields = sMergeFlds.split(',');
            for (var k = 0; k < AllFields.length; k++) {
                if ($(this).prop("checked") == true) {

                    $('input[name="' + AllFields[k] + '"]').attr('disabled', true);
                    $('#hidden-' + AllFields[k]).attr('disabled', false);
                }
                else {
                    $('input[name="' + AllFields[k] + '"]').attr('disabled', false);
                    $('#hidden-' + AllFields[k]).attr('disabled', true);
                }
            }
        }
    });

    $(document).ready(function () {
        $('#Create_@NewsGUID').find('select').each(function (a, b) {
            var ISLoad = $(this).attr("onload");
            if (ISLoad) {
                if (ISLoad.split('(')[0] == "fncGetAccidentTypeFieldDependency") {
                    var LoadField = ISLoad.split('(')[1];
                    if (LoadField) {
                        var type = LoadField.split(',')[1];
                        if (type) {
                            fncGetAccidentTypeFieldDependency(b, type.split(')')[0].replace(/'/g, ''));
                        }

                    }
                }
                else if(ISLoad.split('(')[0] == "fncGetGroupNameDependency")
                {
                    var LoadField = ISLoad.split('(')[1];
                    if (LoadField) {
                        var type = LoadField.split("'")[1];
                        var Boname=LoadField.split("'")[3];
                        if (type) {
                            fncGetGroupNameDependency(b, type,Boname);
                        }
                    }
                }
            }
        })
        $('.DlgClose').click(function () {
            //alert("Clicked");
            //$('.ui-dialog-content').dialog('close');
            $(this).closest(".InLineTop-@oBOI.BOD.BOID").empty();
            $("#Add_" + @oBOI.BOD.BOID).attr("disabled", false);
            //$(this).closest(".PopupTabContentArea").hide();
        });

        $('#ResetBtn').click(function () {
            $('.CreateFormDiv')[0].reset();
            $('.CreateFormDiv .field-errmsg').find('span').html('');
            $('.UploadImage')[0].reset();
            $('.IconDisplay')[0].reset();
            $('.thumbnail').attr('src', "");
            $('.thumbnail').empty();
            $('select option:selected').removeAttr('selected');
        });

        $(".CreateForm select").each(function () {
            var sShowField = $(this).find(':selected').attr('data-show');
            var sHideField = $(this).find(':selected').attr('data-hide');
            var parentName = 'bofield';
            var sSelectedOption = $(this).find(':selected');
            if (sSelectedOption.attr('selected')) {
                var sValue = $(sSelectedOption).val();
                if (sValue && sValue > 0) {
                    var iSHType = $(this).find(':selected').attr('data-shtype');
                    if (iSHType == 10) {
                        if (sShowField && sShowField.length > 0) {
                            var childObj1 = $(this).closest('.form-group').next('.form-group').find('[name="' + sShowField + '"]');
                            fncHideShowBOFromHTMLTree(parentName, childObj1[0], 'show');
                        }
                        if (sHideField && sHideField.length > 0) {
                            var childObj2 = $(this).closest('.form-group').next('.form-group').find('[name="' + sHideField + '"]');
                            fncHideShowBOFromHTMLTree(parentName, childObj2[0], 'hide');
                        }
                    }
                    else if (iSHType == 20) {
                        if (sShowField && sShowField.length > 0) {
                            var childObj1 = $('[name="' + sShowField + '"]');
                            $(childObj1).removeClass('on').addClass('off');
                            for (var section in QuestionSet.QSDefinition.Steps[QuestionSet.sCurrentStepName].Sections) {
                                if (sShowField == QuestionSet.QSDefinition.Steps[QuestionSet.sCurrentStepName].Sections[section].sCode) {
                                    QuestionSet.QSDefinition.Steps[QuestionSet.sCurrentStepName].Sections[section].sIsHidden = "off";
                                }
                            }
                        }
                        if (sHideField && sHideField.length > 0) {
                            var childObj2 = $('[name="' + sHideField + '"]');
                            $(childObj2).removeClass('off').addClass('on');
                            for (var section in QuestionSet.QSDefinition.Steps[QuestionSet.sCurrentStepName].Sections) {
                                if (sHideField == QuestionSet.QSDefinition.Steps[QuestionSet.sCurrentStepName].Sections[section].sCode) {
                                    QuestionSet.QSDefinition.Steps[QuestionSet.sCurrentStepName].Sections[section].sIsHidden = "on";
                                }
                            }
                            var SetValueToNull = $(childObj2).find('form');
                            if (SetValueToNull) {
                                //$(childObj2).find('form').find('input').each(function(a,b){ $(b).attr('value',"") });
                                $(childObj2).find('form').find('select').each(function (a, b) { $(b).find('option[value="0"]').prop('selected', true) })
                            }
                        }
                    }
                }
            }
        });
    });
    $(document).ready(function () {
        if('@sAskFK' == "Yes"){
            fncGetParentDDL('@sFKBO').then(function (data) {
                var DialogDivID = "ParentDDL-div";
                var ParentDDL = '<form class="CreateForm form-h label-5 wrap-12 wrap-fullwidth p10"><div class="form-group" data-controltype="bofield"><label class="form-label">Select @sFKBO</label>';
                ParentDDL = ParentDDL + '<div class="form-input"><div class="select-wrapper"><select class="form-control" id="ParentDDL" data-dialogid="'+DialogDivID+'">';
                ParentDDL = ParentDDL + '<option value = "">Please Select</option>'
                for(var i=0;i<data.length;i++){
                    ParentDDL = ParentDDL + '<option value = "'+data[i].sValues+'">'+data[i].sOptionName+'</option>'
                }
                ParentDDL = ParentDDL +'</select><span class="select_wrapper_caret fas fa-chevron-down"></span></div></div></div></form>';
                var Div = '<div class="' + DialogDivID + '"></div>';
                $('#Dialogs').html(Div);
                $("." + DialogDivID).html(ParentDDL);
                var windowclose = '<i class="windowClose fas fa-times" onclick="fncdialogclose(this, ' + false + ', &quot;' + DialogDivID + '&quot;)"></i>';
                $("." + DialogDivID).dialog({
                    title: '@sFKBO',
                    //modal: true,
                    height: 200,
                    width: 400,
                    open: function () {
                        $(this).parent().promise().done(function () {
                            $(this).children('.ui-dialog-titlebar').append('<div class="dialogIcons">' + windowclose + '</div>');
                        })
                    }
                });
            })
        }

        $(document.body).on('change', '#ParentDDL', function () {
            var value = $(this).find(':selected').val();
            var text = $(this).find(':selected').text();
            var dialogid = $(this).attr('data-dialogid');
            var ParentFK = '<div class="form-group highlight--help" data-controltype="bofield"><div class="wrap-width clearfix control-block"><label class="form-label"><span class="pull-left">@sFKBO</span></label><div class="form-input">'+text+'</div></div></div>';
            ParentFK =  ParentFK + '<input type="hidden" class="sParentFK" name="@sFKCol" value="'+value+'" />';
            $('#Create_@NewsGUID').prepend(ParentFK);
            $("." + dialogid).dialog('close');
            $("." + dialogid).dialog('destroy').remove();
            fncTriggerSelectNode('@sFKBO', text, value);
        })
        //$('.helptext-mobile-button').on('click', function (e) {
        //    $('.helptext-mobile-button').not(this).popover('hide')
        //});
        $(".highlight--help .helptext-mobile-button").on('click', function (e) {
            e.stopPropagation();
            $('.highlight--help').removeClass("helptext--visible");
            $(this).closest('.highlight--help').addClass('helptext--visible');
        });
        $(".helptext-content-close").on('click', function (e) {
            $(this).closest('.highlight--help').removeClass('helptext--visible');
        });
        $('.LeadContent .control-block .form-input input,.LeadContent .control-block .form-input select').focus(function () {
            $('.highlight--help').removeClass("helptext--visible");
            $(this).closest('.highlight--help').addClass('helptext--visible');
        });
        $('span.form-control').click(function () {
            $('.highlight--help').removeClass("helptext--visible");
            $(this).closest('.highlight--help').addClass('helptext--visible');
        });
        $('.LeadContent .control-block .form-input input').blur(function () {
            $(this).closest('.highlight--help').removeClass('helptext--visible');
        });
        $('.popcontainer').hide();
        $('.trackcontainer').hide();
        $('.GetQuickView').popover({
            trigger: 'hover',
            //placement: 'right',
            html: true,
            //selector: '#OneClickResult-ReportID td',
            content: function () {
                //if ((MouseOver && MouseOver.length>0) || ColumnName=="ID") {
                var ID = $(this).attr('data-instanceid');
                var BOID = '@iBODID';
                var Column = $(this).attr('data-columnname');
                if (Column && Column.length > 0 && ID && ID != 0) {
                    var pvalue = {
                        BOID: BOID,
                        ID: parseInt(ID),
                        ColumnName: Column
                    }
                    $.ajax({
                        url: '@Url.Action("ListHover", "XiLink")',
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        datatype: "json",
                        cache: false,
                        async: true,
                        data: JSON.stringify(pvalue),
                        success: function (data) {
                            if (data) {
                                var rowvalues = "";
                                rowvalues = rowvalues + '<div class="popover-time">';
                                rowvalues = rowvalues + '<table class="table m-b-none">';
                                rowvalues = rowvalues + '<tbody>';
                                rowvalues = rowvalues + '<thead>';
                                rowvalues = rowvalues + '</tr>';
                                if (data) {
                                    for (i = 0; i < data.NVPairs.length; i++) {
                                        //data[i].sValue = 'http://192.168.7.7/Converter/Content/images/lead-logo.png';
                                        rowvalues = rowvalues + '<tr>';
                                        rowvalues = rowvalues + '<td class="fc-sky">' + data.NVPairs[i].sName + '</td>';
                                        rowvalues = rowvalues + '<td>|</td>';

                                        var IsImage = false;
                                        var BOFields = data.BOD.Attributes;
                                        for (j = 0; j < BOFields.length; j++) {
                                            if (data.NVPairs[i].sName == BOFields[j].Name) {
                                                var FileType = BOFields[j].FKiFileTypeID;
                                                if (FileType > 0) {
                                                    IsImage = true;
                                                }
                                            }
                                        }
                                        if (IsImage) {
                                            rowvalues = rowvalues + '<td><img src="' + data.NVPairs[i].sValue + '"></td>';
                                        }
                                        else {
                                            rowvalues = rowvalues + '<td>' + data.NVPairs[i].sValue + '</td>';
                                        }
                                        //rowvalues = rowvalues + '<td><img src="/Content/Files/png/2018/3/16/images_1_168_137.png"></td>';
                                        rowvalues = rowvalues + '</tr>';
                                    }
                                }
                                //else {
                                //    rowvalues = rowvalues + '<tr>';
                                //    rowvalues = rowvalues + '<td> No foregin key group </td>';
                                //    rowvalues = rowvalues + '</tr>';
                                //}
                                rowvalues = rowvalues + '</thead>';
                                rowvalues = rowvalues + '</tbody>';
                                rowvalues = rowvalues + '</table>';
                                rowvalues = rowvalues + '</div>';
                                $(".popcontainer").empty();
                                $(".popcontainer").append(rowvalues);
                            }
                            else {
                                $(".popcontainer").empty();
                            }
                        },
                        error: function (data) {
                            $(".popcontainer").empty();
                        }
                    });
                    var rowdata = $('.popcontainer').html();
                    return $(rowdata).html();
                }

                //}
            },
            container: 'body',
            placement: 'auto top'
        });

        $('.AttrTrack').popover({
            trigger: 'hover',
            //placement: 'right',
            html: true,
            //selector: '#OneClickResult-ReportID td',
            content: function () {
                //if ((MouseOver && MouseOver.length>0) || ColumnName=="ID") {
                var iAttrID = $(this).attr('data-attrid');
                var BOID = '@iBODID';
                var BOIID = $(this).attr('data-boiid');
                if (parseInt(BOIID) > 0) {
                    var pvalue = {
                        iAttrID : iAttrID,
                        iBODID: BOID,
                        iBOIID: BOIID
                    }
                    $.ajax({
                        url: '@Url.Action("AttrTrackHover", "XiLink")',
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        datatype: "json",
                        cache: false,
                        async: true,
                        data: JSON.stringify(pvalue),
                        success: function (data) {
                            if (data) {
                                var rowvalues = "";
                                rowvalues = rowvalues + '<div class="popover-time">';
                                rowvalues = rowvalues + '<table class="table m-b-none">';
                                rowvalues = rowvalues + '<tbody>';
                                for (i = 0; i < data.length; i++) {
                                    //data[i].sValue = 'http://192.168.7.7/Converter/Content/images/lead-logo.png';

                                    rowvalues = rowvalues + '<tr>';
                                    for (var key in data[i].Attributes) {
                                        // check if the property/key is defined in the object itself, not in parent
                                        if (data[i].Attributes.hasOwnProperty(key)) {
                                            rowvalues = rowvalues + '<td>' + data[i].Attributes[key].sValue + '</td>';
                                            console.log(key, data[i].Attributes[key].sValue);
                                        }
                                    }
                                    for(j=0;j<data[i].Attributes.length;j++){
                                        rowvalues = rowvalues + '<td>' + data[i].Attributes[j].sValue + '</td>';
                                    }
                                    rowvalues = rowvalues + '</tr>';
                                }
                                rowvalues = rowvalues + '</tbody>';
                                rowvalues = rowvalues + '</table>';
                                rowvalues = rowvalues + '</div>';
                                $(".trackcontainer").empty();
                                $(".trackcontainer").append(rowvalues);
                            }
                            else {
                                $(".trackcontainer").empty();
                            }
                        },
                        error: function (data) {
                            $(".trackcontainer").empty();
                        }
                    });
                    var rowdata = $('.trackcontainer').html();
                    return $(rowdata).html();
                }

                //}
            },
            container: 'body',
            placement: 'auto top'
        });
    });
                        </script>

                        <script>

    function XICustomerReset($this, sGUID) {
        var sEmail = this.RowData[3];
        if (sEmail != null) {
            $('#MainContent-2654').block({
                message: '<h4> Sending ... </h4>',
                blockMsgClass: 'report-success',
            });
            $.ajax({
                url: '@Url.Action("UserResetPassword","Account")',
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                async: true,
                cache: false,
                data: JSON.stringify({ sEmail: sEmail }),
                success: function (data) {
                    var sUserReset = "Temporary Reset Password Link sent to your mail account.This link was expired in 24 hours.";
                    if(data == "Deactive")
                    {
                        sUserReset = "Customer is not in Active..!";
                    }
                    $("#UserResetDialog").html(sUserReset);
                    $("#UserResetDialog").dialog({
                        title: "Reset Password",
                        modal: true,
                        buttons: {
                            "Ok": function () {
                                $('#MainContent-2654').unblock();
                                $(this).dialog("close");
                            }
                        }
                    });
                }
            });
        }
    }

                        </script>
                        <div id="UserResetDialog"></div>

                        <style>
                            #dvImagePreview img {
                                width: 200px;
                                height: 100px;
                            }
                        </style>
                        <script>
    /*const content_height = $(window).height() - $('#HomeHeader').height();
    $('#FormComponent .LeadContent-table').slimScroll({
        //height: '250px',
        height: content_height,
    });*/
    const content_height = $(window).height() - $('#HomeHeader').height() - 10;
    $('.scroll_vh_100').not('.sec-controlbox .scroll_vh_100').slimScroll({
        /**/
        //$('.scroll_vh_100').slimScroll({
        height: content_height,
        //});
    });
    /*$('#FormulaCode').slimScroll({
        height: '93px',
    });*/

    /*$(".dialog-box .scroll_vh_100").slimscroll({destroy:true});
    const dlg_content_height = $('.ui-dialog').height() - 54;
    $('.dialog-box .scroll_vh_100').slimScroll({height: dlg_content_height});
    const dlg_content_height_2 = $('.ui-dialog').height() - $('.ui-dialog #TabsArea').height() - 54;
    $('.dialog-box #MainContent .scroll_vh_100').slimScroll({height: dlg_content_height_2});*/
    $('.tradingview-theme .ui-dialog .form-h label.control-label:contains("New")').addClass("color-positive");
                        </script>
