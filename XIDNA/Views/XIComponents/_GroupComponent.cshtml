
@model XICore.XIIComponent
@using XISystem
@using XICore
@{
    XIDBO oBOD = new XIDBO();
    XIDGroup oGroup = new XIDGroup();
    XIIGroup oGroupI = new XIIGroup();
    if (Model.oContent.ContainsKey(XIConstant.GroupComponent))
    {
        oGroup = (XIDGroup)Model.oContent[XIConstant.GroupComponent];
        if (oGroup == null)
        {
            oGroup = new XIDGroup();
        }
    }
    string sAutoSave = "no";
    string sShowGroup = "no";
    string sShowSaveButton = "yes";
    var oVisualisations = Model.oVisualisation;
    if (oVisualisations != null)
    {
        var oVisual = oVisualisations.FirstOrDefault();
        if (oVisual != null && oVisual.XiVisualisationNVs != null && oVisual.XiVisualisationNVs.Count() > 0)
        {
            var oVNVs = oVisual.XiVisualisationNVs;
            var IsAutoSave = oVNVs.Where(m => m.sName.ToLower() == "AutoSave".ToLower()).Select(m => m.sValue).FirstOrDefault();
            if (IsAutoSave != null)
            {
                sAutoSave = IsAutoSave.ToLower();
            }
            var ShowSaveButton = oVNVs.Where(m => m.sName.ToLower() == "ShowSaveBtn".ToLower()).Select(m => m.sValue).FirstOrDefault();
            if (ShowSaveButton != null)
            {
                sShowSaveButton = ShowSaveButton;
            }
        }
        if (sShowSaveButton == "no")
        {
            sAutoSave = "yes";
        }
    }
}

<script>
    $(document).ready(function () {
        var list = [];
        $('ul').on('click', 'li', function () {
            $('ul').each(function (i, li) {
                $('li').removeClass('selected');
            })
            $(this).toggleClass('selected');
        });

        $('#left').click(function () {
            var items = $('.list2 .selected');
            if (items.length != 0) {
                var id = items[0].id;
                var name = items[0].innerHTML;
                $('.list1').append('<li id="' + id + '">' + name + '</li>');
                $('.list2 .selected').remove();
            }
        });
        $('#rightValues').dblclick(function () {
            var items = $('.list2 .selected');
            if (items.length != 0) {
                var id = items[0].id;
                var name = items[0].innerHTML;
                $('.list1').append('<li id="' + id + '">' + name + '</li>');
                $('.list2 .selected').remove();
            }
        });

        $('#right').click(function () {
            var items = $('.list1 .selected');
            if (items.length != 0) {
                var id = items[0].id;
                var name = items[0].innerHTML;
                $('.list2').append('<li id="' + id + '">' + name + '</li>');
                $('.list1 .selected').remove();
                $("#ErrorBox").empty();
            }

        });
        $('#leftValues').dblclick(function () {
            var items = $('.list1 .selected');
            if (items.length != 0) {
                var id = items[0].id;
                var name = items[0].innerHTML;
                $('.list2').append('<li id="' + id + '">' + name + '</li>');
                $('.list1 .selected').remove();
            }

        });
        $("#rightValues").sortable();
        $("#rightValues").disableSelection();
        $('#EditSave').click(function () {
            debugger
            if ($('#GroupName').val().length == 0) {
                $("#splerror").hide();
                $("#error").show();
                $("#error").empty();
                $("#error").append("Please Enter Group Name");
                $("#GroupName").focus();
            }
            else {
                var rightvalues = $("#rightValues li");
                var e1 = $('#ErrorBox').text();
                if ($('#ErrorBox').text() == "" && $('#error').text() == "") {
                    if (rightvalues.length == 0) {
                        $("#ErrorBox").empty();
                        $("#ErrorBox").append("Please Select Atleast One Field");
                    }
                    else {
                        var fieldids = new Array();
                        var GroupName = $('#GroupName').val();
                        //var GroupName = "Test";
                        var BOID = $('#BOID').val();
                        //var BOGroupID = $("#BOGroupID").val();
                        var BOGroupID = @oGroup.ID;
                        //var BOGroupID = $('#BOGroupID').val();
                        var IsMultiColumn;
                        if ($('#IsMultiColumn').is(':checked')) {
                            IsMultiColumn = true;
                        } else {
                            IsMultiColumn = false;
                        }

                        var listItems = $(".list2").find("li");
                        var ind, len, product;
                        for (ind = 0, len = listItems.length; ind < len; ind++) {
                            product = $(listItems[ind]);
                            var id = product[0].id;
                            fieldids.push(id);
                        }
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("AddBOAttributesGroup", "BusinessObjects")',
                            data: { BOID: BOID, GroupName: GroupName, BOFieldNames: fieldids.join(), ID: BOGroupID, IsMultiColumnGroup: IsMultiColumn },
                            cache: false,
                            dataType: 'html',
                            success: function (data) {
                                CustomMessage("Success! Data Saved Successfully", true);
                                //$('.GroupCrtDlg').html('Group Updated Successfully!');
                                //$(".GroupCrtDlg").dialog({
                                //    modal: true,
                                //    buttons: [{
                                //        text: "Ok",
                                //        click: function () {
                                //            $(this).dialog("close");
                                //        }
                                //    }]
                                //});
                                //refreshes the form so comment the code.
                                @*$('#GroupName').val('');
                            $('#rightValues').empty();
                            $("#splerror").empty();
                            $("#splerror").hide();
                            $("#error").empty();
                            $("#error").hide();
                            $('#BOGroupID').val(0);
                            var BOID = '@Model.BOID';
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetAvailableFields", "BusinessObjects")',
                                data: { BOID: BOID },
                                cache: false,
                                dataType: 'json',
                                success: function (data) {
                                    debugger
                                    $('#leftValues').empty();
                                    if (data.AvailableFields.length > 0) {
                                        for (i = 0; i < data.AvailableFields.length; i++) {
                                            $('#leftValues').append('<li id="' + data.AvailableFields[i].ID + '">' + data.AvailableFields[i].FieldName + '</li>');
                                        }
                                    }
                                }
                            });
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GroupingGrid", "BusinessObjects")',
                                data: { BOID : '@Model.BOID' },
                                cache: false,
                                dataType: 'html',
                                success: function (data) {
                                    $('#GroupingGrid').empty();
                                    $('#GroupingGrid').append(data);
                                }
                            });*@
                            }
                        });
                    }

                }
                else {
                    $("#GroupName").focus();
                }
            }

        });
        $('#Reset').click(function () {
            var BOID = $('#BOID').val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("EditBOAttributeGroup", "BusinessObjects")',
                data: { GroupID: 0, BOID: BOID },
                cache: false,
                dataType: 'html',
                success: function (data) {
                    $('#Editgroupingforms').empty();
                    $('#Editgroupingforms').append(data);
                }
            });
        });
        $('#Cancel').click(function () {
            window.close();
        });

        $('#BOChange').change(function(){
            var BOID = $('#BOChangeBOID').val();
            $('#BOID').val(BOID);
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetAvailableFields", "BusinessObjects")',
                data: { BOID: BOID },
                cache: false,
                dataType: 'json',
                success: function (data) {
                    $('#leftValues').empty();
                    if (data.AvailableFields.length > 0) {
                        for (i = 0; i < data.AvailableFields.length; i++) {
                            $('#leftValues').append('<li id="' + data.AvailableFields[i].ID + '">' + data.AvailableFields[i].FieldName + '</li>');
                        }
                    }
                }
            });
        });

    });
</script>

<style>
    .selected {
        background-color: #2c2c2c;
        color: #fff;
    }

    #error, #ErrorBox, .noname {
        color: #ff0000;
    }

    .savebtn {
        padding-left: 10px;
    }
</style>

<section class="content">
    <div class="row">
        <div class="box">
            <div class="box-body">
                <div class="innerborder">
                    <div id="EditAttributeGroupingForm">
                        <div id="Editgroupingforms">
                            <form class="form-horizontal" id="BOAGroupingForm" data-savetype="@sAutoSave">
                                @*<input type="hidden" name="BOID" id="BOID" value="@oGroup.BOID" />*@
                                <input type="hidden" name="ID" id="BOGroupID" value="@oGroup.ID" />
                                <input type="hidden" name="Type" id="Type" value="Edit" />
                                <input type="hidden" name="OldName" id="OldName" value="@oGroup.GroupName" />

                                @if (oGroup.BOID == 0)
                                {
                                    <div class="form-group" id="BOChange">
                                        <div class="col-md-6">
                                            <label for="inputEmail" class="gn">BO Name<span class="danger"></span></label>
                                            @Html.DropDownList("BOID", new SelectList(oGroup.ddlAllBOs, "Value", "text", oGroup.BOID), new { @class = "form-control", @id = "BOChangeBOID" })
                                            <input type="hidden" name="BOID" id="BOID" value="@oGroup.BOID" />
                                        </div>
                                        <div class="col-sm-4 taberrormsg">
                                            @Html.ValidationMessage("BOID", null, new { @class = "red" })
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group" id="BOChange">
                                        <div class="col-md-6">
                                            <label for="inputEmail" class="gn">BO Name<span class="danger"></span></label>
                                            @Html.DropDownList("BOID", new SelectList(oGroup.ddlAllBOs, "Value", "text", oGroup.BOID), new { @class = "form-control", @disabled = "disabled", @id = "BOChangeBOID" })
                                            <input type="hidden" name="BOID" id="BOID" value="@oGroup.BOID" />
                                        </div>
                                        <div class="col-sm-4 taberrormsg">
                                            @Html.ValidationMessage("BOID", null, new { @class = "red" })
                                        </div>
                                    </div>
                                }


                                @if (sShowGroup == "Yes")
                                {
                                    <div class="form-group">
                                        <div class="col-md-5">
                                            <label for="inputEmail" class="gn">Group Name<span class="danger">*</span></label>
                                            <input id="GroupName" type="text" value="@oGroup.GroupName" class="form-control" onchange="OnChangeEvent()" maxlength="128" , onpaste="return false;" />
                                            @* @Html.TextBoxFor(m => m.GroupName, new { @placeholder = "Enter Group Name", @class = "form-control ", @id = "GroupName", onchange = "OnChangeEvent()", @maxlength = "128", @onpaste = "return false;" })*@
                                        </div>
                                        <div class="col-md-7">
                                            <div class="errormessage col-sm-5" id="splerror" style="color:red;"></div>
                                            <div class="errormessage col-sm-5" id="error" style="color:red;"></div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group">
                                        <div class="col-md-5">
                                            <label for="inputEmail" class="gn">Group Name<span class="danger">*</span></label>
                                            <input id="GroupName" type="text" value="@oGroup.GroupName" class="form-control" onchange="OnChangeEvent()" maxlength="128" , onpaste="return false;" />
                                            @* @Html.TextBoxFor(m => m.GroupName, new { @placeholder = "Enter Group Name", @class = "form-control ", @id = "GroupName", onchange = "OnChangeEvent()", @maxlength = "128", @onpaste = "return false;" })*@
                                        </div>
                                        <div class="col-md-7">
                                            <div class="errormessage col-sm-5" id="splerror" style="color:red;"></div>
                                            <div class="errormessage col-sm-5" id="error" style="color:red;"></div>
                                        </div>
                                    </div>
                                }
                                <div class="box_filters">
                                    <div class="feature-box col-xs-5">
                                        <label for="inputEmail" class="gn">Available Fields</label>
                                        <ul class="list1 task availableTasks form-control" id="leftValues">
                                            @if (oGroup.AvailableFields != null)
                                            {
                                                foreach (var items in oGroup.AvailableFields)
                                                {
                                                    <li id="@items.ID">@items.FieldName</li>
                                                }
                                            }

                                        </ul>
                                    </div>
                                    <div class="arrows_div GroupingArrows col-xs-2">
                                        <div>
                                            <button id="right" type="button" class="btn btn-rr"><i class="fa fa-chevron-right" aria-hidden="true"></i></button>
                                            <br>
                                            <button type="button" id="left" class="btn btn-ll"><i class="fa fa-chevron-left" aria-hidden="true"></i></button>
                                        </div>
                                    </div>
                                    <div class="feature-box col-xs-5">
                                        <label for="inputEmail" class="gn">Assigned Fields<span class="danger">*</span></label>
                                        @if (oGroup.AssignedFields != null)
                                        {
                                            <ul id="rightValues" class="AssignedFields list2 task form-control">
                                                @foreach (var items in oGroup.AssignedFields)
                                                {
                                                    <li id="@items.ID">@items.FieldName</li>
                                                }
                                            </ul>
                                        }
                                        else
                                        {
                                            <ul id="rightValues" class="AssignedFields list2 task form-control"></ul>
                                        }
                                    </div>

                                </div>
                                <div class="form-group">
                                    <div class="col-md-5">
                                        @* @Html.CheckBoxFor(m => m.IsMultiColumnGroup, new { @Name = "IsMultiColumn", @id = "IsMultiColumn" }) IsMultiColumnGroup*@
                                        @if ((!oGroup.IsMultiColumnGroup) || (oGroup.IsMultiColumnGroup == null))
                                        {
                                            <label class="label-wrapper">
                                                <input type="checkbox" class="CheckboxClass" id="IsMultiColumn" data-attrname="IsMultiColumnGroup" />IsMultiColumnGroup
                                                <i class="check"></i>
                                            </label>
                                        }
                                        else
                                        {
                                            <label class="label-wrapper">
                                                <input type="checkbox" class="CheckboxClass" id="IsMultiColumn" data-attrname="IsMultiColumnGroup" checked />IsMultiColumnGroup
                                                <i class="check"></i>
                                            </label>
                                        }
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div id="ErrorBox" class="col-md-6"></div>
                                    <div class="col-md-12">
                                        @*<input type="button" class="savebtn btn btn-theme decline pull-right m-l-10" id="Cancel" value="Cancel" />*@
                                        <input type="button" class="savebtn btn btn-theme reverse pull-right m-l-10" id="Reset" value="Reset" />
                                        <input type="button" class="savebtn sv_bt btn btn-theme m-l-10 pull-right" id="EditSave" value="Save" />
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<div class="dialog-box GroupEdtDlg" title="Attribute Grouping" style="background-color:white;"></div>
<script>
    function OnComplete() {
        @*$("#BoAttributeGrouping").load('@Url.Action("BOAttributeGroupingFromTab", "BusinessObjects", new {BOID = @Model.BOID, BOName = @Model.BOName })');
        $('#BOAGroupingForm').children('input.groupname').val('');*@
    }
</script>
<script>

    var specialKeys = new Array();
    specialKeys.push(8); //Backspace
    specialKeys.push(9); //Tab
    specialKeys.push(46); //Delete
    specialKeys.push(36); //Home
    specialKeys.push(35); //End
    specialKeys.push(37); //Left
    specialKeys.push(39); //Right
    function IsAlphaNumeric(e) {
        $('#splerror').empty();
        var keyCode = e.keyCode == 0 ? e.charCode : e.keyCode;
        if ($("#GroupName").val().length == 0) {
            var ret = ((keyCode >= 65 && keyCode <= 90) || (keyCode >= 97 && keyCode <= 122) || (specialKeys.indexOf(e.keyCode) != -1 && e.charCode != e.keyCode));
        }
        else {
            var ret = (keyCode == 32 || keyCode == 95 || (keyCode >= 65 && keyCode <= 90) || (keyCode >= 97 && keyCode <= 122));
        }
        if (ret == false) {
            $('#error').empty();
            $('#error').hide();
            $('#splerror').show();
            $('#splerror').empty();
            $("#splerror").append("Numbers & Spcial Characters Not Allowed");
        }
        else {
            $('#error').empty();
            $('#error').hide();
            $('#splerror').empty();
            $("#splerror").hide();
        }
        return ret;
    }
    function OnChangeEvent() {
        var GroupName = $("#GroupName").val();
        var GroupID = $("#BOGroupID").val();
        var Type = $('#Type').val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("IsExistsGroup", "BusinessObjects")',
            data: { GroupName: GroupName, GroupID: GroupID, Type: Type, BOID: '@oGroup.BOID' },
            cache: false,
            dataType: 'JSON',
            success: function (data) {
                if (data == false) {
                    $('#error').show();
                    $("#splerror").hide();
                    $('#error').empty();
                    $('#error').append("Group Name Already Exists");
                }
                else {
                    $('#error').empty();
                }
            }
        });
    }
</script>
<div class="GroupCrtDlg"></div>

