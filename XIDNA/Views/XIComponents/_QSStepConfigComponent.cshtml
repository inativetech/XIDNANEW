@model XICore.XIIComponent
@using XISystem
@using XICore
@{
    XIDQSStep oQSStep = new XIDQSStep();
    if (Model.oContent.ContainsKey(XIConstant.QSStepConfigComponent))
    {
        oQSStep = (XIDQSStep)Model.oContent[XIConstant.QSStepConfigComponent];
        if (oQSStep == null)
        {
            oQSStep = new XIDQSStep();
        }
    }
    else
    {

    }
}

<style>
    .txtbox-width {
        width: 9.2%;
        float: left;
        margin-right: 10px;
    }
</style>

<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-body">
                    <div class="innerborder">
                        @using (Ajax.BeginForm("SaveQuestionSetSteps", "XISemantics", FormMethod.Post, new AjaxOptions { OnBegin = "OnFormBegin()", HttpMethod = "POST", OnSuccess = "OnComplete" }, new { @id = "XIStepsForm", @class = "form-horizontal" }))
                        {
                            @Html.ValidationSummary(true);
                            <input type="hidden" id="ID" name="ID" value="@oQSStep.ID" />
                            <div id="clear-text">
                                @if (oQSStep.ID != 0)
                                {
                                    <div class="form-group">
                                        <div class="col-md-2">
                                            <label for="inputEmail" class="gn">QSStep ID:<span class="danger"></span></label>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="inputEmail" class="gn">@oQSStep.ID<span class="danger"></span></label>
                                        </div>
                                    </div>
                                }

                                <div class="form-group">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">QuestionSet<span class="danger">*</span></label>
                                        @if (oQSStep.FKiQSDefintionID == 0)
                                        {
                                            @Html.DropDownList("FKiQSDefintionID", new SelectList(oQSStep.oQSddl, "Value", "text", oQSStep.FKiQSDefintionID), new { @class = "form-control" })
                                        }
                                        else
                                        {
                                            @Html.DropDownList("FKiQSDefintionID", new SelectList(oQSStep.oQSddl, "Value", "text", oQSStep.FKiQSDefintionID), new { @class = "form-control", @disabled = "disabled" })
                                            <input type="hidden" id="FKiQSDefintionID" name="FKiQSDefintionID" value="@oQSStep.FKiQSDefintionID" />
                                        }
                                    </div>
                                    <div class="col-sm-4 taberrormsg">
                                        @Html.ValidationMessage("FKiQSDefintionID", null, new { @class = "red" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">Name<span class="danger">*</span></label>
                                        @Html.TextBox("sName", oQSStep.sName, new { @placeholder = "Enter Name Here", @class = "form-control" })
                                    </div>
                                    <div class="col-sm-4 taberrormsg">
                                        @Html.ValidationMessage("sName", null, new { @class = "red" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">Display Name<span class="danger">*</span></label>
                                        @Html.TextBox("sDisplayName", oQSStep.sDisplayName, new { @placeholder = "Enter Display Name Here", @class = "form-control" })
                                    </div>
                                    <div class="col-sm-4 taberrormsg">
                                        @Html.ValidationMessage("sDisplayName", null, new { @class = "red" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">Order</label>
                                        @Html.TextBox("iOrder", oQSStep.iOrder, new { @placeholder = "Enter Order Here", @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">Code</label>
                                        @Html.TextBox("sCode", oQSStep.sCode, new { @placeholder = "Enter Code Here", @class = "form-control" })
                                    </div>
                                    <div class="col-sm-4 taberrormsg">
                                        @Html.ValidationMessage("sCode", null, new { @class = "red" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">Layout<span class="danger"></span></label>
                                        @Html.DropDownList("iLayoutID", new SelectList(oQSStep.ddlLayouts, "Value", "text", oQSStep.iLayoutID), new { @class = "form-control", @id = "XiLayoutsDDL" })
                                    </div>
                                    <br />
                                    <div class="col-md-4">
                                        @*<input type="button" class="btn btn-theme btn-xs" value="Refresh" onclick="XiLayoutManager('XiLayout', 'Refresh')" />*@
                                        <input type="button" class="btn btn-theme btn-xs" value="Map" onclick="XiLayoutManager('XiLayout', 'Add')" />
                                        @*<input type="button" class="btn btn-theme btn-xs" value="Edit" onclick="XiLayoutManager('XiLayout', 'Edit')" />
                                            <input type="button" class="btn btn-theme btn-xs" value="View" onclick="XiLayoutManager('XiLayout', 'View')" />*@
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">Display As<span class="danger">*</span></label>
                                        @Html.DropDownList("iDisplayAs", new SelectList(new List<Object>
                            {
                            new { key= "" , value = "--Select--" },
                            new { key= 10 , value = "Edit Form" },
                            //new { key= 20 , value = "Sections" },
                            new {key=30,value="Fields" },
                            new {key=40,value="XI Component"},
                            new {key=50,value="Html"},
                            new {key=60,value="Bespoke"},
                            new {key=70,value="1-Click"}
                            }, "key", "Value", oQSStep.iDisplayAs), new { @class = "form-control" })
                                    </div>
                                    <div class="col-sm-4 taberrormsg">
                                        @Html.ValidationMessage("iDisplayAs", null, new { @class = "red" })
                                    </div>
                                </div>
                                <div id="FieldsDiv">
                                    <div class="form-group col-md-10">
                                        <div id="NameValuePairs" class="col-md-12 no-padding">
                                            @if (oQSStep.ID == 0 || oQSStep.XIFieldValues.Count() == 0)
                {
                                                <div class="form-group NVPairs col-md-12" data-name="FieldNV">
                                                    <div class="col-md-2">
                                                        <label for="inputEmail" class="gn"> Field<span class="danger"></span></label>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <input type="text" name="StepXIFiled" placeholder="Field Name" class="form-control XIField" />
                                                    </div>
                                                    <div class="col-md-2">
                                                        <button type="button" class="btn btn-theme btn-xs DeleteNVPair">Delete</button>
                                                    </div>
                                                </div>
                                                <div class="form-group NVPairs col-md-12" data-name="FieldNV">
                                                    <div class="col-md-2">
                                                        <label for="inputEmail" class="gn"> Field<span class="danger"></span></label>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <input type="text" name="StepXIFiled" placeholder="Field Name" class="form-control XIField" />
                                                    </div>
                                                    <div class="col-md-2">
                                                        <button type="button" class="btn btn-theme btn-xs DeleteNVPair">Delete</button>
                                                    </div>
                                                </div>
                                                <div class="form-group NVPairs col-md-12" data-name="FieldNV">
                                                    <div class="col-md-2">
                                                        <label for="inputEmail" class="gn"> Field<span class="danger"></span></label>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <input type="text" name="StepXIFiled" placeholder="Field Name" class="form-control XIField" />
                                                    </div>
                                                    <div class="col-md-2">
                                                        <button type="button" class="btn btn-theme btn-xs DeleteNVPair">Delete</button>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                foreach (var NVs in oQSStep.XIFieldValues)
                                                {
                                                    <div class="form-group NVPairs col-md-12" data-name="FieldNV">
                                                        <div class="col-md-2">
                                                            <label for="inputEmail" class="gn"> Field <span class="danger"></span></label>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <input type="text" name="StepXIFiled" placeholder="Field Name" class="form-control XIField" value="@NVs" />
                                                        </div>
                                                        <div class="col-md-2">
                                                            <button type="button" class="btn btn-theme btn-xs DeleteNVPair">Delete</button>
                                                        </div>
                                                    </div>
                                                    if (oQSStep.XIFieldValues.Count() == 1)
                                                    {
                                                        <div class="form-group NVPairs col-md-12" data-name="FieldNV">
                                                            <div class="col-md-2">
                                                                <label for="inputEmail" class="gn"> Field<span class="danger"></span></label>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <input type="text" name="StepXIFiled" placeholder="Field Name" class="form-control XIField" />
                                                            </div>
                                                            <div class="col-md-2">
                                                                <button type="button" class="btn btn-theme btn-xs DeleteNVPair">Delete</button>
                                                            </div>
                                                        </div>
                                                        <div class="form-group NVPairs col-md-12" data-name="FieldNV">
                                                            <div class="col-md-2">
                                                                <label for="inputEmail" class="gn"> Field<span class="danger"></span></label>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <input type="text" name="StepXIFiled" placeholder="Field Name" class="form-control XIField" />
                                                            </div>
                                                            <div class="col-md-2">
                                                                <button type="button" class="btn btn-theme btn-xs DeleteNVPair">Delete</button>
                                                            </div>
                                                        </div>
                                                    }
                                                    else if (oQSStep.XIFieldValues.Count() == 2)
                                                    {
                                                        <div class="form-group NVPairs col-md-12" data-name="FieldNV">
                                                            <div class="col-md-2">
                                                                <label for="inputEmail" class="gn"> Field<span class="danger"></span></label>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <input type="text" name="StepXIFiled" placeholder="Field Name" class="form-control XIField" />
                                                            </div>
                                                            <div class="col-md-2">
                                                                <button type="button" class="btn btn-theme btn-xs DeleteNVPair">Delete</button>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="form-group">
                                        <div class="col-md-2">
                                            <button type="button" id="AddMore" class="btn btn-theme btn-xs">Add</button>
                                        </div>
                                    </div>
                                </div>
                                <input type="hidden" name="ComponentNVIDs" id="ComponentNVIDs" />
                                <input type="hidden" name="SecComponentNVIDs" id="SecComponentNVIDs" />
                                <input type="hidden" name="SectionIDs" id="SectionIDs" />
                                <div id="ContentDiv">
                                    <div class="form-group">
                                        <div class="col-md-6">
                                            <label for="inputEmail" class="gn" id="ContentLabel">Content<span class="danger">*</span></label>
                                            @Html.DropDownList("FKiContentID", new SelectList(oQSStep.ddlContent, "Value", "text", oQSStep.FKiContentID), new { @class = "form-control" })
                                        </div>
                                        <br />
                                        <div class="ComponentBtn col-md-1"></div>
                                        <div class="col-sm-7 fielderror">
                                            @Html.ValidationMessage("FKiContentID", "", new { @class = "red" })
                                        </div>
                                    </div>
                                </div>
                                <div id="SectionsDiv">
                                    <div class="form-group">
                                        <div id="SectionPairs" class="col-md-12">
                                            <div class="form-group SecPairs">
                                                <div class="col-md-2">
                                                    <label for="inputEmail" class="gn"> Display As <span class="danger"></span></label>
                                                </div>
                                                <div class="col-md-4 SectionNames">
                                                    <input type="text" name="sName" placeholder="Enter Section Name" class="form-control SectionName" />
                                                </div>
                                                <div class="col-md-4">
                                                    <select class="form-control SecDisplayAsDDL">
                                                        <option value="">--Select--</option>
                                                        <option value="10">Edit Form</option>
                                                        <option value="30">Fields</option>
                                                        <option value="40">XI Component</option>
                                                        <option value="50">HTML</option>
                                                        <option value="60">Bespoke</option>
                                                        <option value="70">1-Click</option>
                                                    </select>
                                                </div>
                                                <div class="col-md-2">
                                                    <input type="text" class="form-control" id="SecOrder" placeholder="0.00" />
                                                </div>
                                                <div class="col-md-4">
                                                    <button type="button" class="btn btn-theme ShowSectionDlg" data-sectionid="0" data-secid="0" data-showid="0">Show</button>
                                                    <button type="button" class="btn btn-theme btn-xs DeleteSecPair" data-sectionid="0" data-secid="0" data-deleteid="0">Delete</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-2">
                                            <button type="button" id="AddMoreSections" class="btn btn-theme btn-xs">Add</button>
                                        </div>
                                    </div>
                                </div>
                                <div id="HtmlContent" class="form-group">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">HTML Content<span class="danger">*</span></label>
                                        @Html.TextArea("HTMLContent", oQSStep.HTMLContent, new { @rows = 7, @cols = 50, @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-6">
                                        @Html.CheckBox("bIsHidden", oQSStep.bIsHidden)
                                        <label for="inputEmail" class="gn">Is Hidden<span class="danger"></span></label>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-6">
                                        @Html.CheckBox("bInMemoryOnly", oQSStep.bInMemoryOnly)
                                        <label for="inputEmail" class="gn">InMemory Only<span class="danger"></span></label>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-6">
                                        @Html.CheckBox("bIsSaveNext", oQSStep.bIsSaveNext)
                                        <label for="inputEmail" class="gn">Is SaveNext<span class="danger"></span></label>
                                    </div>
                                </div>
                                @if (oQSStep.bIsSaveNext == true)
                                {
                                    <div class="form-group" id="saveNextbtn">
                                        <div class="col-md-6">
                                            <label for="inputEmail" class="gn">Name<span class="danger"></span></label>
                                            @Html.TextBox("sSaveBtnLabelSaveNext", oQSStep.sSaveBtnLabelSaveNext, new { @id = "sSaveBtnLabelSAveNext", @placeholder = "Enter Name for SaveNext Button", @class = "form-control" })
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group" style="display:none" id="saveNextbtn">
                                        <div class="col-md-6">
                                            <label for="inputEmail" class="gn">Name<span class="danger"></span></label>
                                            @Html.TextBox("sSaveBtnLabelSaveNext", oQSStep.sSaveBtnLabelSaveNext, new { @id = "sSaveBtnLabelSAveNext", @placeholder = "Enter Name for SaveNext Button", @class = "form-control" })
                                        </div>
                                    </div>
                                }
                                <div class="form-group">
                                    <div class="col-md-6">
                                        @Html.CheckBox("bIsSave", oQSStep.bIsSave)
                                        <label for="inputEmail" class="gn">Is Save<span class="danger"></span></label>
                                    </div>
                                </div>
                                @if (oQSStep.bIsSave == true)
                                {
                                    <div class="form-group" id="savebtn">
                                        <div class="col-md-6">
                                            <label for="inputEmail" class="gn">Name<span class="danger"></span></label>
                                            @Html.TextBox("sSaveBtnLabelSave", oQSStep.sSaveBtnLabelSave, new { @id = "sSaveBtnLabelSAve", @placeholder = "Enter Name for Save Button", @class = "form-control" })
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group" id="savebtn">
                                        <div class="col-md-6">
                                            <label for="inputEmail" class="gn">Name<span class="danger"></span></label>
                                            @Html.TextBox("sSaveBtnLabelSave", oQSStep.sSaveBtnLabelSave, new { @id = "sSaveBtnLabelSAve", @placeholder = "Enter Name for Save Button", @class = "form-control" })
                                        </div>
                                    </div>
                                }
                                <div class="form-group">
                                    <div class="col-md-6">
                                        @Html.CheckBox("bIsBack", oQSStep.bIsBack)
                                        <label for="inputEmail" class="gn">Is Back<span class="danger"></span></label>
                                    </div>
                                </div>
                                @if (oQSStep.bIsBack == true)
                                {
                                    <div class="form-group" id="backbtn">
                                        <div class="col-md-6">
                                            <label for="inputEmail" class="gn">Name<span class="danger"></span></label>
                                            @Html.TextBox("sBackBtnLabel", oQSStep.sBackBtnLabel, new { @placeholder = "Enter Name for Back Button", @class = "form-control" })
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group" id="backbtn">
                                        <div class="col-md-6">
                                            <label for="inputEmail" class="gn">Name<span class="danger"></span></label>
                                            @Html.TextBox("sBackBtnLabel", oQSStep.sBackBtnLabel, new { @id = "sBackBtnLabel", @placeholder = "Enter Name for Back Button", @class = "form-control" })
                                        </div>
                                    </div>
                                }

                                <div class="form-group">
                                    <div class="col-md-6">
                                        @Html.CheckBox("bIsContinue", oQSStep.bIsContinue)
                                        <label for="inputEmail" class="gn">Is Continue<span class="danger"></span></label>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-6">
                                        @Html.CheckBox("bIsHistory", oQSStep.bIsHistory)
                                        <label for="inputEmail" class="gn">Is History<span class="danger"></span></label>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-6">
                                        @Html.CheckBox("bIsCopy", oQSStep.bIsCopy)
                                        <label for="inputEmail" class="gn">Is Copy<span class="danger"></span></label>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">Status<span class="danger"></span></label>
                                        @Html.DropDownList("StatusTypeID", new SelectList(new List<Object>
                            {
                            new { key= 10 , value = "Active" },
                            new { key= 20 , value = "Inactive" }
                            }, "key", "Value", oQSStep.StatusTypeID), new { @class = "form-control" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-sm-10">
                                        <input type="submit" class="btn btn-theme" value="Save" />
                                        <button type="button" class="btn btn-theme decline" id="CancelBO">Cancel</button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div id="SectionsShowDialog" class="dialog-box" title="Confirm Message" style="background-color:white;">
    @*@{
            Html.RenderPartial("_StepSections", Model);
        }*@
</div>
<div id="XICParams"></div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#backbtn").hide();
        $("#savebtn").hide();
        $("#saveNextbtn").hide();$("#ContentDiv").hide();
        if('@oQSStep.ID' == 0)
        {
            $("#bIsHistory").prop('checked', true);
            $("#bIsCopy").prop('checked', true);
        }
        else
            if('@oQSStep.ID' > 0)
            {
                if('@oQSStep.bIsHistory' == "False")
                {
                    $("#bIsHistory").prop('checked', false);
                }
                else
                {
                    $("#bIsHistory").prop('checked', true);
                }

                if('@oQSStep.bIsCopy' == "False")
                {
                    $("#bIsCopy").prop('checked', false);
                }
                else
                {
                    $("#bIsCopy").prop('checked', true);
                }
                if('@oQSStep.bIsSave' == "True")
                {
                    $("#savebtn").show();
                    $("#sSaveBtnLabelSAve").val('@oQSStep.sSaveBtnLabel');
                }
                if('@oQSStep.bIsBack' == "True")
                {
                    $("#backbtn").show();
                    $("#sBackBtnLabel").val('@oQSStep.sBackBtnLabel');
                }if('@oQSStep.bIsSaveNext' == "True")
                {
                    $("#saveNextbtn").show();
                    $("#sSaveBtnLabelSAveNext").val('@oQSStep.sSaveBtnLabel');
                }
            }

        var ComponentType;
        var SecDisplayAs = 0;
        var SecOrder = 0;
        var SectionID =0;
        var sSectionName = "";
        var SectionCode;
        var ShowID = 0;
        var PairCount = parseInt('@oQSStep.Sections.Count()');
        $('#SectionsShowDialog').hide();
        Hidedivs();
        $('#CancelBO').click(function () {
            window.close();
        });
        $('#ResetBoBtn').click(function () {
            $('#XIStepsForm')[0].reset();
            $('#XIStepsForm .taberrormsg').find('span').html('');
        });

        $('#bIsSaveNext').change(function(){
            if($("#bIsSaveNext").is(':checked')){
                $("#saveNextbtn").show();
                $("#savebtn").hide();
                $("#bIsSave").prop("checked", false);
            }
            else{
                $("#saveNextbtn").hide();
            }
        });

        $('#bIsSave').change(function(){
            if($("#bIsSave").is(':checked')){
                $("#savebtn").show();
                $("#saveNextbtn").hide();
                $("#bIsSaveNext").prop("checked", false);
            }
            else{
                $("#savebtn").hide();
            }
        });

        $('#bIsBack').change(function(){
            if($("#bIsBack").is(':checked')){
                $("#backbtn").show();
            }
            else{
                $("#backbtn").hide();
            }
        });

        $(document.body).on('click', 'button#AddMoreQSLink', function () {
            var Divs = $('.QSLPairs').first().clone();
            $(Divs).find('input').val('');
            $('#QSLinkPairs').append(Divs);
            $('#QSLinkPairs').last().css("display", "block");
            $( ".qslinkvalue" ).autocomplete({
                source: availableXiLinkCodes
            });
        });

        $(document.body).on('click', 'button.DeleteQSLinkPair', function () {
            $(this).closest(".QSLPairs").hide();
        });

        $(document.body).on('change', 'select.SecDisplayAsDDL ', function(){
            $(this).closest('div').next('div').find('.ShowSectionDlg').attr('data-sectionid', '0')
            $(this).closest('div').next('div').find('.ShowSectionDlg').attr('data-secid', '0')
        })

        $(document.body).on('click', 'button.ShowSectionDlg', function(){
            ShowID = $(this).attr('data-showid');
            var StepData = @Html.Raw(Json.Encode(oQSStep.Sections));
            SectionID = $(this).attr('data-sectionid');
            SecDisplayAs = $(this).closest('div').prev('div').prev('div').find('.SecDisplayAsDDL').val();
            SecOrder = $(this).closest('div').prev('div').find('#SecOrder').val();
            sSectionName = $(this).closest('div').prev('div').prev('div').find('.SectionName').val();
            var SecID = $(this).attr('data-secid');
            var iQSStepDefID = @oQSStep.ID;
            var Data = {StepDefID:iQSStepDefID, SectionID:SectionID, DisplayAs:SecDisplayAs, SecID:SecID, SectionName:sSectionName};
            if(SecDisplayAs != "")
            {
                $.ajax({
                    url: '@Url.Action("GetSectionContentDialog", "XISemantics")',
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    datatype: "html",
                    cache: false,
                    async: false,
                    data: JSON.stringify(Data),
                    success: function (data) {
                        $('#SectionsShowDialog').html(data);
                        $("#SectionsShowDialog").dialog({
                            modal:true,
                            width: 700,
                            height: 500,
                            title:'Section',
                            close: function (event, ui) {
                                $(this).dialog('close');
                            }
                        });
                    }
                });
            }
            //$( ".XIField" ).autocomplete({
            //    source: availableTags
            //});
            $( ".XIField" ).autocomplete({
                source: function(request, response){
                    var List = [];
                    for(var k=0;k<XIFields.length;k++){
                        List.push({label:XIFields[k].text, value:XIFields[k].Value});
                    }
                    response($.ui.autocomplete.filter(List, request.term));
                },
                select: function( event, ui ) {
                    $(this).val(ui.item.label);
                    $(this).attr('data-value', ui.item.value);
                    return false;
                },
                focus: function(event, ui) {
                    $(this).val(ui.item.label);
                    $(this).attr('data-value', ui.item.value);
                    return false;
                }
            });
            $( ".qslinkvalue" ).autocomplete({
                source: availableXiLinkCodes
            });
        });

        $('#iDisplayAs').change(function () {
            $('.ComponentBtn').html('');
            if ($(this).val() > 0) {
                Hidedivs();
                //Component
                //Sections
                if ($(this).val() == 20) {
                    // $('#SectionsDiv').show();
                }
                    //Fileds
                else if ($(this).val() == 30) {
                    $('#FieldsDiv').show();
                }
                    //Component
                else if ($(this).val() == 40) {
                    fncPopulateDDL("XI Component");
                    $('#ContentDiv').show();
                    $('.ComponentBtn').html('<button type="button" class="btn btn-theme" id="XIComponentBtn" data-type="QSStep"><i class="fa fa-bars"></i></button>');
                }
                    //HTML
                else if ($(this).val() == 50) {
                    $('#HtmlContent').show();
                }
                    //1-Click
                else if ($(this).val() == 70) {
                    fncPopulateDDL("1-Click");
                    $('#ContentDiv').show();
                }
                else {
                    Hidedivs();
                }
            }
        });



        $(document.body).on('click','button#XIComponentBtn', function () {
            var ComponentID = 0;
            var ID = 0;
            ComponentType = $(this).attr('data-type');
            if(ComponentType == "QSStep"){
                ComponentID = $('#FKiContentID').val();
                ID = '@oQSStep.ID';
            }
            else if(ComponentType == "QSStepSection"){
                ComponentID = $('#ContentDDL').val();
                ID = SectionID;
            }

            if (ComponentID > 0) {
                $.ajax({
                    type: 'get',
                    url: '@Url.Action("GetXIComponentByID", "XIComponents")',
                    contentType: "application/json; charset=utf-8",
                    data: { iXIComponentID: ComponentID, sType : ComponentType, ID: ID },
                    cache: false,
                    async: false,
                    dataType: 'html',
                    success: function (data) {
                        $('#XICParams').html(data);
                        $("#XICParams").dialog({
                            modal: true,
                            width: 600
                        });
                    }
                });
            }
        });

        $(document.body).on('click', 'button.SaveXIComponentParamsBtn', function () {
            var Component;
            var ID = 0;
            if(ComponentType == "QSStep"){
                ComponentID = $('#FKiContentID').val();
                ID = '@oQSStep.ID';
            }
            else if(ComponentType == "QSStepSection"){
                ComponentID = $('#ContentDDL').val();
                ID = SectionID;
            }
            if(ComponentID>0){
                $.ajax({
                    type: 'get',
                    url: '@Url.Action("GetXIComponentDetailsByID", "XIComponents")',
                    contentType: "application/json; charset=utf-8",
                    data: {iXIComponentID: ComponentID, sType : ComponentType, ID: ID},
                    cache: false,
                    async: false,
                    dataType: 'json',
                    success: function (data) {
                        Component = data;
                    }
                });
            }
            var MappingID = '@oQSStep.ID';
            var NVPairs = [];
            $('.NVPairs').each(function () {
                var Name; var Value;
                $(this).find('label').each(function (i, obj) {
                    Name = $(this).attr('data-sName');
                });
                $(this).find('input').each(function (i, obj) {
                    var Nname = obj.name;
                    if (Nname == "Names") {
                        Value = $(this).val();
                    }
                });
                if ((Name && Name.length > 0) && (Value && Value.length > 0)) {
                    //NVPairs.push(Name + "-" + Value);
                    for(i=0;i<Component.XIComponentNVs.length;i++){
                        if(Component.XIComponentNVs[i].sName == Name){
                            Component.XIComponentNVs[i].sValue = Value;
                        }
                    }
                }
            });
            $('.TNVPairs').each(function () {
                var Name; var Value;
                $(this).find('label').each(function (i, obj) {
                    Name = $(this).attr('data-sName');
                });
                $(this).find('input').each(function (i, obj) {
                    var Nname = obj.name;
                    if (Nname == "Names") {
                        Value = $(this).val();
                    }
                });
                if ((Name && Name.length > 0) && (Value && Value.length > 0)) {
                    //NVPairs.push(Name + "-" + Value);
                    for(i=0;i<Component.XIComponentTriggers.length;i++){
                        if(Component.XIComponentTriggers[i].sName == Name){
                            Component.XIComponentTriggers[i].sValue = Value;
                        }
                    }
                }
            });
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SaveComponentParams", "XIComponents")',
                data: JSON.stringify({ oComponent: Component, sType:ComponentType, iLoadID: ID }),//JSON.stringify(Component),
                contentType: 'application/json;',
                dataType: 'json',
                traditional: true,
                success: function (data) {
                    if(ComponentType == "QSStep"){
                        $('#ComponentNVIDs').val(data);
                    }
                    else if(ComponentType == "QSStepSection"){
                        $('#SecComponentNVIDs').val(data);
                    }
                    $("#XICParams").dialog('close');
                    ComponentType = null;
                }
            });
        });

        //Add More Fields
        $('#AddMore').click(function () {
            var Divs = $('.NVPairs').first().clone();
            $(Divs).find('input').val('');
            $('#NameValuePairs').append(Divs);
            $('.NVPairs').last().css("display", "block");
            if(Divs.length > 0)
            {
                $( ".XIField" ).autocomplete({
                    source: function(request, response){
                        var List = [];
                        for(var k=0;k<XIFields.length;k++){
                            List.push({label:XIFields[k].text, value:XIFields[k].Value});
                        }
                        response($.ui.autocomplete.filter(List, request.term));
                    },
                    select: function( event, ui ) {
                        $(this).val(ui.item.label);
                        $(this).attr('data-value', ui.item.value);
                        return false;
                    },
                    focus: function(event, ui) {
                        $(this).val(ui.item.label);
                        $(this).attr('data-value', ui.item.value);
                        return false;
                    }
                });
            }
        });

        //Add More Sections
        $('#AddMoreSections').click(function () {
            var Divs = $('.SecPairs').first().clone();
            $(Divs).find('select').val('');
            $(Divs).find('input').val('');
            $(Divs).find('button.ShowSectionDlg').attr('data-sectionid','0')
            $(Divs).find('button.ShowSectionDlg').attr('data-secid','0')
            $(Divs).find('button.ShowSectionDlg').attr('data-showid',PairCount +1);
            $(Divs).find('button.DeleteSecPair').attr('data-sectionid','0')
            $(Divs).find('button.DeleteSecPair').attr('data-secid','0')
            $(Divs).find('button.DeleteSecPair').attr('data-deleteid',PairCount +1);
            PairCount++;
            $('#SectionPairs').append(Divs);
            $('.SecPairs').last().css("display", "block");

        });

        //Add More Fields in Sections
        $(document.body).on('click', 'button#SecAddMore', function(){
            var Divs = $('.SecNVPairs').first().clone();
            $(Divs).find('input').val('');
            $('#SecNameValuePairs').append(Divs);
            $('.SecNVPairs').last().css("display", "block");
            if(Divs.length > 0)
            {
                $( ".XIField" ).autocomplete({
                    source: function(request, response){
                        var List = [];
                        for(var k=0;k<XIFields.length;k++){
                            List.push({label:XIFields[k].text, value:XIFields[k].Value});
                        }
                        response($.ui.autocomplete.filter(List, request.term));
                    },
                    select: function( event, ui ) {
                        $(this).val(ui.item.label);
                        $(this).attr('data-value', ui.item.value);
                        return false;
                    },
                    focus: function(event, ui) {
                        $(this).val(ui.item.label);
                        $(this).attr('data-value', ui.item.value);
                        return false;
                    }
                });
            }
        });

        $(document.body).on('click', 'button.DeleteNVPair', function () {
            $(this).closest(".NVPairs").hide();
        });

        $(document.body).on('click', 'button.DeleteSecNVPair', function () {
            var Div = $(this).closest('.SecNVPairs');
            $(this).closest('.SecNVPairs').removeClass('visible').hide();
            var available = $(this).closest('.SecNVPairs').removeClass('visible').hide();
        });

        $(document.body).on('click', 'button.DeleteSecPair', function () {
            var SectionID = $(this).attr('data-secid');
            var SecPairsHide =  $(this).closest(".SecPairs");
            $("#Remove").dialog({
                title: "Are you sure you want to delete ? ",
                buttons : {
                    "Yes" : function() {
                        if(SectionID > 0)
                        {
                            SecPairsHide.hide();
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("DeleteSectionFieldsBySectionID", "XISemantics")',
                                data: { ID: SectionID },
                                cache: false,
                                async: false,
                                dataType: 'json',
                                success: function (data) {
                                }
                            });
                        }
                        $(this).dialog("close");
                    },
                    "No" : function() {
                        $(this).dialog("close");
                    }
                }
            });
        });

        //XIFields Autocomplete
        var XIFields = @Html.Raw(Json.Encode(oQSStep.XIFields));
        var availableTags = Object.keys(XIFields);
        var XILinks = @Html.Raw(Json.Encode(oQSStep.XILinks));
        var availableXiLinks = Object.keys(XILinks);
        var XiLinkCodes = @Html.Raw(Json.Encode(oQSStep.XICodes));
        var availableXiLinkCodes = Object.keys(XiLinkCodes);
        $( ".XIField" ).autocomplete({
            source: function(request, response){
                var List = [];
                for(var k=0;k<XIFields.length;k++){
                    List.push({label:XIFields[k].text, value:XIFields[k].Value});
                }
                response($.ui.autocomplete.filter(List, request.term));
            },
            select: function( event, ui ) {
                $(this).val(ui.item.label);
                $(this).attr('data-value', ui.item.value);
                return false;
            },
            focus: function(event, ui) {
                $(this).val(ui.item.label);
                $(this).attr('data-value', ui.item.value);
                return false;
            }
        });
        if('@oQSStep.iDisplayAs'== 20){
            //$('#SectionsDiv').show();
        }
        else if('@oQSStep.iDisplayAs'== 30){
            $('#FieldsDiv').show();
        }
        else if('@oQSStep.iDisplayAs'== 40){
            $('#ContentDiv').show();
            fncPopulateDDL("XI Component");
            $('#FKiContentID').val('@oQSStep.FKiContentID');
            $('.ComponentBtn').html('<button type="button" class="btn btn-theme" id="XIComponentBtn" data-type="QSStep"><i class="fa fa-bars"></i></button>');
        }
        else if('@oQSStep.iDisplayAs'== 50){
            $('#HtmlContent').show();
        }
        else if('@oQSStep.iDisplayAs'== 70){
            $('#ContentDiv').show();
            fncPopulateDDL("1-Click");
            $('#FKiContentID').val('@oQSStep.i1ClickID');
        }

        $(document.body).on('click', 'button.DeleteResultPair', function () {
            var Div = $(this).closest('.NavPairs');
            $(Div).find('input.IsSaveValue').each(function (l)
            {
                $(this).val(false);
            });
            $(this).closest('.NavPairs').removeClass('visible').hide();
            $('.AddMoreNav').attr('data-pairno', pairno-1);
        });

        $(document.body).on('click', 'button#SaveSecFieldsBtn', function () {
            var SecID = $('#SecID').val();
            var StepID = '@oQSStep.ID';
            var NVPairs = [];
            var QSLNVPairs = [];
            var IsGroup = false;
            var GroupDescription;
            var GroupLabel;
            var IsHidden = false;
            sSectionName = $('#SectionNametxtbox').val();
            SectionCode = $('#SectionCodetxtbox').val();
            $('.SecNVPairs:visible').each(function () {
                var Name; var Value;
                $(this).find('input').each(function (i, obj) {
                    var Nname = obj.name;
                    if (Nname == "StepXIFiled") {
                        Value = $(this).attr('data-value');
                    }
                });
                if (Value && Value.length > 0) {
                    NVPairs.push(Value);
                }
            });
            $('.QSLPairs:visible').each(function () {
                var Name; var Value;
                $(this).find('input').each(function (i, obj) {
                    var Nname = obj.name;
                    if (Nname == "QSLinktbox") {
                        Value = $(this).val();
                    }
                });
                if (Value && Value.length > 0) {
                    QSLNVPairs.push(Value);
                }
            });
            if($('#IsFieldsGroup').is(":checked")){
                IsGroup = true;
                GroupDescription = $('#FieldsGroupDescription').val();
                GroupLabel = $('#FieldsGroupLabel').val();
            }
            if($('#IsSectionHidden').is(":checked")){
                IsHidden = true;
            }

            var Data = {StepID: StepID, SecNVPairs: NVPairs, DisplayAs:SecDisplayAs, SecID: SecID,SectionName:sSectionName, bIsGroup:IsGroup, sGroupDescription:GroupDescription, sGroupLabel:GroupLabel, bIsHidden:IsHidden, iOrder:SecOrder, sSectionCode:SectionCode, QSCodes:QSLNVPairs};
            $.ajax({
                url: '@Url.Action("SaveSectionFields", "XISemantics")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                cache: false,
                async: false,
                data: JSON.stringify(Data),
                success: function (data) {
                    var SectionID = data.ID;
                    $('button[data-showid="'+ShowID+'"]').attr('data-sectionid',SectionID);
                    $('button[data-showid="'+ShowID+'"]').attr('data-secid',SectionID);
                    $('button[data-deleteid="'+ShowID+'"]').attr('data-sectionid',SectionID);
                    $('button[data-deleteid="'+ShowID+'"]').attr('data-secid',SectionID);
                    var ExistingIDs = $('#SectionIDs').val();
                    if(ExistingIDs && ExistingIDs.length>0){
                        ExistingIDs = ExistingIDs + ","+data.ID + ',';
                    }
                    else{
                        ExistingIDs = ExistingIDs + data.ID + ',';
                    }
                    $("#SectionsShowDialog").dialog('close');
                    ExistingIDs = ExistingIDs.substr(0, ExistingIDs.length -1);
                    $('#SectionIDs').val(ExistingIDs);
                }
            });
        });

        $(document.body).on('click', 'button#SaveSecContentBtn', function () {
            var DisplayAs = $('#SecContentDisplayAs').val();
            var SecID = $('#SecID').val();
            var IsHidden = false;
            if($('#IsSectionHidden').is(":checked")){
                IsHidden = true;
            }
            var QSLNVPairs = [];
            $('.QSLPairs:visible').each(function () {
                var Name; var Value;
                $(this).find('input').each(function (i, obj) {
                    var Nname = obj.name;
                    if (Nname == "QSLinktbox") {
                        Value = $(this).val();
                    }
                });
                if (Value && Value.length > 0) {
                    QSLNVPairs.push(Value);
                }
            });
            var ContentID = $(this).closest('div').prev('div').prev('div').find('#ContentDDL').val();
            sSectionName = $(this).closest('div').prev('div').prev('div').prev('div').prev('div').prev('div').find('.SectionName').val();
            SectionCode = $(this).closest('div').prev('div').prev('div').prev('div').prev('div').find('.SectionCode').val();
            if(ContentID > 0){
                var Data = {StepID: '@oQSStep.ID', DisplayAs:DisplayAs, ContentID:ContentID, SecID: SecID, SectionName:sSectionName,sParams: $('#SecComponentNVIDs').val(), bIsHidden: IsHidden, iOrder:SecOrder, sSectionCode:SectionCode, QSCodes:QSLNVPairs };
                $.ajax({
                    url: '@Url.Action("SaveSectionContent", "XISemantics")',
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    cache: false,
                    async: false,
                    data: JSON.stringify(Data),
                    success: function (data) {
                        var SectionID = data.ID;
                        $('button[data-showid="'+ShowID+'"]').attr('data-sectionid',SectionID);
                        $('button[data-showid="'+ShowID+'"]').attr('data-secid',SectionID);
                        $('button[data-deleteid="'+ShowID+'"]').attr('data-sectionid',SectionID);
                        $('button[data-deleteid="'+ShowID+'"]').attr('data-secid',SectionID);
                        var ExistingIDs = $('#SectionIDs').val();
                        if(ExistingIDs && ExistingIDs.length>0){
                            ExistingIDs = ExistingIDs +","+ data.ID + ',';
                        }
                        else{
                            ExistingIDs = ExistingIDs + data.ID + ',';
                        }
                        $("#SectionsShowDialog").dialog('close');
                        ExistingIDs = ExistingIDs.substr(0, ExistingIDs.length -1);
                        $('#SectionIDs').val(ExistingIDs);
                    }
                });
            }
            else{
                $('#ContentDDL').focus();
            }
        });

        $(document.body).on('click', 'button#SaveSecHTMLContentBtn', function () {
            var DisplayAs = $('#SecContentDisplayAs').val();
            var SecID = $('#SecID').val();
            var IsHidden = false;
            if($('#IsSectionHidden').is(":checked")){
                IsHidden = true;
            }
            var HTMLContent = $(this).closest('div').prev('div').find('#SecHTMLContent').val();
            sSectionName = $(this).closest('div').prev('div').prev('div').prev('div').prev('div').find('.SectionName').val();
            SectionCode = $(this).closest('div').prev('div').prev('div').prev('div').find('.SectionCode').val();
            if(HTMLContent.length > 0){
                var Data = {StepID: '@oQSStep.ID', DisplayAs:DisplayAs, sHTMLContent:HTMLContent, SecID: SecID,SectionName:sSectionName, bIsHidden : IsHidden, iOrder:SecOrder, sSectionCode:SectionCode};
                $.ajax({
                    url: '@Url.Action("SaveSectionHTMLContent", "XISemantics")',
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    cache: false,
                    async: false,
                    data: JSON.stringify(Data),
                    success: function (data) {
                        var SectionID = data.ID;
                        $('button[data-showid="'+ShowID+'"]').attr('data-sectionid',SectionID);
                        $('button[data-showid="'+ShowID+'"]').attr('data-secid',SectionID);
                        $('button[data-deleteid="'+ShowID+'"]').attr('data-sectionid',SectionID);
                        $('button[data-deleteid="'+ShowID+'"]').attr('data-secid',SectionID);
                        var ExistingIDs = $('#SectionIDs').val();
                        if(ExistingIDs && ExistingIDs.length>0){
                            ExistingIDs = ExistingIDs +","+ data.ID + ',';
                        }
                        else{
                            ExistingIDs = ExistingIDs + data.ID + ',';
                        }
                        $("#SectionsShowDialog").dialog('close');
                        ExistingIDs = ExistingIDs.substr(0, ExistingIDs.length -1);
                        $('#SectionIDs').val(ExistingIDs);
                    }
                });
            }
            else{
                $('#ContentDDL').focus();
            }
        });

    })

    function fncPopulateDDL(Type) {
        $.ajax({
            url: '../XISemantics/PopulateDDL',
            type: "GET",
            contentType: "application/json; charset=utf-8",
            datatype: "HTML",
            cache: false,
            async: false,
            data: { sDDLType: Type },
            success: function (data) {
                $('#ContentLabel').html(Type);
                $('#FKiContentID').empty();
                // $('#FKiContentID').append('<option val="">--Select--</option>');
                for (i = 0; i < data.length; i++) {
                    $('#FKiContentID').append('<option value="' + data[i].Value + '">' + data[i].text + '</option>');
                }
            }
        });
    }

    function OnFormBegin() {
        $('#XIStepsForm').block({
            message: '<h4>Saving</h4>',
            blockMsgClass: 'report-success',
        });
    }

    function Hidedivs() {
        $('#FieldsDiv').hide();
        $('#SectionsDiv').hide();
        $('#ContentDiv').hide();
        $('#HtmlContent').hide();
        $('.SectionNames').hide();
    }

    function OnComplete(response) {
        var StepID = response.ID;
        if($('#iDisplayAs').val()==30){
            var NVPairs = [];
            $('.NVPairs:visible').each(function () {
                var Name; var XIField;
                $(this).find('input').each(function (i, obj) {
                    var Nname = obj.name;
                    if (Nname == "StepXIFiled") {
                        XIField = $(this).val();
                    }
                });
                if (XIField.length > 0) {
                    NVPairs.push(XIField);
                }
            });
            var model = { iStepID: StepID, XIFields: NVPairs };
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SaveStepXIFields", "XISemantics")',
                data: JSON.stringify(model),
                contentType: 'application/json;',
                dataType: 'json',
                traditional: true,
                success: function (data) {
                    CustomMessage(data.ResponseMessage, data.Status);
                    $('#XIStepsForm').unblock();
                    $('#XIStepsForm')[0].reset();
                    //opener.window.location.reload();
                }
            });
        }
        else{
            $('#XIStepsForm').unblock();
            CustomMessage(response.ResponseMessage, response.Status);
        }
    }

    function NavOnFormBegin() {
        $('#XINavsForm').block({
            message: '<h4>Saving</h4>',
            blockMsgClass: 'report-success',
        });
    }

    function NavOnComplete(e) {
        $('#XINavsForm').unblock();
        if (e.Status == false) {
            $("#BootstrpError").show();
            $("#BootstrpError").append("<strong>Failure!</strong> OOPS looks like there is some error");
            $(function () {
                setTimeout(function () {
                    $("#BootstrpError").hide('blind', {}, 2000)
                }, 5000);
            });
        }
        else {
            $("#BootstrpAlertSuccess").show();
            $("#BootstrpAlertSuccess").append("<strong>Success!</strong> Navigation have been created successfully.");
            $(function () {
                setTimeout(function () {
                    $("#BootstrpAlertSuccess").hide('blind', {}, 2000)
                }, 5000);
            });
        }
    }

</script>
<div id="Remove"></div>