@model XIDNA.Models.OrganizationLocations
@using XIDNA.ViewModels
@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
}
<script>
    $(document).ready(function () {
        if ('@Model.Role' == '@EnumRoles.SuperAdmin.ToString()') {
            $("#OrgDDL").show();
        }
        else {
            $("#OrgDDL").hide();
        }
    });
</script>
<style>
    #DynamicForm {
        margin-top: 15px;
    }

    .locerrormsg {
        margin-top: 30px;
    }
</style>
<section class="content-header hedr">
    <h1> Edit Location </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Organization Management</a></li>
        <li class="active">Home</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="box">
            <div class="box-body">
                <div class="innerborder">
                    @using (Ajax.BeginForm("SaveOrganizationLocation", "Organizations", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "Field", OnSuccess = "OnSuccess" }, new { @id = "FieldsForm", @class = "form-horizontal" }))
                        {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m=>m.OrganizationID)
                        <div class="form-horizontal">
                            @Html.HiddenFor(m=>m.ID)
                            @*string with Value "EDIT*@
                            @Html.HiddenFor(m => m.CreationType, new { @Value = "Edit" })
                            <div id="OrgDDL">
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label for="inputEmail" class="gn">Organization</label>
                                        @*===============Dynamic value from the database for dropdown where Id value is taken based on selection*@
                                        @Html.DropDownListFor(model => model.OrganizationID, new SelectList(Model.OrgDetails, "Value", "Text"), "--Select--", new { @class = "form-control", @id = "Status", @disabled = "disabled" })

                                    </div>
                                    <div class="col-sm-3 errormsg">
                                        @Html.ValidationMessageFor(m => m.OrganizationID, null, new { @class = "red" })
                                    </div>

                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Location<span class="danger">*</span></label>
                                    @Html.TextBoxFor(model => model.Location, new { @id = "Location", @placeholder = "Enter location", @class = "form-control"})
                                </div>
                                <div class="col-sm-7 locerrormsg">
                                    @Html.ValidationMessageFor(m => m.Location, null, new { @class = "red" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Location Code<span class="danger">*</span></label>
                                    @Html.TextBoxFor(model => model.LocationCode, new { @id = "LocationCode", @placeholder = "Enter location code", @class = "form-control"})
                                </div>
                                <div class="col-sm-7 locerrormsg">
                                    @Html.ValidationMessageFor(m => m.LocationCode, null, new { @class = "red" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Status<span class="danger"></span></label>
                                    @Html.DropDownListFor(m => m.StatusTypeID, new SelectList(new List<Object>{
                                               new { key= 10 , value = "Active" },
                       new { key= 20 , value = "Inactive" }
                    }, "key", "Value"), new { @class = "form-control", @id = "Status" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-10">
                                    <input type="submit" class="btn btn-theme" value="Save" />
                                    <input type="submit" class="btn btn-theme decline" id="LocCancel" value="Cancel" />
                                </div>
                            </div>
                        </div>
                        }
                    <div id="SpecificOrgLocation">
                        @{
                                Html.RenderAction("OrgLocationGrid", "Organization", new { LocOrgID = @Model.OrganizationID });
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<div class="dialog-box OrglocDlg" title="Confirm Message" style="background-color:white;"></div>

<script>
    $(document).ready(function () {
        $('#LocCancel').click(function () {
            window.close();
        });
    });

    //function OnComplete() {
    //    $('#Locationfrm')[0].reset();
    //  // $('#dialog').dialog('close');
    //}

    function OnSuccess(e) {
        var value = e;
        if (e > 0) {
            $.ajax({
                url: '@Url.Action("OrgLocationGrid", "Organization")',
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                datatype: "html",
                data: { LocOrgID: value },
                cache: false,
                success: function (data) {
                    $('#SpecificOrgLocation').empty();
                    $('#SpecificOrgLocation').html(data);
                },
                error: function (data) { }
            });
            $('.OrglocDlg').unblock();
            opener.location.reload();
            CustomMessage(e.ResponseMessage, e.Status);
        }
        else {
            $('.OrglocDlg').unblock();
            opener.location.reload();
            CustomMessage(e.ResponseMessage, e.Status);
        }
    }

</script>

