@model XIDNA.ViewModels.VMOrganizationForms

@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
}
<script src="~/Scripts/ajaxfileupload.js"></script>
<script>
    $(document).ready(function () {
        var SubID = '@Model.SubsriptionID';
        $.ajax({
            url: '@Url.Action("SpecificSubCoulmns", "Organization")',
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            data: { SubID: SubID },
            cache: false,
            success: function (data) {
                $('#SpecificSubCoulmns').empty();
                $('#SpecificSubCoulmns').html(data);
            },
            error: function (data) { }
        });
        //Disabling DropDownLists
        if ('@Model.ID' != 0) {
            $("#suborgSources").prop("disabled", true);
            $("#Classes").prop("disabled", true);
        }
        

        $(document.body).on('change', 'select#Organizations', function () {
            var orgid = $('#Organizations :selected').val();
            if (orgid > 0) {
                $.ajax({
                    url: '@Url.Action("Sources", "Organization")',
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    datatype: "JSON",
                    data: { OrgID: orgid },
                    cache: false,
                    success: function (data) {
                        $('#Sources').empty();
                        $('#Sources').append('<option value="">--Select--</option>');
                        if (data.length > 0) {
                            for (i = 0; i < data.length; i++) {
                                $('#Sources').append('<option value="' + data[i].Value + '">' + data[i].text + '</option>');
                            }
                        }
                    },
                    error: function (data) { }
                });
                $.ajax({
                    url: '@Url.Action("GetOrgClasses", "Organization")',
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    datatype: "JSON",
                    data: { OrgID: orgid },
                    cache: false,
                    success: function (data) {
                        $('#Classes').empty();
                        $('#Classes').append('<option value="">--Select--</option>');
                        if (data.length > 0) {
                            for (i = 0; i < data.length; i++) {
                                $('#Classes').append('<option value="' + data[i].Value + '">' + data[i].text + '</option>');
                            }
                        }
                    },
                    error: function (data) { }
                });

                $.ajax({
                    url: '@Url.Action("SpecificSubscriptions", "Organization")',
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    datatype: "html",
                    data: { OrgID: orgid },
                    cache: false,
                    success: function (data) {
                        $('#SpecificSubscriptions').empty();
                        $('#SpecificSubscriptions').html(data);
                    },
                    error: function (data) { }
                });
                $('#Types').empty();
                $('#Types').append('<option value="">--Select--</option>');
                $('#Providers').val('');
            }
            else {
                $('#Sources').empty();
                $('#Sources').append('<option value="">--Select--</option>');
                $('#Classes').empty();
                $('#Classes').append('<option value="">--Select--</option>');
                $('#SpecificSubscriptions').empty();
            }
        });
        $(document.body).on('change', 'select#Sources', function () {
            var source = $('#Sources :selected').val();
            if (source == "") {
                source = 0;
            }
            var orgid = 0;
            if ('@Model.SubOrganizationID' > 0) {
                var orgid = parseInt('@Model.SubOrganizationID');
            }
            else {
                var orgid = $('#Organizations :selected').val();
            }
            $.ajax({
                url: '@Url.Action("SpecificSubscriptions", "Organization")',
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                datatype: "html",
                data: { OrgID: orgid, SourceID: source },
                cache: false,
                success: function (data) {
                    $('#SpecificSubscriptions').html(data);
                },
                error: function (data) { }
            });
            @*if (source > 0 && orgid > 0) {
                $.ajax({
                    url: '@Url.Action("GetSourceClasses", "Organization")',
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    datatype: "JSON",
                    data: { SourceID: source, OrgID: orgid },
                    cache: false,
                    success: function (data) {
                        $('#Classes').empty();
                        $('#Classes').append('<option value="">--Select--</option>');
                        if (data.length > 0) {
                            for (i = 0; i < data.length; i++) {
                                $('#Classes').append('<option value="' + data[i].Value + '">' + data[i].text + '</option>');
                            }
                        }
                    },
                    error: function (data) { }
                });
            }
        else {
                $('#Classes').empty();
            $('#Classes').append('<option value="">--Select--</option>');
        }*@
        });
        @*$('#Classes').change(function () {
        var orgid = 0;
        if ('@Model.SubOrganizationID' > 0) {
            var orgid = parseInt('@Model.SubOrganizationID');
        }
        else {
            var orgid = $('#Organizations :selected').val();
        }
        var source = $('#Sources :selected').val();
        var type = $('#Types :selected').val();
        var clas = $('#Classes :selected').val();
        if (orgid > 0 && source > 0 && type && clas >0) {
            $.ajax({
                url: '@Url.Action("GetProviders", "Organization")',
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                datatype: "JSON",
                data: { OrgID: orgid, SourceID: source, Type:type, Clas:clas },
                cache: false,
                success: function (data) {
                    $('#Providers').empty();
                    $('#Providers').append('<option value="">--Select--</option>');
                    if (data.length > 0) {
                        for (i = 0; i < data.length; i++) {
                            $('#Providers').append('<option value="' + data[i].text + '">' + data[i].text + '</option>');
                        }
                    }
                },
                error: function (data) { }
            });
        }
        else {
            $('#Providers').empty();
            $('#Providers').append('<option value="">--Select--</option>');
        }
    });


            *@
        $('#Form').hide();
        if ('@Model.ID' == 0) {

        }
        else {
            $('#SubForms').click(function () {
                $('#Subscriptions').removeClass('active');
                $('#SubForms').addClass('active');
                $('#SubscriptionForm').hide();
                $('#Form').show();
            });
        }
        $('#Subscriptions').click(function () {
            $('#SubForms').removeClass('active');
            $('#Subscriptions').addClass('active');
            $('#Form').hide();
            $('#SubscriptionForm').show();
        });
        $('#postcode').keyup(function () {
            $(this).val($(this).val().toUpperCase());
        });
        $('#TypeHelp').hide();
        $('#Name').change(function () {
            var value = $(this).val();
            if (value.length > 0) {
                var Name = value.split('-')[0];
                var Type = value.split('-')[1];
                $('#TypeHelp').html('Enter value of type ' + Type);

                var OrgID = '@Model.OrganizationID';
                var SubscriptionID = '@Model.SubsriptionID';
                $.ajax({
                    url: '@Url.Action("OrgColumnDetails", "Organization")',
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    datatype: "JSON",
                    data: { Name: Name, SubscriptionID: SubscriptionID, OrgID: OrgID },
                    cache: false,
                    success: function (data) {
                        if (Name == data.FieldName) {
                            $("#FieldValue").val(data.FieldValue)
                        }
                        else {
                            $("#FieldValue").val('');
                        }

                    },
                    error: function (data) {
                        $("#FieldValue").val(''); //no records found and sub=null;

                    }
                });
                //mm //37953 end
            }
            else {
                $('#TypeHelp').html('');
            }
            @*var Name = $('#Name :selected').val();
            var OrgID = '@Model.OrganizationID';
            var SubscriptionID = '@Model.SubsriptionID';
            $.ajax({
                url: '@Url.Action("OrgColumnDetails", "Organization")',
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                datatype: "JSON",
                data: { Name: Name, SubscriptionID: SubscriptionID, OrgID: OrgID },
                cache: false,
                success: function (data) {
                    if (Name == data.FieldName) {
                        $("#FieldValue").val(data.FieldValue)
                    }
                    else {
                        $("#FieldValue").val('');
                    }

                },
                error: function (data) { }
            });*@
        });
        $('#FieldValue').focus(function () {
            $('#TypeHelp').show();
        });
        $('#FieldValue').focusout(function () {
            $('#TypeHelp').hide();
        });
    });
</script>

<style>
    .orgsorerror {
        margin-top: 28px;
    }
</style>
<section class="content-header hedr">
    @if (Model.ID != 0)
    {
        <h1> Edit Subscription </h1>

    }
    else
    {
        <h1> Add Subscription </h1>

    }
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Subscription</a></li>
        <li class="active">Home</li>
    </ol>
</section>
<div class="content">
    <div class="nav-tabs-custom">
        <ul class="nav nav-tabs" id="srctabs">
            <li id="Subscriptions" class="active"><a>Subscription</a></li>
            @if (Model.ID == 0)
            {
                <li id="SubForms" class="disabled"><a>Specific Details</a></li>
            }
            else
            {
                <li id="SubForms"><a>Specific Details</a></li>
            }
        </ul>
    </div>

    <div class="row">
        <div class="box">
            <div class="box-body">
                <div id="SubscriptionForm" class="tab-pane innerborder">
                    @*<div class="SubscriptionForm" id="SubscriptionForm">*@
                    @using (Ajax.BeginForm("SaveSubscription", "Organization", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "SubID", OnSuccess = "OnSubComplete" }, new { @id = "SubForm", @class = "form-horizontal" }))
                    {
                        @Html.HiddenFor(m => m.ID)
                        @Html.HiddenFor(m => m.SubID, new { @Value = 0 })
                        if (Model.SubOrganizationID == 0)
                        {
                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Organization<span class="danger">*</span></label>
                                    @Html.DropDownListFor(m => m.SubOrganizationID, new SelectList(Model.SubOrgList, "value", "text"), "--Select--", new { @class = "form-control", @id = "Organizations" })
                                </div>
                                <div class="col-sm-7 orgsorerror">
                                    @Html.ValidationMessageFor(m => m.SubOrganizationID, "", new { @class = "red" })
                                </div>
                            </div>
                        }
                        else
                        {
                            @Html.HiddenFor(m => m.SubOrganizationID)
                        }
                        if (Model.ID > 0)
                        {
                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Subscription ID:</label>
                                    @Html.DisplayFor(m => m.SubsriptionID)
                                </div>
                            </div>
                        }
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="inputEmail" class="gn">Source<span class="danger">*</span></label>
                                @Html.DropDownListFor(m => m.SourceID, new SelectList(Model.SourcesList, "value", "text"), "--Select--", new { @class = "form-control", @id = "Sources" })
                            </div>
                            <div class="col-sm-7 orgsorerror">
                                @Html.ValidationMessageFor(m => m.SourceID, "", new { @class = "red" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="inputEmail" class="gn">Class<span class="danger">*</span></label>
                                @Html.DropDownListFor(m => m.ClassID, new SelectList(Model.ClassesList, "value", "text"), "--Select--", new { @class = "form-control", @id = "Classes" })
                            </div>
                            <div class="col-sm-7 orgsorerror">
                                @Html.ValidationMessageFor(m => m.ClassID, "", new { @class = "red" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="inputEmail" class="gn">Location Code<span class="danger">*</span></label>
                                @Html.DropDownListFor(m => m.LocationCode, new SelectList(Model.LocationCodes, "Expression", "text"), "--Select--", new { @class = "form-control", @id = "LocCodes" })
                            </div>
                            <div class="col-sm-7 orgsorerror">
                                @Html.ValidationMessageFor(m => m.LocationCode, "", new { @class = "red" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="inputEmail" class="gn">Lead Cost<span class="danger">*</span></label>
                                @Html.TextBoxFor(m => m.LeadCost, new { @class = "form-control", @placeholder = "Enter Source Name" })
                            </div>
                            <div class="col-sm-7 orgsorerror">
                                @Html.ValidationMessageFor(m => m.LeadCost, "", new { @class = "red" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="inputEmail" class="gn">Email<span class="danger">*</span></label>
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Enter Email ID" })
                            </div>
                            <div class="col-sm-7 orgsorerror">
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "red" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="inputEmail" class="gn">Post Code<span class="danger">*</span></label>
                                @Html.TextBoxFor(m => m.PostCode, new { @class = "form-control", @placeholder = "Enter Post Code", @id = "postcode" })
                            </div>
                            <div class="col-sm-7 orgsorerror">
                                @Html.ValidationMessageFor(m => m.PostCode, "", new { @class = "red" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="inputEmail" class="gn">Renewal Date In Days<span class="danger">*</span></label>
                                @Html.TextBoxFor(m => m.RenewalDate, new { @class = "form-control", @placeholder = "Enter Renewal Date In Days", @Value=2 })
                            </div>
                            <div class="col-sm-7 orgsorerror">
                                @Html.ValidationMessageFor(m => m.RenewalDate, "", new { @class = "red" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="inputEmail" class="gn">Status<span class="danger"></span></label>
                                @Html.DropDownListFor(m => m.SubStatusTypeID, new SelectList(new List<Object>{
                                               new { key= 10 , value = "Active" },
                       new { key= 20 , value = "Inactive" }
                    }, "key", "Value"), new { @class = "form-control", @id = "Status" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-10">
                                <button type="submit" class="btn btn-theme" id="SubSave">Save</button>
                                @if (Model.ID == 0)
                                {
                                    <button type="reset" class="btn btn-theme reverse" id="SubReset">Reset</button>
                                }
                                <button type="button" class="btn btn-theme decline" id="SubCancel">Cancel</button>
                            </div>
                        </div>
                    }
                    <div id="SpecificSubscriptions">
                        @if (Model.SubOrganizationID != 0)
                        {
                            {
                                Html.RenderAction("SpecificSubscriptions", "Organization", new { OrgID = Model.SubOrganizationID, SourceID = Model.SourceID });
                            }
                        }
                    </div>
                </div>
                <div id="Form" class="tab-pane">
                    <div class="innerborder">
                        @using (Ajax.BeginForm("SaveSubscriptionColumns", "Organization", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "Test", OnSuccess = "OnSubFieldsComplete" }, new { @id = "SubColForm", @class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(m => m.SubOrganizationID)
                            @Html.HiddenFor(m => m.SubsriptionID, new { @id = "SubscriptionID" });
                            @Html.HiddenFor(m => m.OrganizationID)
                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Field Name<span class="danger">*</span></label>
                                    @Html.DropDownListFor(m => m.FieldName, new SelectList(Model.ColumnsList, "Expression", "text"), "--Select--", new { @class = "form-control", @id = "Name" })
                                </div>
                                <div class="col-sm-7 orgsorerror">
                                    @Html.ValidationMessageFor(m => m.FieldName, "", new { @class = "red" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Field Value<span class="danger">*</span></label>
                                    @Html.TextBoxFor(m => m.FieldValue, new { @class = "form-control novalue", @placeholder = "Enter Field Value", @id = "FieldValue" })
                                </div>
                                <div class="col-md-3 orgsorerror">
                                    <span id="TypeHelp"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-10">
                                    <button type="submit" class="btn btn-theme" id="SubSave">Save</button>
                                    @if (Model.ID == 0)
                                    {
                                        <button type="reset" class="btn btn-theme reverse" id="ResetBtn">Reset</button>
                                    }
                                    <button type="button" class="btn btn-theme decline" id="Cancel">Cancel</button>
                                </div>
                            </div>
                        }
                        <div id="SpecificSubCoulmns">
                            @if (Model.SubOrganizationID != 0)
                            {
                                {
                                    Html.RenderAction("SpecificSubCoulmns", "Organization", new { SubID = Model.SubsriptionID });
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="dialog-box AddSubDlg"></div>
<script>
    function OnSubComplete(e) {
        var source = $('#Sources :selected').val();
        if ('@Model.ID' == 0) {
            $('#SubReset').click();
        }
        $('#SubForms').removeClass('disabled');
        $('#Subscriptions').removeClass('active');
        $('#SubForms').addClass('active');
        opener.location.reload();
        var orgid = e.sID.split('-')[1];
        var SubID = e.sID.split('-')[0];
        $('#SubscriptionForm').hide();
        $('#Form').show();
        $('#SubscriptionID').val(SubID);
        $('#SubID').val(e.sID.split('-')[0]);
        $.ajax({
            url: '@Url.Action("SpecificSubscriptions", "Organization")',
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            data: { OrgID: orgid, SourceID:source },
            cache: false,
            success: function (data) {
                $('#SpecificSubscriptions').empty();
                $('#SpecificSubscriptions').html(data);
            },
            error: function (data) { }
        });
        if ('@Model.ID' != 0) {
            if (e != "0") {
                CustomMessage(e.ResponseMessage, e.Status);
                
            }
            else {
                CustomMessage(e.ResponseMessage, e.Status);
        
            }
        }
        else {
            if (e != "0") {
                $(".AddSubDlg").unblock;
                opener.location.reload();
                CustomMessage(e.ResponseMessage, e.Status);

                $.ajax({
                    url: '@Url.Action("SpecificSubscriptions", "Organization")',
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    datatype: "html",
                    data: { OrgID: orgid },
                    cache: false,
                    success: function (data) {
                        $('#SpecificSubscriptions').empty();
                        $('#SpecificSubscriptions').html(data);
                    },
                    error: function (data) { }
                });
                $(".AddSubDlg").unblock;
                    opener.location.reload();
                CustomMessage(e.ResponseMessage, e.Status);
            }
            else {
                opener.location.reload();
                CustomMessage(e.ResponseMessage, e.Status);
         
            }

        }
        //$('#SubForm select').val('');
        //$('#dvPreview').hide();
        //$(".UploadLogo").val('')
        @*if ('@Model.OrganizationID' > 0) {

        }
    else {
            $('#Sources').html('<option value="">--Select--</option>');
    }*@
        //$('#Types').html('<option value="">--Select--</option>');
        //$('#Classes').html('<option value="">--Select--</option>');
    }
    function OnSubFieldsComplete(e) {
        var subid = e.split('-')[0];
        $('#SubscriptionID').val(subid);
        var OrgID = '@Model.SubOrganizationID';
        $.ajax({
            url: '@Url.Action("SpecificSubCoulmns", "Organization")',
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            data: { SubID: subid },
            cache: false,
            success: function (data) {
                $('#SpecificSubCoulmns').empty();
                $('#SpecificSubCoulmns').html(data);
            },
            error: function (data) { }
        });
        opener.location.reload();
        $('#FieldName').val();
        $('#FieldValue').val();

        if (e != "0") {
            var editval = e.split('-')[1];
            if (editval == "Edit") {
                $(".AddSubDlg").unblock();
                opener.location.reload();
                CustomMessage(e.ResponseMessage, e.Status);

            }
            else {
                $(".AddSubDlg").unblock();
                opener.location.reload();
                CustomMessage(e.ResponseMessage, e.Status);
            }
            $(".AddSubDlg").unblock();
            opener.location.reload();
            CustomMessage(e.ResponseMessage, e.Status);
        }
        else {
            $(".AddSubDlg").unblock();
            opener.location.reload();
            CustomMessage(e.ResponseMessage, e.Status);
        }
    }
    $('#SubCancel').click(function () {
        window.close();
    });
    $('#Cancel').click(function () {
        window.close();
    });
    //RESET BUTTON CLICK
    $('#SubReset').click(function () {
        if ('@Model.ID' == 0) {
            $('#Status').val(10);
            $('#SubForm')[0].reset();
            $('#SubForm .orgsorerror').find('span').html('');
        }
    });
    $('#ResetBtn').click(function () {
        //$('.specificForm').find('input:text').val(''); - this is not working
        $('select option:selected').removeAttr('selected');
        $('.novalue').val("");
    });
    $('#SubColReset').click(function () {
        $('#SubColForm')[0].reset();
        $('#SubColForm .orgsorerror').find('span').html('');
    });
</script>
