@model XIDNA.ViewModels.VMResultList
@using XIDNA.ViewModels
@*@{
        Layout = "~/Views/Shared/_PopupLayout.cshtml";
    }*@
<script>
    $(document).ready(function () {
        var table = $('#ReportResultList').dataTable({
            "paging": true,
            "bProcessing": true,
            "bServerSide": true,
            "sAjaxSource": "@Html.Raw(@Url.Action("GetReportResult", "Inbox", new { ReportID = Model.ReportID, SearchText = Model.SearchText, ShowType = EnumLocations.Dashboard.ToString(), BaseID = 0 }))",
            "aaSorting": [[1, 'desc']],
            "sDom": 'r<"dtable-header"lf><"datatable-scroll"t><"dtable-footer"ip>', 'bJQueryUI': false,
            "autoWidth": false,
        });
        var idname = '@Model.QueryName.Replace(" ", "_")';
        $("#GridGraphClose-" + idname).click(function () {
            var Type = $(this).attr('data-Type');
            var Name = $(this).attr('data-name');
            $('input[data-id=' + Name + ']').prop('checked', false);
            var visibility = $(this).closest('.portlet').attr('data-id');
            visibility = visibility.replace("true", "false");
            $(this).closest('.portlet').attr('data-id', visibility);
            $(this).closest('.portlet').hide();
            var Rows = $('.sortable').find('.portlet');
            var ReportIDs = new Array();
            for (i = 0; i < Rows.length; i++) {
                var Row = Rows[i].attributes;
                for (j = 0; j < Row.length; j++) {
                    if (Row[j].name == "data-id") {
                        id = Row[j].nodeValue;
                    }
                }
                var type = id.split('-')[0];
                if (type == "Row") {
                    var ids = "";
                    var circles = $('.KPICircles');
                    for (k = 0; k < circles.length; k++) {
                        var circle = circles[k].attributes;
                        for (l = 0; l < circle.length; l++) {
                            if (circle[l].name == "data-id") {
                                ids = ids + circle[l].nodeValue + ",";
                            }
                        }
                    }
                    ids = ids.substring(0, ids.length - 1);
                    id = "{" + ids + "}"
                }
                ReportIDs.push(id);
                var RowData = {
                    ColOrder: ReportIDs, UserID: parseInt(@Model.UserID)
                }
            }
            $.ajax({
                url: '@Url.Action("SaveColSettings", "Inbox")',
                type: 'POST',
                data: JSON.stringify(RowData),
                contentType: "application/json; charset=utf-8",
                datatype: 'JSON',
                cache: false,
                success: function (data) {
                },
                error: function (data) {
                }
            });
        })
        $('#@Model.QueryName.Replace(" ","_")-ddlClassGridChart').change(function () {
            var ClassValue = $('#@Model.QueryName.Replace(" ","_")-ddlClassGridChart').val();
            var DateValue = $('#@Model.QueryName.Replace(" ","_")-ddlDateGridChart').val();
            $.ajax({
                url: '@Url.Action("GetGridFilteredData", "Inbox")',
                type: 'GET',
                cache: false,
                async: false,
                contentType: 'application/json; charset=utf-8',
                data: { ReportID: '@Model.QueryID', ClassValue: ClassValue, DateValue: DateValue },
                success: function (data) {
                    var result = $(data).find('.DashGridData');
                    $('.DashGridData').empty();
                    $('.DashGridData').html(result.html());
                    $('#DashboardQueryPreview').dataTable();
                }
            });
        });
        $('#@Model.QueryName.Replace(" ","_")-ddlDateGridChart').change(function () {
            var ClassValue = $('#@Model.QueryName.Replace(" ","_")-ddlClassGridChart').val();
            var DateValue = $('#@Model.QueryName.Replace(" ","_")-ddlDateGridChart').val();
            $.ajax({
                url: '@Url.Action("GetGridFilteredData", "Inbox")',
                type: 'GET',
                cache: false,
                async: false,
                contentType: 'application/json; charset=utf-8',
                data: { ReportID: '@Model.QueryID', ClassValue: ClassValue, DateValue: DateValue },
                success: function (data) {
                    var result = $(data).find('.DashGridData');
                    $('.DashGridData').empty();
                    $('.DashGridData').html(result.html());
                    $('#DashboardQueryPreview').dataTable();
                }
            });
        });
    });
</script>
<style>
    .GridData select {
        margin-top: -10px;
    }
</style>
<div class="box">
    <div class="box-header with-border">
        <h5 class="box-title">@Model.ShowAs</h5>
        <div class="pull-right box-tools form-inline">
            @Html.DropDownList("ddlBarChart", new SelectList(@Model.ClassDDL, "Value", "text", ""), "-Select Class-", new { @class = "form-control GridClassDropDown", @id = @Model.QueryName.Replace(" ", "_") + "-ddlClassGridChart" })

            @Html.DropDownList("ddlDateBarChart", new SelectList(@Model.DateDDL, "Value", "text", ""), "-Select Date-", new { @class = "form-control GridDateDropDown", @id = @Model.QueryName.Replace(" ", "_") + "-ddlDateGridChart" })

            <!--@*<a href="#" class="btn-minimize btn-default"><i class="fa fa-angle-down"></i></a>*@
            <a href="#" class="btn-close btn-default" id="GridGraphClose-@Model.QueryName.Replace(" ","_")" data-type="Grid" data-name="@Model.QueryName.Replace(" ","_")"><i class="fa fa-close"></i></a>-->
            <button class="btn btn-box-tool" id="GridGraphClose-@Model.QueryName.Replace(" ","_")" data-type="Grid" data-name="@Model.QueryName.Replace(" ","_")" data-widget="remove" data-toggle="tooltip" title="Remove"><i class="fa fa-times"></i></button>
        </div>
    </div>

    <div class="box-body DashGridData">
        <div class="table-clean">
            <table id="ReportResultList" class="table table-striped custom-table dark-head dark-head2 table-condensed">
                <thead>
                    <tr>
                        @foreach (var items in Model.Headings)
                        {
                            <th>@items</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ResultListDisplayType == 0 && Model.Rows.Count() > 0)
                    {
                        foreach (var item in @Model.Rows)
                        {
                            <tr>
                                @foreach (var value in item)
                                {
                                    <td>@value</td>
                                }
                            </tr>
                        }
                    }
                </tbody>
            </table>

        </div>
    </div>
</div>






