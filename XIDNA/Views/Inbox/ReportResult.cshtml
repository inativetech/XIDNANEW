@model XIDNA.ViewModels.VMResultList
@using Microsoft.AspNet.Identity
@using XIDNA.Models
@using XIDNA.ViewModels
@{
    if (Model.PreviewType == null)
    {
        Layout = "~/Views/Shared/_XIDynawareLayout.cshtml";
    }
    if (Model.PreviewType == "Popup")
    {

    }
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
    //int Value = User.Identity.GetPaginationCount();
}

<link href="~/Content/theme.default.css" rel="stylesheet" />
<script src="~/Scripts/jquery.tablesorter.js"></script>
<script src="~/Scripts/jquery.tablesorter.widgets.js"></script>
<script>
    $(document).ready(function()
    {
        if('@Model.Query' != null && '@Model.Query.Contains("{XIP|")' == 'True')
        {
            var iOneClickID = '@Model.QueryID';
            $.ajax({
                type: 'get',
                url: '@Url.Action("GetXIOneClickByID", "Inbox")',
                contentType: "application/json; charset=utf-8",
                data: { iOneClickID:iOneClickID ,sType: "OneClick"},
                cache: false,
                async: false,
                dataType: 'html',
                success: function (data) {
                    $('#XICParams').html(data);
                    $("#XICParams").dialog({
                        modal: true,
                        width: 600
                    });
                }
            });
        }
    })
    var AllLeads = @Html.Raw(Json.Encode(Model.AllLeads));
    var table;
    var Fields = "";
    var Optrs = "";
    var Values = "";
    var Type="";
    var SearchText="";
    var SubmitClick = 0;
    var NVPairs = [];
    var BaseID = '@Model.BaseReportID';
    if('@Model.IsNaturalSearch'=="True"){
        Type="NaturalSearch";
    } else if('@Model.IsFilterSearch'=="True"){
        Type="FilterSearch";
    }
    else{
        Type='@Model.SearchType';
        SearchText = '@Model.SearchText';
    }
    var SelectedFields=new Array();
    var FieldGroup = @Html.Raw(Json.Encode(Model.FilterGroup));
    function GetDataTable(Fields,Optrs,Values,Type,NVPairs){
        if('@Model.ResultListDisplayType'==1){
            var SortColumns = @Html.Raw(Json.Encode(Model.TableColumns));
            var Scripts = @Html.Raw(Json.Encode(Model.Scripts));
            var expColumns = new Array();
            for (var i = 0; i < SortColumns.length; i++) {
                var obj = new Object();
                obj.sName = SortColumns[i];
                obj.bSortable = true
                expColumns.push(obj);
            }

            table = $('#ReportResultList-@Model.ReportID').dataTable({
                "destroy": true,
                "paging": true,
                "bProcessing": true,
                "bServerSide": true,
                "pageLength": 100,
                "lengthMenu": [5, 10, 20, 50, 75, 100],
                @*"pageLength": parseInt('@Value'),*@
                "aoColumns": expColumns,
                "sAjaxSource": "@Html.Raw(Url.Action("GetReportResult", "Inbox", new { ReportID = Model.ReportID, SearchText = Model.SearchText, SearchType = Model.SearchType, BO = Model.BO, BaseID = 1}))",
                //"aaSorting": [[1, 'desc']],
                "sDom": 'r<"dtable-header"l><"datatable-scroll"t><"dtable-footer"ip>', 'bJQueryUI': false,
                "autoWidth": false,
                "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                    for(i=0;i<aData.length;i++){
                        if(Scripts[i]!=null && Scripts[i].length>0){
                            var Scr = Scripts[i].replace(/{/g , "").replace(/}/g , "").replace(/,/g,"+\",\"+");
                            //Scr = "if(Lead.iStatus == 9){ \"<u>Success</u>\";}else{ \"Failure\";}";
                            var id = aData[0];
                            var Leads = $.map(AllLeads, function(obj, index) {
                                if(obj.ID == id) {
                                    return obj;
                                }
                            })
                            if(Leads.length>0){
                                var Lead = Leads[0];
                                var Res = eval(Scr);
                                //var Res = fncScript(Scr, Lead[0]);
                                $('td:eq('+i+')', nRow).html(Res);
                            }
                        }
                    }
                    return nRow;
                },
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "Fields", "value": Fields });
                    aoData.push({ "name": "Optrs", "value": Optrs });
                    aoData.push({ "name": "Values", "value": Values });
                    aoData.push({ "name": "Type", "value": Type });
                    aoData.push({ "name": "SearchText", "value": SearchText });
                    if(NVPairs.length != 0)
                    {
                        aoData.push({ "name": "NVPairs", "value": JSON.stringify(NVPairs) });
                    }
                },
            });
        }
        else{
            $("#ReportResultList-@Model.ReportID").tablesorter();
        }
    }
    //function fncScript(Scr, Lead){
    //    var code = Scr;
    //    var d = eval(code);
    //    return d;
    //}
    $(document).ready(function () {
        ContentURL = '@Url.Action("GetXiLinkContent", "XiLink")';
        DataURL = '@Url.Action("GetXiLinkData", "XiLink")';
        PopupURL = '@Url.Action("GetPopupDetails", "XiLink")';
        PopupORDialogURL = '@Url.Action("GetPopupORDialog", "XiLink")';
        DialogURL = '@Url.Action("GetDialog", "XiLink")';
        SaveEditBOURL = '@Url.Action("SaveBO", "XiLink")';
        SemanticURL = '@Url.Action("GetSemanticDetails", "XiLink")';
        ComponentURL = '@Url.Action("LoadComponentByID", "XIComponents")';
        StepURL = '@Url.Action("GetStepContent", "XiLink")';
        $('.pophovercontainer').hide();
        $('body').popover({
            trigger: 'hover',
            //placement: 'right',
            html: true,
            selector: '#ReportResultList-@Model.ReportID td',
            content: function () {
                var MouseOver = $('#ReportResultList-@Model.ReportID th').eq($(this).index()).attr('data-mover');
                var ColumnName = $('#ReportResultList-@Model.ReportID th').eq($(this).index()).text();
                if (MouseOver.length>0 || ColumnName=="ID") {
                    var ID = $(this).text();
                    var BOID = "@Model.BOID";
                    var BOName = MouseOver;
                    var LeadID = $(this).text();
                    var pvalue = {
                        BOID: BOID,
                        ID: parseInt(ID),
                        BOName:BOName,
                        ColumnName: ColumnName
                    }
                    $.ajax({
                        url: '@Url.Action("ListHover", "XiLink")',
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        datatype: "json",
                        cache: false,
                        async: true,
                        data: JSON.stringify(pvalue),
                        success: function (data) {
                            if(data){
                                var rowvalues = "";
                                rowvalues = rowvalues + '<div class="popover-time">';
                                rowvalues = rowvalues + '<table class="table m-b-none">';
                                rowvalues = rowvalues + '<tbody>';
                                rowvalues = rowvalues + '<thead>';
                                rowvalues = rowvalues + '</tr>';
                                if (data) {
                                    for (i = 0; i < data.NVPairs.length; i++) {
                                        //data[i].sValue = 'http://192.168.7.7/Converter/Content/images/lead-logo.png';
                                        rowvalues = rowvalues + '<tr>';
                                        //rowvalues = rowvalues + '<td class="fc-sky">' + data[i].sName + '</td>';
                                        //rowvalues = rowvalues + '<td>|</td>';

                                        var IsImage = false;
                                        var BOFields = data.Definition.BOFields;
                                        for(j=0;j<BOFields.length;j++){
                                            if(data.NVPairs[i].sName == BOFields[j].Name){
                                                var FileType = BOFields[j].FKiFileTypeID;
                                                if(FileType>0){
                                                    IsImage = true;
                                                }
                                            }
                                        }
                                        if(IsImage){
                                            rowvalues = rowvalues + '<td><img src="' + data.NVPairs[i].sValue + '"></td>';
                                        }
                                        else{
                                            rowvalues = rowvalues + '<td>' + data.NVPairs[i].sValue + '</td>';
                                        }
                                        //rowvalues = rowvalues + '<td><img src="/Content/Files/png/2018/3/16/images_1_168_137.png"></td>';
                                        rowvalues = rowvalues + '</tr>';
                                    }
                                }
                                //else {
                                //    rowvalues = rowvalues + '<tr>';
                                //    rowvalues = rowvalues + '<td> No foregin key group </td>';
                                //    rowvalues = rowvalues + '</tr>';
                                //}
                                rowvalues = rowvalues + '</thead>';
                                rowvalues = rowvalues + '</tbody>';
                                rowvalues = rowvalues + '</table>';
                                rowvalues = rowvalues + '</div>';
                                $(".pophovercontainer").empty();
                                $(".pophovercontainer").append(rowvalues);
                            }
                            else{
                                $(".pophovercontainer").empty();
                            }
                        },
                        error: function (data) {
                            $(".pophovercontainer").empty();
                        }
                    });
                    var rowdata = $('.pophovercontainer').html();
                    return $(rowdata).html();
                }
            },
            container: 'body',
            placement: 'auto top'
        });

        var poppopups = new Array();
        var respopups = new Array();
        var SearchString="";

        var availableTags = Object.keys(FieldGroup);
        //$( "#QuickSearchTBox" ).autocomplete({
        //    source: availableTags,
        //    select: function (event, ui) { GetSearchResults() }
        //});
        function split( val ) {
            return val.split(" ");
        }
        function extractLast( term ) {
            return split( term ).pop();
        }

        $( "#QuickSearchTBox" )
          // don't navigate away from the field on tab when selecting an item
          .on( "keydown", function( event ) {
              if ( event.keyCode === $.ui.keyCode.TAB &&
                  $( this ).autocomplete( "instance" ).menu.active ) {
                  event.preventDefault();
              }
          })
          .autocomplete({
              minLength: 0,
              source: function( request, response ) {
                  // delegate back to autocomplete, but extract the last term
                  response( $.ui.autocomplete.filter(
                    availableTags, extractLast( request.term ) ) );
              },
              focus: function() {
                  // prevent value inserted on focus
                  return false;
              },
              select: function( event, ui ) {
                  var terms = split( this.value );
                  // remove the current input
                  terms.pop();
                  // add the selected item
                  terms.push( ui.item.value );
                  // add placeholder to get the comma-and-space at the end
                  terms.push( "" );
                  this.value = terms.join( " " );
                  SelectedFields.push(ui.item.value);
                  return false;
              }
          });
        var changeTimer = false;
        $('#QuickSearchTBox').on("keyup", function () {
            if(changeTimer !== false) clearTimeout(changeTimer);
            changeTimer = setTimeout(function(){
                GetSearchResults();
                changeTimer = false;
            },300);
        });
        function GetSearchResults(){
            SearchText = $('#QuickSearchTBox').val();
            if(SearchText.length==0){
                SelectedFields=[];
            }
            for(i=0;i<SelectedFields.length;i++){
                var SearchField = FieldGroup[SelectedFields[i]];
                if(SearchField){
                    SearchText = SearchText.replace(SelectedFields[i]+" ",SearchField+" ");
                }
            }
            if ('@Model.ResultListDisplayType' == 0){
                SubmitClick = 1;
                GetRecords(Fields,Optrs,Values, Type, SearchText);
            }
            else{
                GetDataTable(Fields,Optrs,Values, Type, SearchText,"");
            }
        }
        if('@Model.Query' != null && '@Model.Query.Contains("{XIP|")' == 'True')
        {
            $('#XIOneClickParamsBtn').click(function(){
                $("#XICParams").dialog('close');
                $('.NVPairs').each(function () {
                    var Name; var Value;
                    $(this).find('label').each(function (i, obj) {
                        Name = $(this).attr('data-sName');

                    });
                    $(this).find('input').each(function (i, obj) {
                        var Nname = obj.name;
                        if (Nname == "Names") {
                            Value = $(this).val();
                        }
                    });
                    if ((Name && Name.length > 0) || (Value && Value.length > 0)) {
                        NVPairs.push(Name + "-" + Value);
                    }
                });
                GetDataTable(Fields,Optrs,Values,null,NVPairs);
            });
        }
        else
        {
            GetDataTable(Fields,Optrs,Values,null,"");
        }

        $('#DFSubmit').click(function(){
            SubmitClick = 1;
            pageIndex = 1;
            Fields = "";
            Optrs = "";
            Values = "";
            DValue ="";
            var j='@Model.SrchFCount';
            for(i=0;i<j;i++){
                var Value = $('#'+i+'-Value').val();
                if(Value.length>0){
                    var Field = $('#'+i+'-FieldName').val();
                    var Optr = $('#'+i+'-Operator').val();
                    var DValue = $('#'+i+'-Value2').val();
                    if(Optr=="Between"){
                        Values = Values + Value+"_"+DValue+",";
                    }
                    else{
                        Values = Values + Value+",";
                    }
                    Fields = Fields + Field+",";
                    Optrs = Optrs + Optr+",";
                }
            }
            Fields = Fields.substring(0, Fields.length-1);
            Optrs = Optrs.substring(0, Optrs.length-1);
            Values = Values.substring(0, Values.length-1);
            if ('@Model.ResultListDisplayType' == 0){
                GetRecords(Fields,Optrs,Values,Type);
            }
            else{
                GetDataTable(Fields,Optrs,Values,Type,NVPairs);
            }
        });
        $('#DFReset').click(function(){
            $('#DynamicForm input[type="text"]').val('');
            $('#DynamicForm select').val('=');
            $('.BetweenDate').hide();
            if ('@Model.ResultListDisplayType' == 0){
                SubmitClick = 1;
                Fields = "";
                Optrs = "";
                Values = "";
                GetRecords("","","",Type);
            }
            else{
                GetDataTable("","","", Type,"");
            }
        });
        $('#ReportResultList-@Model.ReportID tbody').on('click', 'tr', function () {
            var Headings =@Html.Raw(Json.Encode(Model.Headings));
            if('@Model.ResultListDisplayType'==1)
            {
                var tr = $(this).closest('tr');
                var data1 = table.fnGetData(tr);
            }
            else{
                var data1 = $(this).children("td").map(function() {
                    return $(this).text();
                }).get();
            }
            var id;
            if(data1){
                for (var i = 0; i < Headings.length; i++) {
                    if (Headings[i] == "ID") {
                        id = data1[i];
                    }
                }
                var iInstanceID = parseInt(id);
                if(iInstanceID>0){
                    if('@Model.IsRowClick'=="True"){
                        XIRun(null,'@Model.XiLinkID', parseInt(iInstanceID), null, '@Model.BO', false, parseInt('@Model.BOID'));
                    }
                }
                @*var selid = parseInt(id);
                if(selid>0){
                    if('@Model.IsPopup'=="True"){
                        if('@Model.ActionType'=="Popup"){
                            if (poppopups.length > 0) {
                                for (i = 0; i < poppopups.length; i++) {
                                    poppopups[i].close();
                                }
                            }
                            @*$('#PLPLeadID').val(selid);
                            $('#PLPQueryID').val('@Model.ActionReportID');
                            var popwindow = window.open('', 'LPW', "scrollbars=1,resizable=1,width=" + screen.width + ", height=" + screen.height);
                            document.getElementById('LPForm').submit();
                            var url = "@Url.Action("GetLeadPopup", "Lead")?LeadID=" + selid +"&PopupID="+ '@Model.ActionReportID';
                            var popwindow = window.open(url, '_blank',"scrollbars=1,resizable=1,width=" + screen.width + ", height=" + screen.height);
                            poppopups.push(popwindow);
                            popwindow.moveTo(0, 0);
                        }
                        else if('@Model.ActionType'=="ResultList"){
                            if (respopups.length > 0) {
                                for (i = 0; i < respopups.length; i++) {
                                    respopups[i].close();
                                }
                            }
                            var url = "@Url.Action("InnerReportResult", "Inbox")?ReportID="+ '@Model.ActionReportID' + "&ParentID=0&IsParent=false&PageIndex=1";
                            var reswindow = window.open(url, '_blank',"scrollbars=1,resizable=1,width=" + screen.width + ", height=" + screen.height);
                            respopups.push(reswindow);
                            reswindow.moveTo(0, 0);
                        }
                    }
                }*@
            }
        });
        var prepopups = new Array();
        $('#ReportResultList-@Model.ReportID').on('click', 'th', function () {
            var ReportID=$(this).attr('id');
            var codes = "";
            if (ReportID > 0 ) {
                var url = '@Url.Action("InnerReportResult", "Inbox")?ReportID=' + ReportID + '&ParentID=' + 0 + '&IsParent=' + false + '&PageIndex=1' + '&ReportColumns=' + codes+"&BaseID="+0;
                if (prepopups.length > 0) {
                    for (j = 0; j < prepopups.length; j++) {
                        prepopups[j].close();
                    }
                }
                var preview = window.open(url, '_blank', "scrollbars=1,resizable=1,width=" + screen.width + ", height=" + screen.height);
                prepopups.push(preview);
            }
        });
    });
    var pageIndex = 1;
    var PageCount = 40;
    $(window).scroll(function () {
        if ($(window).scrollTop() == $(document).height() - $(window).height()) {
            SubmitClick = 0;
            GetRecords(Fields,Optrs,Values,Type,SearchText);
        }
    });
    function GetRecords(Fields,Optrs,Values,Type,SearchText) {
        if('@Model.ResultListDisplayType'==0){
            pageIndex++;
            var sTable = "";
            var QueryID='@Model.QueryID';
            if(SubmitClick==1){
                pageIndex=1;
            }
            var QValues = {
                ReportID: QueryID,
                PageIndex: pageIndex,
                Fields:Fields,
                Optrs:Optrs,
                Values:Values,
                SearchType:Type,
                SearchText:SearchText,
                BO:'@Model.BO'
            }
            $.ajax({
                url: '@Url.Action("RunUserQuery", "Inbox")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                datatype: "JSON",
                cache: false,
                async: false,
                //data: { PageIndex: pageIndex,QueryID:QueryID },
                data: JSON.stringify(QValues),
                success: function (data) {
                    for(i=0;i<data.length;i++)
                    {
                        sTable = sTable + "<tr role='row'>";
                        for(j=0;j<data[i].length;j++)
                        {
                            @*if('@Model.IDExists'=="True")
                            {
                                sTable = sTable +"<td>" + data[i][j]+ "</td>";
                            }
                            else
                            {
                                if(j==0)
                                {
                                    sTable = sTable +"<tdstyle='display:none'>" + data[i][j]+ "</td>";
                                }
                                else{
                                    sTable = sTable +"<td>" + data[i][j]+ "</td>";
                                }
                            }*@
                            sTable = sTable +"<td>" + data[i][j]+ "</td>";
                        }
                        sTable = sTable + "</tr>";
                    }
                    if(SubmitClick==1){
                        $("#ReportResultList-@Model.ReportID tbody").html(sTable);
                    }
                    else{
                        $("#ReportResultList-@Model.ReportID").append(sTable);
                    }
                    $("#ReportResultList-@Model.ReportID").trigger("updateAll");
                }
            });
        }
    }
</script>

<style>
    .r-c-b {
        width: 12px;
        height: 12px;
        color: red;
        display: block;
        background: #a02020;
    }

    .subnav {
        margin-bottom: 10px;
    }

    .targetredcolor {
        background: #9a1919;
        width: 75px;
        height: 12px;
        display: inline-block;
        margin-left: 10px;
    }

    .targetgreencolor {
        background: #4b752b;
        width: 75px;
        height: 12px;
        display: inline-block;
        margin-left: 10px;
    }

    #QuickSearchTBox {
        width: 500px;
    }

    .ui-autocomplete {
        background: black;
        color: white;
    }

    .popover {
        background-color: #333740;
        border-radius: 2px;
        border: 1px solid #5e5e5e;
        font-size: 11px;
    }

    .popover-content {
        padding: 0px 2px;
    }

    .popover.top > .arrow:after {
        border-top-color: #333740;
        border-width: 8px;
        bottom: -6px;
    }

    .popover-content .table > tbody > tr > td, .popover-content .table > tbody > tr > th, .popover-content .table > tfoot > tr > td, .popover-content .table > tfoot > tr > th, .popover-content .table > thead > tr > td, .popover-content .table > thead > tr > th {
        padding: 3px;
    }
</style>
<form id="LPForm" method="post" action="@Url.Action("GetLeadPopup", "Lead")" target="LPW">
    <input type="hidden" name="leadid" id="PLPLeadID" />
    <input type="hidden" name="QueryID" id="PLPQueryID" />
</form>
<section class="content-header hedr">
    @if (Model.QueryIcon != null && Model.QueryIcon.Length > 0)
    {
        <h1 class="pull-left m-b-10"><i class="@Model.QueryIcon" aria-hidden="true"></i> - @Model.QueryName</h1>
    }
    else
    {
        <h1 class="pull-left m-b-10">@Model.QueryName</h1>
    }
    @if (Model.SearchType == "NaturalSearch" || Model.IsNaturalSearch)
    {
        <input type="text" class="form-control input-xlarge" name="QuickSearch" id="QuickSearchTBox" placeholder="Search Here" style="margin:0 auto" />
    }
    <ol class="breadcrumb">
        @if (Model.IsExport)
        {
            @Html.ActionLink("Export", "ToDataTable", "Inbox", new { ReportID = Model.ReportID, Name = Model.QueryName, Type = "Export" }, new { @class = "savebtn btn btn-theme btn-xs" })
        }
    </ol>
</section>

<div class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-body">
                    <div id="DynamicForm">
                        @if (Model.SearchType == "FilterSearch" || Model.IsFilterSearch)
                        {
                            Html.RenderAction("QueryDynamicForm", "Inbox", new { OneClickID = Model.QueryID, BOID = Model.BOID });
                        }
                    </div>
                    <div class="table-clean">
                        <table id="ReportResultList-@Model.ReportID" class="table table-striped custom-table dark-head dark-head2 table-condensed table-hover tablesorter">
                            <thead>
                                <tr>
                                    @for (int k = 0; k < Model.Headings.Count(); k++)
                                    {
                                        @*<th id="@Model.HeadingReports[k]">@Model.Headings[k]</th>*@
                                        <th data-mover="@Model.MouseOverColumns[k]">@Model.Headings[k]</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.ResultListDisplayType == 0)
                                {
                                    foreach (var item in @Model.Rows)
                                    {
                                        <tr>
                                            @foreach (var value in item)
                                            {
                                                <td>@Html.Raw(value)</td>
                                            }
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="pophovercontainer popover-time">
    @*<div class="po-markup">
        </div>*@
</div>
<div id="XICParams"></div>