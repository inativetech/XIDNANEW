@*XIDynaware Code*@
@model XIDNA.Models.XIDocTypes
@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
}
<script>
    $(document).ready(function () {
        //$('#SuccessMsg').hide();
        //$('#ErrorMsg').hide();
        // $(".StatusMessages").hide();
    });
</script>
<section class="content-header hedr">
    @if (Model.ID == 0)
    {
        <h1> Add Document Settings </h1>
    }
    else
    {
        <h1> Edit Document Settings </h1>
    }
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Document Settings</a></li>
        <li class="active">Home</li>
    </ol>
</section>
<section class="content">
    <div class="alert alert-danger" id="BootstrpError" style="display:none;">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
    </div>
    <div class="alert alert-success" id="BootstrpAlertSuccess" style="display:none;">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
    </div>
    <div class="row">
        <div class="box box-primary">
            <div class="box-body">
                <div class="innerborder">
                    @* SaveBO *@
                    @using (Ajax.BeginForm("CreateDocSettings", "File", new AjaxOptions { OnBegin = "OnFormBegin()", HttpMethod = "POST", OnSuccess = "OnComplete" }, new { @id = "FilesForm", @class = "form-horizontal" }))
                    {
                        @Html.ValidationSummary(true);
                        @Html.HiddenFor(m => m.ID)
                        <div id="clear-text">
                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">File Extension<span class="danger">*</span></label>
                                    @Html.TextBoxFor(model => model.Type, new { @placeholder = "Enter Type Here", @class = "form-control" })
                                </div>
                                <div class="col-sm-4 taberrormsg">
                                    @Html.ValidationMessageFor(m => m.Type, null, new { @class = "red" })
                                </div>
                            </div>
                            @if (Model.ID == 0)
                            {
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label for="inputEmail" class="gn">File Path<span class="danger">*</span></label>
                                        @*<input type="file" id="flup" onchange="getfolder(event)" webkitdirectory mozdirectory msdirectory odirectory directory multiple />*@
                                        @Html.TextBoxFor(model => model.Path, new { @placeholder = "Enter Path Here", @class = "form-control", @id = "UploadPath" })
                                    </div>
                                </div>


                            }
                            else
                            {
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label for="inputEmail" class="gn">File Path<span class="danger">*</span></label>
                                        @Html.TextBoxFor(model => model.Path, new { @placeholder = "Enter Type Here", @class = "form-control" })
                                    </div>
                                    <div class="col-sm-4 taberrormsg">
                                        @Html.ValidationMessageFor(m => m.Path, null, new { @class = "red" })
                                    </div>
                                </div>

                            }
                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Sub Directory<span class="danger"></span></label>
                                    @Html.DropDownListFor(m => m.SubDirectory, new SelectList(new List<Object>{
                                    new {key=0, value="---------Select---------"},
                                               new { key= "None" , value = "None" },
                                               new { key= "Year/Month/Day" , value = "YMD" }
                    }, "key", "Value"), new { @class = "form-control", @id = "SubDirectory" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Status<span class="danger"></span></label>
                                    @Html.DropDownListFor(m => m.StatusTypeID, new SelectList(new List<Object>{
                                               new { key= 10 , value = "Active" },
                       new { key= 20 , value = "Inactive" }
                    }, "key", "Value"), new { @class = "form-control", @id = "Status" })
                                </div>
                            </div>

                            @*<div id="SubDirectoryPath" style="display:none">
                                    <div class="form-group">
                                        <div class="col-md-3">
                                            <label for="inputEmail" class="gn">Sub Directory Path<span class="danger">*</span></label>
                                            @Html.TextBoxFor(model => model.SubPath, new { @placeholder = "Enter Path Here", @value = "Year/Month/Day", @class = "form-control", @id = "SubDirectoryPath" })
                                        </div>
                                    </div>
                                </div>*@
                            <div class="form-group">
                                <div class="col-sm-10">
                                    <input type="submit" class="btn btn-theme m-r-10" value="Save" />
                                    <button type="button" class="btn btn-theme m-r-10" id="CancelBO">Cancel</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

</section>
<script type="text/javascript">

    //function getfolder(e) {
    //    var files = e.target.files;
    //    var path = files[0].webkitRelativePath;
    //    var Folder = path.split("/");
    //    $("#UploadPath").val(path);
    //}

    $(document).ready(function () {
        //var sSubDirCount = $("#SubDirectory").val();
        //if (sSubDirCount == '10') {
        //    $("#SubDirectoryPath").show();
        //}
        //else {
        //    $("#SubDirectoryPath").hide();
        //}
        //$('#SubDirectory').on('change', function () {
        //    if (this.value == '10') {
        //        $("#SubDirectoryPath").show();
        //    }
        //    else {
        //        $("#SubDirectoryPath").hide();
        //    }
        //});
        $('#CancelBO').click(function () {
            window.close();
        });
        $('#ResetBoBtn').click(function () {
            $('#FilesForm')[0].reset();
            $('#FilesForm .taberrormsg').find('span').html('');
        });
    })
    function OnFormBegin() {
        $('#FilesForm').block({
            message: '<h4>Saving</h4>',
            blockMsgClass: 'report-success',
        });
    }

    function OnComplete(e) {
        $('#FilesForm').unblock();
        $('#FilesForm')[0].reset();
        opener.location.reload();
        //CustomMessage(e.ResponseMessage, e.Status);
        if (e.Status == false) {
            $("#BootstrpError").show();
            $("#BootstrpError").append("<strong>Failure!</strong> OOPS looks like there is some error");
            $(function () {
                setTimeout(function () {
                    $("#BootstrpError").hide('blind', {}, 500)
                }, 5000);
            });
        }
        else {
            $("#BootstrpAlertSuccess").show();
            $("#BootstrpAlertSuccess").append("<strong>Success!</strong> The File settings has been created successfully.");
            $(function () {
                setTimeout(function () {
                    $("#BootstrpAlertSuccess").hide('blind', {}, 500)
                }, 5000);
            });
        }
    }
</script>






























@*<script>
        $(document).ready(function () {
            var Copypopups = new Array();
            $('#CancelBO').click(function () {
                window.close();
            });
            $('#ResetBoBtn').click(function () {
                $('#FilesForm')[0].reset();
                $('#FilesForm .taberrormsg').find('span').html('');
            });
            $('#CopyBoBtn').click(function () {
                var ID=@Model.BOID;
                if (Copypopups.length > 0) {
                    for (i = 0; i < Copypopups.length; i++) {
                        Copypopups[i].close();
                    }
                }
                var Copybo = window.open('', '_blank', "scrollbars=1,resizable=1,width=" + screen.width + ", height=" + screen.height);
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("CopyBO", "BusinessObjects")',
                    data: { ID: ID },
                    cache: false,
                    async: false,
                    dataType: 'html',
                    success: function (data) {
                        with (Copybo.document) {
                            open();
                            write(data);
                            close();
                        }
                        Copypopups.push(Copybo);
                        Copybo.moveTo(0, 0);
                    }
                });
                  });
        })
        function OnFormBegin() {
            $('#FilesForm').block({
                message: '<h4>Saving</h4>',
                blockMsgClass: 'report-success',
            });
        }

        function OnComplete(e) {
            $('#FilesForm').unblock();
            $('#FilesForm')[0].reset();
            opener.location.reload();
            CustomMessage(e.ResponseMessage, e.Status);
        }
    </script>*@
