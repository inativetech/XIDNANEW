@model XIDNA.Models.cXIUrlMappings
@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
}
<section class="content-header hedr">
    @if (Model.ID == 0)
    {
        <h1> Add XIURL Mapping </h1>
    }
    else
    {
        <h1> Edit XIURL Mapping </h1>
    }
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i>XI URL Mappings </a></li>
        <li class="active">Home</li>
    </ol>
</section>
<section class="content">
    <div class="alert alert-danger" id="BootstrpError" style="display:none;">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
    </div>
    <div class="alert alert-success" id="BootstrpAlertSuccess" style="display:none;">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
    </div>
    <div class="row">
        <div class="box">
            <div class="box-body">
                <div class="innerborder">
                    @using (Ajax.BeginForm("SaveXIUrlMapping", "XIApplications", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnComplete" }, new { @id = "XIUrlForm", @class = "form-horizontal" }))
                    {
                        @Html.ValidationSummary(true);
                        @Html.HiddenFor(m => m.ID)
                        <div id="clear-text">
                            @if (Model.FKiApplicationID == 0)
                            {
                                <div class="form-group" id="XIFKiApplicationDDL">
                                    <div class="col-md-3">
                                        <label for="inputEmail" class="gn"> Application <span class="danger"></span></label>
                                        <select class="form-control" id="ApplicationID" name="FKiApplicationID">
                                            <option value="">--Select--</option>
                                            @foreach (var items in Model.ddlApplications)
                                            {
                                                if (Model.FKiApplicationID == items.Value)
                                                {
                                                <option selected value="@items.Value">@items.text</option>
                                                }
                                                else
                                                {
                                                <option value="@items.Value">@items.text</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <input type="hidden" id="ApplicationID" name="FKiApplicationID" value="@Model.FKiApplicationID" />
                            }
                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Type<span class="danger"></span></label>
                                    @Html.DropDownListFor(m => m.sType, new SelectList(new List<Object>{
                                   new {key= "0" , value = "--Select--" },
                                               new { key= "Application" , value = "Application" },
                       new { key= "QuestionSet" , value = "QuestionSet" }
                    }, "key", "Value"), new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Url Name<span class="danger">*</span></label>
                                    @Html.TextBoxFor(model => model.sUrlName, new { @placeholder = "Enter Url name", @class = "form-control" })
                                </div>
                                <div class="col-sm-4 taberrormsg">
                                    @Html.ValidationMessageFor(m => m.sUrlName, null, new { @class = "red" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Actual Url<span class="danger">*</span></label>
                                    @Html.TextBoxFor(model => model.sActualUrl, new { @placeholder = "Enter Actual Url Name", @class = "form-control" })
                                </div>
                                <div class="col-sm-4 taberrormsg">
                                    @Html.ValidationMessageFor(m => m.sActualUrl, null, new { @class = "red" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Source<span class="danger"></span></label>
                                    @Html.DropDownListFor(m => m.FKiSourceID, new SelectList(Model.SourceList, "Value", "text"), new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">Status<span class="danger"></span></label>
                                    @Html.DropDownListFor(m => m.StatusTypeID, new SelectList(new List<Object>{
                                               new { key= 10 , value = "Active" },
                       new { key= 20 , value = "Inactive" }
                    }, "key", "Value"), new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-10">
                                <input type="submit" class="btn btn-theme" value="Save" />
                                @if (Model.ID == 0)
                                {
                                    <button type="button" class="btn btn-theme reverse" id="ResetXiUrl">Reset</button>
                                }
                                <button type="button" class="btn btn-theme decline" id="CancelXiUrl">Cancel</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
<script type="text/javascript">
    $(document).ready(function () {
        $('#ResetXiUrl').click(function () {
            $('#XIUrlForm')[0].reset();
            $('#XIUrlForm .taberrormsg').find('span').html('');
        });
        $('#CancelXiUrl').click(function () {
            window.close();
        });
    });
    function OnComplete(e) {
        CustomMessage(e.ResponseMessage, e.Status);
    }
</script>